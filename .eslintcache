[{"E:\\Gappy\\Back-End\\Payor-View\\src\\index.js":"1","E:\\Gappy\\Back-End\\Payor-View\\src\\reportWebVitals.js":"2","E:\\Gappy\\Back-End\\Payor-View\\src\\App.js":"3","E:\\Gappy\\Back-End\\Payor-View\\src\\fire.js":"4","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\navbar.jsx":"5","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\home.jsx":"6","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\practice.jsx":"7","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\practices.jsx":"8","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\providers.jsx":"9","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\provider.jsx":"10","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gaps.jsx":"11","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\login.jsx":"12","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\test.jsx":"13","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\members.jsx":"14","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\tmpCBP.jsx":"15","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\not-found.jsx":"16","E:\\Gappy\\Back-End\\Payor-View\\src\\utils\\paginate.js":"17","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\services\\services.js":"18","E:\\Gappy\\Back-End\\Payor-View\\src\\utils\\columns.js":"19","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\progress.jsx":"20","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\headerMain.jsx":"21","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\sessionsByDevice.jsx":"22","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\practiceProfileCard.jsx":"23","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\measureBody.jsx":"24","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\pagination.jsx":"25","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\providerProfileCard.jsx":"26","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\reactTable.jsx":"27","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\globalFilter.jsx":"28","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\responsive\\dash.jsx":"29","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\billCodes.jsx":"30","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\user\\userPage.jsx":"31","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\scheduleAppt.jsx":"32","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\upcomingAppt.jsx":"33","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\complianceAppt.jsx":"34","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\medCompliance.jsx":"35","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\verify.jsx":"36","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\services\\server.js":"37","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\user\\allStarProfiles.jsx":"38","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\common\\header.jsx":"39","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\taskSubmission\\onComplete.jsx":"40","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\forms\\resetPin.jsx":"41","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\forms\\editBilling.jsx":"42","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\tasks\\accordions.jsx":"43","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\user\\profile.jsx":"44","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\taskSubmission\\onSuccess.jsx":"45","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\tasks\\taskAccordion.jsx":"46","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\taskSubmission\\confirmation.jsx":"47","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\services\\demo\\services.js":"48","E:\\Gappy\\Back-End\\Payor-View\\src\\utils\\payorColumns.js":"49"},{"size":659,"mtime":1626285580189,"results":"50","hashOfConfig":"51"},{"size":375,"mtime":1626285580190,"results":"52","hashOfConfig":"51"},{"size":5104,"mtime":1627328093105,"results":"53","hashOfConfig":"51"},{"size":490,"mtime":1626285580188,"results":"54","hashOfConfig":"51"},{"size":1003,"mtime":1626285580165,"results":"55","hashOfConfig":"51"},{"size":10533,"mtime":1628542562028,"results":"56","hashOfConfig":"51"},{"size":6736,"mtime":1626285580166,"results":"57","hashOfConfig":"51"},{"size":4874,"mtime":1626285580167,"results":"58","hashOfConfig":"51"},{"size":5583,"mtime":1626285580168,"results":"59","hashOfConfig":"51"},{"size":6424,"mtime":1626285580167,"results":"60","hashOfConfig":"51"},{"size":10368,"mtime":1626285580162,"results":"61","hashOfConfig":"51"},{"size":2278,"mtime":1626285580163,"results":"62","hashOfConfig":"51"},{"size":1312,"mtime":1626285580187,"results":"63","hashOfConfig":"51"},{"size":3285,"mtime":1626285580164,"results":"64","hashOfConfig":"51"},{"size":22391,"mtime":1628542025749,"results":"65","hashOfConfig":"51"},{"size":129,"mtime":1626285580157,"results":"66","hashOfConfig":"51"},{"size":235,"mtime":1626285580192,"results":"67","hashOfConfig":"51"},{"size":9340,"mtime":1628538548282,"results":"68","hashOfConfig":"51"},{"size":802,"mtime":1628538139686,"results":"69","hashOfConfig":"51"},{"size":655,"mtime":1626285580159,"results":"70","hashOfConfig":"51"},{"size":685,"mtime":1626285580156,"results":"71","hashOfConfig":"51"},{"size":851,"mtime":1626285580160,"results":"72","hashOfConfig":"51"},{"size":2041,"mtime":1626285580158,"results":"73","hashOfConfig":"51"},{"size":1965,"mtime":1626285580157,"results":"74","hashOfConfig":"51"},{"size":667,"mtime":1626285580158,"results":"75","hashOfConfig":"51"},{"size":1796,"mtime":1626285580160,"results":"76","hashOfConfig":"51"},{"size":3952,"mtime":1626285580168,"results":"77","hashOfConfig":"51"},{"size":286,"mtime":1626285580155,"results":"78","hashOfConfig":"51"},{"size":915,"mtime":1627327779168,"results":"79","hashOfConfig":"51"},{"size":6126,"mtime":1627327779159,"results":"80","hashOfConfig":"51"},{"size":19732,"mtime":1627327779172,"results":"81","hashOfConfig":"51"},{"size":5393,"mtime":1627327779160,"results":"82","hashOfConfig":"51"},{"size":6008,"mtime":1627327779161,"results":"83","hashOfConfig":"51"},{"size":5219,"mtime":1627327779159,"results":"84","hashOfConfig":"51"},{"size":7264,"mtime":1627327779160,"results":"85","hashOfConfig":"51"},{"size":5008,"mtime":1627327779162,"results":"86","hashOfConfig":"51"},{"size":3956,"mtime":1627327779176,"results":"87","hashOfConfig":"51"},{"size":1025,"mtime":1627327779171,"results":"88","hashOfConfig":"51"},{"size":669,"mtime":1627327779163,"results":"89","hashOfConfig":"51"},{"size":2221,"mtime":1627327779169,"results":"90","hashOfConfig":"51"},{"size":3600,"mtime":1627327779165,"results":"91","hashOfConfig":"51"},{"size":5082,"mtime":1627327779165,"results":"92","hashOfConfig":"51"},{"size":1081,"mtime":1627327779170,"results":"93","hashOfConfig":"51"},{"size":666,"mtime":1627327779172,"results":"94","hashOfConfig":"51"},{"size":1080,"mtime":1627327779169,"results":"95","hashOfConfig":"51"},{"size":4757,"mtime":1627327779170,"results":"96","hashOfConfig":"51"},{"size":1137,"mtime":1627327779168,"results":"97","hashOfConfig":"51"},{"size":1711,"mtime":1627329768473,"results":"98","hashOfConfig":"51"},{"size":546,"mtime":1628541995571,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1m0ocp7",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"102"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"102"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"102"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"102"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Gappy\\Back-End\\Payor-View\\src\\index.js",[],["224","225"],"E:\\Gappy\\Back-End\\Payor-View\\src\\reportWebVitals.js",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\App.js",["226","227"],"import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport fire from './fire';\r\n\r\nimport Home from './components/home';\r\nimport NavBar from './components/navbar';\r\nimport Practices from './components/practices';\r\nimport Practice from './components/practice';\r\nimport Gaps from './components/gaps';\r\n\r\nimport NotFound from './components/common/not-found';\r\nimport Test from './components/test';\r\n\r\nimport './App.css';\r\nimport Providers from './components/providers';\r\nimport Provider from './components/provider';\r\nimport CBP from './components/tmpCBP';\r\nimport Members from './components/members';\r\nimport Login from './components/login';\r\n\r\n// GAPPY TV LINKS\r\nimport Dash from './components/gappytv/components/responsive/dash';\r\nimport UserPage from './components/gappytv/components/user/userPage';\r\nimport BillCPT from './components/gappytv/components/cbp/custom/billCodes';\r\nimport MedicationCompliance from './components/gappytv/components/cbp/custom/medCompliance';\r\nimport UpcomingAppt from './components/gappytv/components/cbp/custom/upcomingAppt';\r\nimport ScheduleAppt from './components/gappytv/components/cbp/custom/scheduleAppt';\r\nimport Verify from './components/gappytv/components/cbp/custom/verify';\r\nimport ComplianceAppt from './components/gappytv/components/cbp/custom/complianceAppt';\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n  \r\n  const clearInputs = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setEmailError(\"\");\r\n    setPasswordError(\"\");\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    clearErrors();\r\n    fire\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    fire.auth().signOut().then(function() {\r\n      console.log('Signed Out');\r\n    }, function(error) {\r\n      console.error('Sign Out Error', error);\r\n    });\r\n  };\r\n\r\n  const authListener = () => {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        clearInputs();\r\n        setUser(user);\r\n      } else {\r\n        setUser(\"\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    authListener();\r\n  }, []);\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {user ? (\r\n        <div>\r\n          <NavBar \r\n            handleLogout={handleLogout}\r\n          />\r\n          <main className=\"container\">\r\n            <Switch>\r\n              <Route path=\"/home\" component={ Home }></Route>\r\n              <Route path=\"/members\" component={ Members }></Route>\r\n              <Route path=\"/not-found\" component={ NotFound }></Route>\r\n              <Route path=\"/practices\" exact component={ Practices } />\r\n              <Route path=\"/practices/:id\" component={ Practice }/>\r\n              <Route path=\"/gaps\" component={ Gaps }></Route>\r\n              <Route path=\"/providers\" exact component={ Providers }></Route>\r\n              <Route path=\"/providers/:id\" component={ Provider }></Route>\r\n\r\n              <Route path=\"/cbp/:id\" component={ CBP }></Route>\r\n              <Route path=\"/cbp\" component={ CBP }></Route>\r\n\r\n              <Route path=\"/test\" component={ Test }></Route>\r\n\r\n              {/* START GAPPY TV TEMPORARY LINKS DELETE */}\r\n\r\n              <Route path=\"/tv/dash\" component={ Dash }></Route>\r\n              <Route path=\"/tv/profile\" component={ UserPage }></Route>\r\n\r\n              <Route path=\"/tv/cbp/schedule\" component={ScheduleAppt}></Route>\r\n              <Route path=\"/tv/cbp/billing\" component={BillCPT}></Route>\r\n              <Route path=\"/tv/cbp/compliance\" component={MedicationCompliance}></Route>\r\n              <Route path=\"/tv/cbp/upcoming\" component={UpcomingAppt}></Route>\r\n              <Route path=\"/tv/cbp/verify\" component={Verify}></Route>\r\n              <Route path=\"/tv/cbp/complianceappt\" component={ComplianceAppt}></Route>\r\n\r\n              {/* END GAPPY TV TEMPORARY LINKS DELETE */}\r\n\r\n              <Redirect from=\"/\" exact to=\"/home\" />\r\n              <Redirect to=\"/not-found\" />\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      ) : (\r\n        <Login\r\n          email={email}\r\n          setEmail={setEmail}\r\n          password={password}\r\n          setPassword={setPassword}\r\n          handleLogin={handleLogin}\r\n          hasAccount={hasAccount}\r\n          setHasAccount={setHasAccount}\r\n          emailError={emailError}\r\n          passwordError={passwordError} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\fire.js",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\navbar.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\home.jsx",["228"],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\practice.jsx",["229"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getPracticeProviders,\r\n  getPracticePerformance,\r\n  getPractice,\r\n} from \"./services/services\";\r\nimport { PracticeProfileCard } from \"./common/practiceProfileCard\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { HeaderMain } from \"./common/headerMain\";\r\nimport { Card, CardDeck, CardBody } from \"reactstrap\";\r\nimport MeasureBody from \"./common/measureBody\";\r\nimport axios from 'axios';\r\n\r\nclass Practice extends Component {\r\n  state = {\r\n    providers: [],\r\n    practice: [],\r\n    cbp: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n\r\n    let id = this.props.match.params.id;\r\n\r\n    const { data: practice } = await axios.get(process.env.REACT_APP_API_PRACTICES + id);\r\n    const { data: providers } = await axios.get(process.env.REACT_APP_API_PRACTICES + id + \"/providers\");\r\n    \r\n    this.setState({ practice: practice, providers: providers });\r\n  }\r\n\r\n  handleCurrent = () => {\r\n    const cbp = this.state.practice.uncontrolled;\r\n    const providers = getPracticeProviders(this.props.match.params.id);\r\n    this.setState({ cbp, providers });\r\n  };\r\n\r\n  handlePerformance = () => {\r\n    const cbp = this.state.practice.controlled;\r\n    const providers = getPracticePerformance(this.props.match.params.id);\r\n    this.setState({ cbp, providers });\r\n  };\r\n\r\n  render() {\r\n    const { providers } = this.state;\r\n    var practice = this.state.practice;\r\n\r\n    return (\r\n      <div>\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain title={this.state.practice.name} className=\"\" />\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Below is a detailed look into the information of the selected\r\n                practice. On the left profile card, is listed the practice\r\n                manager, provider count, member count and total open gaps. Under\r\n                the measures heading, are listed only the measures that apply to\r\n                the selected practice, clicking on the measure card will take\r\n                you to the associated report. Under the providers heading you\r\n                will find the table of providers associated with the selected\r\n                practice, clicking the view button on a provider will bring you\r\n                to the details page of the provider.\r\n              </p>\r\n              <p className=\"text-left text-muted\">Legend</p>\r\n              <i className=\"fa fa-circle text-primary\">\r\n                <span className=\"ml-2\">\r\n                  Blue represents what BCBS-M believes are open gaps\r\n                </span>\r\n              </i>\r\n              <i className=\"fa fa-circle text-success ml-5\">\r\n                <span className=\"ml-2\">\r\n                  Green represents what gappy's insights are on the current open\r\n                  gaps\r\n                </span>\r\n              </i>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <div>\r\n          <div className=\"row ml-1\">\r\n            <PracticeProfileCard\r\n              name={practice.name}\r\n              manager={practice.manager}\r\n              location={practice.address}\r\n              providerCnt={practice.providers}\r\n              memberCnt={practice.patients}\r\n              closed={practice.patients - practice.total_gaps}\r\n              gaps={practice.total_gaps}\r\n              risk=\"1\"\r\n            />\r\n            <div className=\"col ml-5\">\r\n              <h1 className=\"font-weight-light text-muted\">Measures</h1>\r\n              <CardDeck className=\"\" style={{ width: \"50%\" }}>\r\n                <Card className=\"mb-3\">\r\n                  <CardBody>\r\n                      <MeasureBody\r\n                        title=\"Blood Pressure\"\r\n                        badgeTitle=\"CBP\"\r\n                        badgeColor=\"danger\"\r\n                        value={practice.cbp_gaps}\r\n                        controlled={practice.patients - practice.cbp_gaps}\r\n                        valueTitle={practice.patients}\r\n                        link={`/cbp/${this.props.match.params.id}/practice`}\r\n                      />\r\n                  </CardBody>\r\n                </Card>\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"text-muted\">Providers</h3>\r\n            <table\r\n              className=\"table table-striped table-responsive\"\r\n              style={{ overflowX: \"auto\", whiteSpace: \"nowrap\" }}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th className=\"font-weight-light\">Full Name</th>\r\n                  <th className=\"font-weight-light\">Members</th>\r\n                  <th className=\"font-weight-light\">Open Gaps</th>\r\n                  <th className=\"font-weight-light\">CBP</th>\r\n                  <th className=\"font-weight-light\">SUPD</th>\r\n                  <th className=\"font-weight-light\">SPC</th>\r\n                  <th className=\"font-weight-light\">CDC-N</th>\r\n                  <th className=\"font-weight-light\">90-Day</th>\r\n                  <th className=\"font-weight-light\">MAM</th>\r\n                  <th className=\"font-weight-light\">COL</th>\r\n                  <th className=\"font-weight-light\">PCR</th>\r\n                  <th className=\"font-weight-light\">OMW</th>\r\n                  <th className=\"font-weight-light\">ART</th>\r\n                  <th className=\"font-weight-light\">MRP</th>\r\n                  <th className=\"font-weight-light\">BCS</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {providers.map((provider) => (\r\n                  <tr key={provider._id}>\r\n                    <td>\r\n                      <Link\r\n                        className=\"btn btn-primary btn-sm\"\r\n                        to={`/providers/${provider.id}`}\r\n                      >\r\n                        View\r\n                      </Link>\r\n                    </td>\r\n                <td>{provider.name}</td>\r\n                    <td>{provider.patients}</td>\r\n                    <td>{provider.total_gaps}</td>\r\n                    <td>{provider.cbp_gaps}</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Practice;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\practices.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\providers.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\provider.jsx",["230","231"],"import React, { Component } from \"react\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { HeaderMain } from \"./common/headerMain\";\r\nimport { Card, CardDeck, CardBody } from \"reactstrap\";\r\nimport MeasureBody from \"./common/measureBody\";\r\nimport { ProviderProfileCard } from \"./common/providerProfileCard\";\r\nimport axios from 'axios';\r\n\r\nclass Provider extends Component {\r\n  state = {\r\n    practice: {},\r\n    provider: {},\r\n    patients: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n  };\r\n\r\n  async componentDidMount() {\r\n\r\n    let provider = {};\r\n    let patientFiltered = [];\r\n\r\n    let identifier = this.props.match.params.id;\r\n\r\n    const { data: practice } = await axios.get(process.env.REACT_APP_API_PRACTICES);\r\n\r\n    for (let i = 0; i < practice.length; i++) {\r\n      const { data: providers } = await axios.get(process.env.REACT_APP_API_PRACTICES + practice[i].id + \"/providers\");\r\n\r\n      for (let j = 0; j < providers.length; j++) {\r\n        if (providers[j].id == identifier) {\r\n          provider = providers[j];\r\n        \r\n          const { data: patients } = await axios.get(process.env.REACT_APP_API_PRACTICES + practice[i].id + \"/patients\");\r\n          for (let k = 0; k < patients.length; k++) {\r\n            \r\n            if ( patients[k].provider.id == identifier )\r\n              patientFiltered.push(patients[k]);\r\n          }\r\n\r\n          this.setState({ practice: practice[i], provider: provider, patients: patientFiltered });\r\n\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleCurrent = () => {\r\n    const cbp = this.state.provider.uncontrolled;\r\n    this.setState({ cbp });\r\n  };\r\n\r\n  handlePerformance = () => {\r\n    const cbp = this.state.provider.controlled;\r\n    this.setState({ cbp });\r\n  };\r\n\r\n  render() {\r\n    const { provider } = this.state;\r\n\r\n    const { length: count } = this.state.patients;\r\n    const { practice, pageSize, currentPage, patients: allPatients } = this.state;\r\n\r\n    const patients = paginate(allPatients, currentPage, pageSize);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain title={provider.name} className=\"\" />\r\n              <h4 className=\"font-weight-light\">{practice.name}</h4>\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Below is a detailed look into the information of the selected\r\n                provider. On the left profile card, is listed the provider\r\n                NPI, member count, and total open gaps. Under\r\n                the measures heading, are listed only the measures that apply to\r\n                the selected provider, clicking on the measure card will take\r\n                you to the associated report. Under the members heading you\r\n                will find the table of members associated with the selected\r\n                provider.\r\n              </p>\r\n              <p className=\"text-left text-muted\">Legend</p>\r\n              <i className=\"fa fa-circle text-primary\">\r\n                <span className=\"ml-2\">\r\n                  Blue represents what BCBS-M believes are open gaps.\r\n                </span>\r\n              </i>\r\n              <i className=\"fa fa-circle text-success ml-5\">\r\n                <span className=\"ml-2\">\r\n                  Green represents what gappy's are insights on the current open\r\n                  gaps.\r\n                </span>\r\n              </i>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <div>\r\n          <div className=\"row ml-1\">\r\n            <ProviderProfileCard\r\n              practice={practice.name}\r\n              NPI={practice.manager}\r\n              address={practice.address}\r\n              memberCnt={provider.patients}\r\n              gaps={provider.total_gaps}\r\n              open={provider.patients - provider.total_gaps}\r\n              risk=\"1\"\r\n            />\r\n            <div className=\"ml-5 col-sm\">\r\n              <h1 className=\"font-weight-light text-muted\">Measures</h1>\r\n              <CardDeck className=\"\" style={{ width: \"50%\" }}>\r\n                <Card className=\"mb-3\">\r\n                  <CardBody>\r\n                    <MeasureBody\r\n                      title=\"Blood Pressure\"\r\n                      badgeTitle=\"CBP\"\r\n                      badgeColor=\"danger\"\r\n                      value={provider.total_gaps}\r\n                      controlled={provider.patients - provider.cbp_gaps}\r\n                      valueTitle={provider.patients}\r\n                      link={`/cbp/${this.props.match.params.id}/provider`}\r\n                    />\r\n                  </CardBody>\r\n                </Card>\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"text-muted\">Members</h3>\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"font-weight-light\">First Name</th>\r\n                  <th className=\"font-weight-light\">Last Name</th>\r\n                  <th className=\"font-weight-light\">Address</th>\r\n                  <th className=\"font-weight-light\">DOB</th>\r\n                  <th className=\"font-weight-light\">Last Visit</th>\r\n                  <th className=\"font-weight-light\">Next Visit</th>\r\n                  <th className=\"font-weight-light\">Gap</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {patients.map((patient) => (\r\n                  <tr>\r\n                    <td>{patient.first_name}</td>\r\n                    <td>{patient.last_name}</td>\r\n                    <td>{patient.address}</td>\r\n                    <td>{patient.dob}</td>\r\n                    <td>{patient.lastVisit}</td>\r\n                    <td>{patient.nextVisit}</td>\r\n                    <td className=\"text-danger\">CBP</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Provider;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gaps.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\login.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\test.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\members.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\tmpCBP.jsx",["232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\not-found.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\utils\\paginate.js",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\services\\services.js",["263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295"],"var json = require('./emrPulls/patients.json'); //(with path)\r\nvar insurance  = require('./bcbs.json');\r\nvar provider = require('./emrPulls/newProviderDB.json');\r\nvar providerClosed = require('./emrPulls/providerClosed.json');\r\nvar practice = require('./emrPulls/practice.json');\r\nvar practiceOpen = require('./emrPulls/practiceOpen.json');\r\nvar bcbsList = require('./bcbsPulls/bcbsList.json');\r\n\r\nexport function getInsurance(path) {\r\n    var data = [];\r\n\r\n    if (path.includes('provider')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n        \r\n        data = getSingleProvider(id);\r\n        return data;\r\n    }\r\n\r\n    else if (path.includes('practice')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n        \r\n        data = getPractice(id);\r\n        return data;\r\n    } \r\n    \r\n    else {\r\n        return insurance;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getBCBSList() {\r\n    return bcbsList;\r\n}\r\n\r\nexport function getBCBSListWPath(path) {\r\n    var data = [];\r\n\r\n    if (path.includes('provider')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n        \r\n        for (var i = 0; i < bcbsList.length; i++) {\r\n            if (bcbsList[i].physicianNPI === id)\r\n                data.push(bcbsList[i])\r\n        }\r\n        \r\n        return data;\r\n    }\r\n\r\n    else if (path.includes('practice')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n        \r\n        for (var i = 0; i < bcbsList.length; i++) {\r\n            if (bcbsList[i].practiceID === id)\r\n                data.push(bcbsList[i])\r\n        }\r\n\r\n        return data;\r\n    } else {\r\n        return bcbsList\r\n    }\r\n}\r\n\r\nexport function getPending(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_verified === false)\r\n            tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n    \r\n}\r\n\r\nexport function getVerified(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_verified === true)\r\n            tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n    \r\n}\r\n\r\nexport function getPractice(id) {\r\n    let data = practice;\r\n     \r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i]._id === id)\r\n            return practice[i];\r\n    }\r\n\r\n    return practice;\r\n}\r\n\r\nexport function getProviders() {\r\n    return provider;\r\n}\r\n\r\nexport function getPatients(array) {\r\n    return array;\r\n}\r\n\r\nexport function getPatientsAll() {\r\n    return json;\r\n}\r\n\r\nexport function getdata(path) {\r\n    let patients = [];\r\n    let tempObj = [];\r\n    let meta = {};\r\n\r\n    if (path.includes('provider')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n\r\n        return getProviderPatients(id)\r\n    }\r\n    else if (path.includes('practice')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n\r\n        return getPracticePatients(id)\r\n    } \r\n    \r\n    else {\r\n        return json;\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function getProviderPatients(id) {\r\n    let data = json;\r\n    let tempObj = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i].physicianNPI === id) {\r\n            tempObj.push(data[i]);\r\n        }\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function getSingleProvider(id) {\r\n    let data = provider;\r\n\r\n    for (var i = 0; i < provider.length; i++) {\r\n        if (provider[i].physicianNPI === id)\r\n            return provider[i];\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getSingleProviderPerformance(id) {\r\n    let data = providerClosed;\r\n\r\n    for (var i = 0; i < provider.length; i++) {\r\n        if (provider[i].physicianNPI === id)\r\n            return provider[i];\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n//Return All Providers for Respective Practice\r\nexport function getPracticeProviders(id) {\r\n    let data = provider;\r\n    let tempObj = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i].practiceID === id) {\r\n            tempObj.push(data[i]);\r\n        }\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function getPracticePerformance(id) {\r\n    let data = providerClosed;\r\n    let tempObj = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i].practiceID === id) {\r\n            tempObj.push(data[i]);\r\n        }\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function getPracticePatients(id) {\r\n    let data = json;\r\n    let prov = provider;\r\n    let tempObj = [];\r\n\r\n    for (let i = 0; i < prov.length; i++) {\r\n        if (prov[i].practiceID === id) {\r\n            for (let j = 0; j < data.length; j++) {\r\n                if (data[j].physicianNPI === prov[i].physicianNPI)\r\n                    tempObj.push(data[j])\r\n            }\r\n        }\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function closedProviderGaps() {\r\n    return providerClosed;\r\n}\r\n\r\nexport function openPracticeGaps() {\r\n    return practiceOpen;\r\n}\r\n\r\nexport function filterPatientsCompleted(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_complete === true)\r\n            tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function filterPatientsControlled(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === true && data[i].is_verified == true)\r\n            tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function filterPatientsUnControlled(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if (data[i].is_verified == true)\r\n                tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function filterPatientsCompliant(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if (data[i].is_compliant === true && data[i].is_verified == true)\r\n                tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function filterPatientsUnCompliant(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled == false || data[i].is_controlled == null)\r\n            if (data[i].is_compliant == false || data[i].is_compliant == null && data[i].is_verified == true)\r\n                tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function noReading (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === null && data[i].is_compliant == true && data[i].is_verified == true)\r\n                tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function noReadingNotScheduled (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === null && data[i].is_compliant == true && data[i].is_verified == true)\r\n                if ( data[i].next_visit == null)\r\n                    tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function noReadingScheduled (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === null && data[i].is_compliant == true && data[i].is_verified == true )\r\n                if ( data[i].next_visit != null )\r\n                    tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function reading (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    console.log('ran');\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === true && data[i].is_compliant == true && data[i].is_verified == true)\r\n                tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function readingNotScheduled (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === true && data[i].is_compliant == true && data[i].is_verified == true)\r\n                if ( data[i].next_visit == null)\r\n                    tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function readingScheduled (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === true && data[i].is_compliant == true && data[i].is_verified == true) \r\n                if ( data[i].next_visit != null)\r\n                    tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}","E:\\Gappy\\Back-End\\Payor-View\\src\\utils\\columns.js",["296"],"import { format } from \"date-fns\";\r\n\r\nexport const COLUMNS = [\r\n  {\r\n    Header: \"First Name\",\r\n    accessor: \"first_name\",\r\n  },\r\n  {\r\n    Header: \"Last Name\",\r\n    accessor: \"last_name\",\r\n  },\r\n  {\r\n    Header: \"Provider\",\r\n    accessor: \"provider\",\r\n  },\r\n  {\r\n    Header: \"DOB\",\r\n    accessor: \"dob\",\r\n  },\r\n  {\r\n    Header: \"Gap\",\r\n    accessor: \"CBP\",\r\n  },\r\n  {\r\n    Header: \"Sys\",\r\n    accessor: \"systolic\",\r\n  },\r\n  {\r\n    Header: \"Dia\",\r\n    accessor: \"diastolic\",\r\n  },\r\n  {\r\n    Header: \"Date Taken\",\r\n    accessor: \"date\",\r\n  },\r\n  {\r\n    Header: \"Last Visit\",\r\n    accessor: \"last_visit\",\r\n  },\r\n  {\r\n    Header: \"Next Visit\",\r\n    accessor: \"next_visit\",\r\n  },\r\n  {\r\n    Header: \"Status\",\r\n    accessor: \"status\",\r\n  },\r\n  {\r\n    Header: \"Description\",\r\n    accessor: \"null\",\r\n  },\r\n];\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\progress.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\headerMain.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\sessionsByDevice.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\practiceProfileCard.jsx",["297","298"],"import React from \"react\";\r\n\r\nimport { Card, Badge, CardBody } from \"reactstrap\";\r\n\r\nconst badgesColors = [\"info\", \"primary\", \"secondary\"];\r\n\r\nconst PracticeProfileCard = (props) => {\r\n  const { closed, name, manager, location, providerCnt, memberCnt, gaps, risk } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* START Card */}\r\n      <Card className=\"mb-3\">\r\n        <CardBody>\r\n          <React.Fragment>\r\n            <div className=\"d-flex justify-content-center my-3\">\r\n              <h3>{name}</h3>\r\n            </div>\r\n            <div className=\"mb-4 text-center\">\r\n              <a className=\"h6 text-decoration-none\" href=\"#\">\r\n                Manager: {manager}\r\n              </a>\r\n              <div className=\"text-center\">\r\n                <i className=\"fa fa-map-marker mr-1\"></i>\r\n                {location}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Providers: {providerCnt}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Closed Gaps: {closed}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Open Gaps: {gaps}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Members: {memberCnt}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Risk Level: {risk}\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n          <div className=\"text-center mb-4\">\r\n            <div className=\"mb-2\">\r\n              <span className=\"small\">Measures</span>\r\n            </div>\r\n            <Badge pill color=\"danger\" className=\"mr-1\">\r\n              CBP\r\n            </Badge>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n      {/* END Card */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { PracticeProfileCard };\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\measureBody.jsx",["299","300","301","302","303","304"],"import React, { Component } from 'react';\r\nimport { CardTitle } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MeasureBody extends Component {\r\n  state = {\r\n    isOpen: true\r\n  };\r\n\r\n  onToggle = () => {\r\n    let bool = this.state.isOpen;\r\n\r\n    if(bool == true)\r\n      bool = false;\r\n    else\r\n      bool = true;\r\n\r\n    this.setState({isOpen: bool});\r\n  }\r\n\r\n  render() {\r\n\r\n    const {title, badgeTitle, badgeColor, controlled, value, valueTitle, link, toggle} = this.props;\r\n \r\n    return (\r\n      <div>\r\n        <Link underline=\"none\" to={link} style={{ textDecoration: 'none' }}>\r\n        <div className=\"d-flex\">\r\n          <CardTitle tag=\"h6\" className=\" text-dark\">{title}</CardTitle>\r\n          {/* <Badge\r\n            pill\r\n            color={`${badgeColor}`}\r\n            className=\"align-self-start ml-auto\"\r\n          >\r\n            {badgeTitle}\r\n          </Badge> */}\r\n          <span className=\"badge badge-pill align-self-start ml-auto text-white\" style={{\"background\": badgeColor}}>{badgeTitle}</span>\r\n        </div>\r\n        <div className=\"text-center my-4\">\r\n        <h2 className=\"text-success\">{`${this.state.isOpen == true ? (value) : (controlled)}`}</h2>\r\n          <span className=\"text-primary\">{valueTitle}</span>\r\n        </div>\r\n        </Link>\r\n        <div className=\"d-flex\">\r\n          <span onClick={() => this.onToggle()}><i className={`${this.state.isOpen == true ? (\r\n              \"fa text-dark fa-toggle-off\"\r\n            ) : (\r\n              \"fa text-dark fa-toggle-on\"\r\n            )}`}></i></span>\r\n          <span className={`${this.state.isOpen == true ? (\r\n              \"ml-auto text-danger\"\r\n            ) : (\r\n              \"ml-auto text-success\"\r\n            )}`}>\r\n            {`${this.state.isOpen == true ? (\r\n              \"Open\"\r\n            ) : (\r\n              \"Closed\"\r\n            )}`}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default MeasureBody;","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\pagination.jsx",["305","306","307"],"import React from 'react';\r\nimport _, { range } from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n    const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    if (pagesCount == 1) return null;\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    return <nav>\r\n        <ul className=\"pagination\">\r\n            { pages.map(page => (\r\n                <li key={ page } className={ page === currentPage ? 'page-item active' : 'page-item'}><a onClick={() => onPageChange(page)} className=\"page-link\">{ page }</a></li>\r\n            ))}\r\n        </ul>\r\n    </nav>;\r\n}\r\n \r\nexport default Pagination;","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\providerProfileCard.jsx",["308"],"import React from \"react\";\r\n\r\nimport { Card, Badge, CardBody } from \"reactstrap\";\r\n\r\nconst ProviderProfileCard = (props) => {\r\n  const { practice, address, NPI, memberCnt, gaps, open, risk } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* START Card */}\r\n      <Card className=\"mb-3\">\r\n        <CardBody>\r\n          <React.Fragment>\r\n            <div className=\"d-flex justify-content-center my-3\">\r\n              <h3>{practice}</h3>\r\n            </div>\r\n            <div className=\"mb-4 text-center\">\r\n              <a className=\"h6 text-decoration-none\" href=\"#\">\r\n                Manager: {NPI}\r\n              </a>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                {address}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Open Gaps: {gaps}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Closed Gaps: {open}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Members: {memberCnt}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Risk Level: {risk}\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n          <div className=\"text-center mb-4\">\r\n            <div className=\"mb-2\">\r\n              <span className=\"small\">Measures</span>\r\n            </div>\r\n            <Badge pill color=\"danger\" className=\"mr-1\">\r\n              CBP\r\n            </Badge>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n      {/* END Card */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { ProviderProfileCard };\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\reactTable.jsx",["309","310","311"],"import React, { Component } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport GlobalFilter from \"./common/globalFilter\";\r\n\r\nconst ReactTable = (props) => {\r\n  const { columns, data, isLoading } = props;\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const { globalFilter, pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <div>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <table className=\"table mt-2 table-striped\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th className=\"font-weight-light\" {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted ? (\r\n                      column.isSortedDesc ? (\r\n                        <i className=\"fa fa-sort-desc\" />\r\n                      ) : (\r\n                        <i className=\"fa fa-sort-asc\" />\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <span className=\"m-5\">\r\n        Page{\" \"}\r\n        <strong>\r\n          {pageIndex + 1} of {pageOptions.length}\r\n        </strong>{\" \"}\r\n      </span>\r\n      <span className=\"m-2\">\r\n        Go to page:{\"   \"}\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={pageIndex + 1}\r\n          onChange={e => {\r\n            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\r\n            gotoPage(pageNumber);\r\n          }}\r\n          style={{ width: \"50px\" }}\r\n        ></input>\r\n      </span>\r\n      {/* <select value={pageSize} onChange={e => setPageSize(Number(e.target.value))}>\r\n        {\r\n          [10, 15, 25].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))\r\n        }\r\n      </select> */}\r\n      <button\r\n        onClick={() => gotoPage(0)}\r\n        disabled={!canPreviousPage}\r\n        className=\"btn btn-primary m-2\"\r\n      >\r\n        {\"<<\"}\r\n      </button>\r\n      <button\r\n        onClick={() => previousPage()}\r\n        disabled={!canPreviousPage}\r\n        className=\"btn btn-primary m-2\"\r\n      >\r\n        Previous\r\n      </button>\r\n      <button\r\n        onClick={() => nextPage()}\r\n        disabled={!canNextPage}\r\n        className=\"btn btn-primary m-2\"\r\n      >\r\n        Next\r\n      </button>\r\n      <button\r\n        onClick={() => gotoPage(pageCount - 1)}\r\n        disabled={!canNextPage}\r\n        className=\"btn btn-primary m-2\"\r\n      >\r\n        {\">>\"}\r\n      </button>\r\n      {isLoading ? (\r\n        <div class=\"center m-5\">\r\n          <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactTable;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\common\\globalFilter.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\responsive\\dash.jsx",["312"],"// Root Imports\r\nimport React, { Component } from \"react\";\r\n\r\n// External Library Imports\r\n//...\r\n\r\n// Component Imports\r\nimport { Header } from \"../common/header\";\r\nimport AllStarProfiles from \"../user/allStarProfiles\";\r\nimport Accordions from '../tasks/accordions';\r\n\r\nclass Dash extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div style={{paddingLeft: \"5%\", paddingRight: \"5%\"}}>\r\n        <div>\r\n          <h3 className=\"text-center\">Gap Closure All Stars</h3>\r\n        </div>\r\n        <section\r\n          className=\"d-flex\"\r\n          style={{\r\n            overflow: \"auto\",\r\n            whiteSpace: \"nowrap\",\r\n            height: \"auto\",\r\n            width: \"auto\",\r\n          }}\r\n        >\r\n          <AllStarProfiles />\r\n        </section>\r\n        \r\n        <section className=\"\">\r\n          <Accordions />\r\n        </section>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dash;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\billCodes.jsx",["313","314","315","316","317"],"import React, { Component } from \"react\";\r\nimport { getBillCPT } from \"../../../services/server\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport OnComplete from '../../taskSubmission/onComplete';\r\n\r\nclass BillCPT extends Component {\r\n  state = {\r\n    pt: getBillCPT(),\r\n    visible: false,\r\n    count: 0,\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  handleOnCheck(data) {\r\n    var patients = this.state.pt;\r\n    var count = this.state.count;\r\n\r\n    for (let i = 0; i < patients.length; i++) {\r\n      if (patients[i].id == data.id) {\r\n        if (patients[i].status == \"billed\") {\r\n          patients[i].status = \"null\";\r\n          count -= 1;\r\n        } else {\r\n          patients[i].status = \"billed\";\r\n          count += 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ pt: patients, count: count });\r\n  }\r\n\r\n  handleAllCheck() {\r\n    var patients = this.state.pt;\r\n    var count = this.state.count;\r\n\r\n    if (count == patients.length) {\r\n      for (let i = 0; i < patients.length; i++) {\r\n        patients[i].status = \"null\";\r\n      }\r\n      count = 0;\r\n    } else {\r\n      for (let i = 0; i < patients.length; i++) {\r\n        patients[i].status = \"billed\";\r\n      }\r\n      count = patients.length\r\n    }\r\n\r\n    this.setState({ pt: patients, count: count });\r\n  }\r\n\r\n  handleConf() {\r\n    this.setState({ visible: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ visible: false });\r\n  }\r\n\r\n  render() {\r\n    const { pt, count } = this.state;\r\n    console.log(count);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\" style={{ margin: \"5%\" }}>\r\n          <React.Fragment>\r\n            <h1>CPTII Billing</h1>\r\n            <hr></hr>\r\n          </React.Fragment>\r\n\r\n          <div\r\n            className=\"\"\r\n            style={{ marginTop: \"100px\", marginBottom: \"100px\", width: \"100%\" }}\r\n          >\r\n            <h3 className=\"font-weight-light text-center\">\r\n              CPTII codes are reporting codes which allow payors to ID where\r\n              members’ BPs stand within a controlled or uncontrolled range, any\r\n              given year. Gappy has automatically paired the appropriate CPTII\r\n              codes based on the systolic and diastolic readings for you\r\n            </h3>\r\n          </div>\r\n\r\n          <table\r\n            className=\"table table-responsive\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"25%\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n              <tr>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Task\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Patient Name\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Systolic\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  CPTII\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Diastolic\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  CPTII\r\n                </th>\r\n                <th\r\n                  className=\"font-weight-bold text-center\"\r\n                  style={{ width: \"20%\" }}\r\n                  onClick={() => this.handleAllCheck()}\r\n                >\r\n                  {count == pt.length ? (\r\n                    <i class=\"fa fa-check-square text-success fa-2x\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td rowspan={pt.length + 1} className=\"\">\r\n                  Please submit the corresponding CPTII Codes for the patients\r\n                  listed\r\n                </td>\r\n              </tr>\r\n              {pt.map((ea) => (\r\n                <tr key={ea.id}>\r\n                  <td>\r\n                    {ea.first_name} {ea.last_name}\r\n                  </td>\r\n                  <td style={{ borderLeft: \"1px solid black\" }}>\r\n                    {ea.systolic}\r\n                  </td>\r\n                  <td>{ea.syscpt}</td>\r\n                  <td style={{ borderLeft: \"1px solid black\" }}>\r\n                    {ea.diastolic}\r\n                  </td>\r\n                  <td>{ea.diacpt}</td>\r\n                  <td\r\n                    className=\"text-center\"\r\n                    onClick={() => this.handleOnCheck(ea)}\r\n                  >\r\n                    {ea.status == \"billed\" ? (\r\n                      <i class=\"fa fa-check-square text-success fa-2x\"></i>\r\n                    ) : (\r\n                      <i class=\"fa fa-check-square fa-2x\"></i>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: \"100px\" }}></div>\r\n\r\n          <React.Fragment className=\"mt-5 d-flex justify-content-center\">\r\n            <button\r\n              onClick={() => this.handleConf()}\r\n              className=\"btn p-3 btn-success btn-block\"\r\n              disabled={count >= 1 ? false : true}\r\n            >\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Complete to Unlock {count}/{pt.length} Points\r\n              </h3>\r\n            </button>\r\n          </React.Fragment>\r\n\r\n          <Modal\r\n            dialogClassName=\"sm\"\r\n            show={this.state.visible}\r\n            effect=\"fadeInUp\"\r\n          >\r\n            <button\r\n              onClick={() => this.handleClose()}\r\n              className=\"mt-2 btn ml-auto\"\r\n            >\r\n              <i class=\"fa fa-times fa-2x\"></i>\r\n            </button>\r\n\r\n            <OnComplete \r\n              count={`${count}/${pt.length}`}\r\n              pt={pt}\r\n            />\r\n\r\n          </Modal>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BillCPT;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\user\\userPage.jsx",["318","319","320","321"],"import React, { Component } from \"react\";\r\n\r\n// Root CSS\r\nimport \"../../css/styles.css\";\r\n\r\n// External Libraries\r\nimport { Row, Col, Card, CardTitle, CardBody, Button, Badge } from \"reactstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n// Components\r\nimport { Header } from \"../common/header\";\r\nimport EditBilling from \"../forms/editBilling\";\r\nimport ResetPin from \"../forms/resetPin\";\r\n\r\n// Assets\r\nimport img2 from \"../../assets/profile4.jpg\";\r\n\r\nclass UserPage extends Component {\r\n  state = {\r\n    visible: false,\r\n    form: \"\",\r\n  };\r\n\r\n  renderForm(param) {\r\n    switch (param) {\r\n      case 'editbilling':\r\n        return <EditBilling />\r\n\r\n      case 'resetpin':\r\n        return <ResetPin />\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { form, visible } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <section style={{ margin: \"5%\" }}>\r\n          <Header title=\"Profile Details\" className=\"mb-5 mt-4\" />\r\n          {/* START Content */}\r\n          <Row>\r\n            <Col lg={4}>\r\n              <Card>\r\n                <CardBody>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <img\r\n                      src={img2}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        height: \"50%\",\r\n                        borderRadius: \"50%\",\r\n                      }}\r\n                      className=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"mt-3 mb-4 text-center\">\r\n                    <p\r\n                      className=\"h6 text-center text-overflow text-decoration-none\"\r\n                      href=\"#\"\r\n                    >\r\n                      Lawren Rightwork\r\n                    </p>\r\n                    <div className=\"text-center text-success font-weight-bold\">\r\n                      <h2>8500</h2>\r\n                    </div>\r\n                    <span>\r\n                      <i class=\"fa fa-star fa-2x\" style={{ color: \"gold\" }}></i>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"text-center pb-1\">\r\n                    <ul className=\"list-inline\">\r\n                      <li className=\"list-inline-item text-center\">\r\n                        <h2 className=\"mb-1\">2</h2>\r\n                        <span>Tasks In-Progress</span>\r\n                      </li>\r\n                      <li className=\"list-inline-item text-center\">\r\n                        <h2 className=\"mb-1\">126</h2>\r\n                        <span>Tasks Completed</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <Row className=\"mt-3\">\r\n                    <Col sm={6} md={6}>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        block\r\n                        to=\"/apps/new-email\"\r\n                        className=\"mb-3 mb-lg-0\"\r\n                      >\r\n                        Message\r\n                      </Button>\r\n                    </Col>\r\n                    <Col sm={6} md={6}>\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        outline\r\n                        block\r\n                        to=\"/apps/profile-edit\"\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <div></div>\r\n                  <p className=\"mt-4 small text-left\">Profile</p>\r\n                  <p className=\"text-left\">Office Staff Biller</p>\r\n                  <p className=\"mt-4 small text-left\">Awards</p>\r\n                  <div className=\"text-left mb-4\">\r\n                    <span className=\"mr-2 badge badge-pill bg-warning text-white\">\r\n                      Weekly Leader\r\n                    </span>\r\n                    <Badge pill color=\"info\" className=\"mr-2\">\r\n                      Monthly Leader\r\n                    </Badge>\r\n                    <Badge pill color=\"success\" className=\"mr-1\">\r\n                      Yearly Leader\r\n                    </Badge>\r\n                  </div>\r\n                  <p className=\"mt-4 small text-left\">Practice Info</p>\r\n                  <dl className=\"row\">\r\n                    <dt className={`col-sm-3 text-lg-left`}>Address</dt>\r\n                    <dd className={`col-sm-9 text-lg-right text-inverse`}>\r\n                      700 Zemlak Glen\r\n                    </dd>\r\n                    <dt className={`col-sm-3 text-lg-left`}>City</dt>\r\n                    <dd className={`col-sm-9 text-lg-right text-inverse`}>\r\n                      Jacobiton\r\n                    </dd>\r\n                    <dt className={`col-sm-3 text-lg-left`}>State</dt>\r\n                    <dd className={`col-sm-9 text-lg-right text-inverse`}>\r\n                      West Virginia\r\n                    </dd>\r\n                    <dt className={`col-sm-3 text-lg-left`}>ZIP</dt>\r\n                    <dd className={`col-sm-9 text-lg-right text-inverse`}>\r\n                      87032\r\n                    </dd>\r\n                  </dl>\r\n\r\n                  <p className=\"mt-4 small text-left\">Settings</p>\r\n                  <div>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      block\r\n                      onClick={() => this.setState({ visible: true, form: \"resetpin\" })}\r\n                      className=\"mb-3 mb-lg-0\"\r\n                    >\r\n                      Reset Pin\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      block\r\n                      to=\"/apps/new-email\"\r\n                      className=\"mb-3 mb-lg-0\"\r\n                    >\r\n                      Edit User Details\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      block\r\n                      to=\"/apps/new-email\"\r\n                      className=\"mb-3 mb-lg-0\"\r\n                    >\r\n                      Contact Support\r\n                    </Button>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col lg={8}>\r\n              <div className=\"hr-sect\">Funds</div>\r\n              <Row className=\"mb-5\">\r\n                <Col>\r\n                  <Card className=\"mb-3\">\r\n                    <CardBody>\r\n                      <CardTitle tag=\"h6\" className=\"text-center mb-4\">\r\n                        Reedamable Points\r\n                      </CardTitle>\r\n                      <div className=\"content-left\">\r\n                        <h2 className=\"text-center\">4000 </h2>\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n                <Col>\r\n                  <Card className=\"mb-3\">\r\n                    <CardBody>\r\n                      <CardTitle tag=\"h6\" className=\"text-center mb-4\">\r\n                        Points Pending Gap Closure\r\n                      </CardTitle>\r\n                      <div>\r\n                        <h2 className=\"text-center\">1470</h2>\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n                <Col>\r\n                  <Card className=\"mb-3\">\r\n                    <CardBody>\r\n                      <CardTitle tag=\"h6\" className=\"text-center mb-4\">\r\n                        Lifetime Total Points\r\n                      </CardTitle>\r\n                      <div>\r\n                        <h2 className=\"text-center\">8500</h2>\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-5\">\r\n                <Col>\r\n                  <Button color=\"success\" outline block to=\"/apps/profile-edit\">\r\n                    Redeem Points\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    block\r\n                    onClick={() => this.setState({ visible: true, form: \"editbilling\" })}\r\n                  >\r\n                    Edit Billing Info\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Col lg={12}>\r\n                <div className=\"hr-sect\">In-Progress</div>\r\n                <table\r\n                  className=\"table table-hover table-responsive\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    overflowX: \"auto\",\r\n                  }}\r\n                >\r\n                  <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n                    <tr>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"25%\" }}\r\n                      >\r\n                        Tasks\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"30%\" }}\r\n                      >\r\n                        Reason\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-center text-muted\"\r\n                        style={{ width: \"10%\", whiteSpace: \"nowrap\" }}\r\n                      >\r\n                        Patient Name\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-center text-muted\"\r\n                        style={{ width: \"13%\" }}\r\n                      >\r\n                        Status\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"30%\" }}\r\n                      >\r\n                        Description\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td\r\n                        className=\"align-middle font-weight-bold\"\r\n                        style={{ whiteSpace: \"nowrap\" }}\r\n                      >\r\n                        <i class=\"fa fa-circle text-danger\"></i>\r\n                        BP Check Appointment Scheduling\r\n                      </td>\r\n                      <td>\r\n                        We need to ensure that patient BP is controlled to avoid\r\n                        HTN related complications. It is important that we have\r\n                        a controlled BP on file every calendar year.\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"blue\" }}\r\n                        >\r\n                          Call\r\n                        </span>\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"black\" }}\r\n                        >\r\n                          Schedule\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"align-middle text-center\">\r\n                        Amy Wrightworth\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge badge-pill bg-info text-white\">\r\n                          In-Progress\r\n                        </span>\r\n                        <h6></h6>\r\n                        <h6 className=\"text-center\">3/10/21 12:01pm</h6>\r\n                      </td>\r\n                      <td>Call to patient in progress, awaiting outcome.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td\r\n                        className=\"align-middle font-weight-bold\"\r\n                        style={{ whiteSpace: \"nowrap\" }}\r\n                      >\r\n                        <i class=\"fa fa-circle text-danger\"></i>\r\n                        BP Check Appointment Scheduling\r\n                      </td>\r\n                      <td>\r\n                        We need to ensure that patient BP is controlled to avoid\r\n                        HTN related complications. It is important that we have\r\n                        a controlled BP on file every calendar year.\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"blue\" }}\r\n                        >\r\n                          Call\r\n                        </span>\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"black\" }}\r\n                        >\r\n                          Schedule\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"align-middle text-center\">\r\n                        Duck Worthslight\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge badge-pill bg-info text-white\">\r\n                          In-Progress\r\n                        </span>\r\n                        <h6></h6>\r\n                        <h6 className=\"text-center\">3/10/21 12:01pm</h6>\r\n                      </td>\r\n                      <td>Call to patient in progress, awaiting outcome.</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <div className=\"hr-sect mt-5\">Completed</div>\r\n                <table\r\n                  className=\"table table-hover table-responsive\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    overflowX: \"auto\",\r\n                  }}\r\n                >\r\n                  <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n                    <tr>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"25%\" }}\r\n                      >\r\n                        Tasks\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"30%\" }}\r\n                      >\r\n                        Reason\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-center text-muted\"\r\n                        style={{ width: \"10%\", whiteSpace: \"nowrap\" }}\r\n                      >\r\n                        Patient Name\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-center text-muted\"\r\n                        style={{ width: \"13%\" }}\r\n                      >\r\n                        Status\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"30%\" }}\r\n                      >\r\n                        Description\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td\r\n                        className=\"align-middle font-weight-bold\"\r\n                        style={{ whiteSpace: \"nowrap\" }}\r\n                      >\r\n                        <i class=\"fa fa-circle text-danger\"></i>\r\n                        BP Check Appointment Scheduling\r\n                      </td>\r\n                      <td>\r\n                        We need to ensure that patient BP is controlled to avoid\r\n                        HTN related complications. It is important that we have\r\n                        a controlled BP on file every calendar year.\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"blue\" }}\r\n                        >\r\n                          Call\r\n                        </span>\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"black\" }}\r\n                        >\r\n                          Schedule\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"align-middle text-center\">John Loe</td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge badge-pill bg-success text-white\">\r\n                          Completed\r\n                        </span>\r\n                        <h6></h6>\r\n                        <h6 className=\"text-center\">3/10/21 12:01pm</h6>\r\n                      </td>\r\n                      <td>\r\n                        Successfully scheduled patient for blood pressure\r\n                        measurement. Placed appointment flag in EMR.\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"align-middle font-weight-bold\">\r\n                        <i class=\"fa fa-circle text-danger\"></i>\r\n                        BP Check Appointment Scheduling\r\n                      </td>\r\n                      <td>\r\n                        We need to ensure that patient BP is controlled to avoid\r\n                        HTN related complications. It is important that we have\r\n                        a controlled BP on file every calimport EditBilling from calendar year.\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"blue\" }}\r\n                        >\r\n                          Call\r\n                        </span>\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"black\" }}\r\n                        >\r\n                          Schedule\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"align-middle text-center\">Dove Madison</td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge badge-pill bg-success text-white\">\r\n                          Completed\r\n                        </span>\r\n                        <h6></h6>\r\n                        <h6 className=\"text-center\">3/8/21 1:03pm</h6>\r\n                      </td>\r\n                      <td>\r\n                        Successfully scheduled patient for blood pressure\r\n                        measurement. Placed appointment flag in EMR.\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n          {/* END Content */}\r\n\r\n          <Modal\r\n            dialogClassName=\"sm\"\r\n            show={visible}\r\n            effect=\"fadeInUp\"\r\n          >\r\n            <div className=\"modal-header d-flex m-2\">\r\n              <h4 className=\"modal-title\">Form...</h4>\r\n              <Button\r\n                color=\"danger\"\r\n                className=\"close\"\r\n                onClick={() => this.setState({ visible: false })}\r\n              ><i class=\"fa fa-times-circle\"></i></Button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {this.renderForm(form)}\r\n            </div>\r\n          </Modal>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPage;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\scheduleAppt.jsx",["322","323"],"import React, { Component } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n// Services\r\nimport { getPatient, finishTask } from \"../../../services/server\";\r\n\r\n// Component Imports\r\nimport OnComplete from '../../taskSubmission/onComplete';\r\n\r\nclass ScheduleAppt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      checked: \"\",\r\n      patient: {\r\n        firstName: \"Zaid\",\r\n        LastName: \"Uddin\",\r\n        phone: \"123432543254\",\r\n      },\r\n      value: \"\",\r\n      visible: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.setState({ patient: getPatient(this.props.location.pathname) });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSubmit() {\r\n    // finishTask(this.state.checked, this.state.patient, this.state.value);\r\n    this.setState({ award: true });\r\n  }\r\n\r\n  render() {\r\n    const { patient, visible } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\" style={{ margin: \"5%\" }}>\r\n          <React.Fragment>\r\n            <h1>Appointment Scheduling</h1>\r\n            <hr></hr>\r\n          </React.Fragment>\r\n\r\n          <div\r\n            className=\"\"\r\n            style={{ marginTop: \"100px\", marginBottom: \"100px\", width: \"100%\" }}\r\n          >\r\n            <h3 className=\"font-weight-light text-center\">...</h3>\r\n          </div>\r\n          <table\r\n            className=\"table table\"\r\n            style={{\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n              <tr>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Task\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Make Call\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"40%\" }}>\r\n                  Record Outcome\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Select One\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td rowspan=\"4\" className=\"\">\r\n                  Call {patient.firstName} {patient.lastName} in for an\r\n                  appointment to obtain her BP\r\n                </td>\r\n                <td rowspan=\"4\">{patient.phone}</td>\r\n                <td>Appointment Scheduled</td>\r\n                <td onClick={() => this.setState({ checked: \"scheduled\" })}>\r\n                  {this.state.checked === \"scheduled\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient did not Pick Up</td>\r\n                <td onClick={() => this.setState({ checked: \"noAnswer\" })}>\r\n                  {this.state.checked === \"noAnswer\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"text-danger\">\r\n                  Patient not interested in scheduling appointment (0 pts.)\r\n                </td>\r\n                <td onClick={() => this.setState({ checked: \"notInterested\" })}>\r\n                  {this.state.checked === \"notInterested\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Deceased / Moved</td>\r\n                <td onClick={() => this.setState({ checked: \"other\" })}>\r\n                  {this.state.checked === \"other\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: \"100px\" }}></div>\r\n\r\n          <React.Fragment className=\"mt-5 d-flex justify-content-center\">\r\n            <button\r\n              onClick={() => this.setState({ visible: true })}\r\n              className=\"btn p-3 btn-success btn-block\"\r\n              disabled={!this.state.checked}\r\n            >\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Complete to Unlock 15 Points\r\n              </h3>\r\n            </button>\r\n          </React.Fragment>\r\n\r\n          <Modal dialogClassName=\"sm\" show={visible} effect=\"fadeInUp\">\r\n            <button\r\n              onClick={() => this.setState({ visible: false })}\r\n              className=\"mt-2 btn ml-auto\"\r\n            >\r\n              <i class=\"fa fa-times fa-2x\"></i>\r\n            </button>\r\n\r\n            <OnComplete count={5} pt={patient} />\r\n          </Modal>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduleAppt;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\upcomingAppt.jsx",["324","325","326","327","328"],"import React, { Component } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport OnComplete from \"../../taskSubmission/onComplete\";\r\n\r\nclass UpcomingAppt extends Component {\r\n  state = {\r\n    option: \"\",\r\n    visible: false,\r\n    pt: [\r\n      {\r\n        id: \"1\",\r\n        first_name: \"AGNES\",\r\n        last_name: \"DOCK\",\r\n        systolic: \"128\",\r\n        syscpt: \"3077F\",\r\n        diastolic: \"64\",\r\n        diacpt: \"3099F\",\r\n        status: \"billed\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleOnChecked(text) {\r\n    if (this.state.option == text) this.setState({ option: \"\" });\r\n    else this.setState({ option: text });\r\n  }\r\n\r\n  render() {\r\n    const { option, visible, pt } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\" style={{ margin: \"5%\" }}>\r\n          <div style={{}}></div>\r\n          <React.Fragment>\r\n            <h1>Upcoming Appointment</h1>\r\n            <hr></hr>\r\n          </React.Fragment>\r\n\r\n          <div\r\n            className=\"\"\r\n            style={{ marginTop: \"100px\", marginBottom: \"100px\", width: \"100%\" }}\r\n          >\r\n            <h3 className=\"font-weight-light text-center\">\r\n              Mrs. Jay is a hypertensive. The last time she came in her BP\r\n              reading was xxx. In order to ensure a reading closer to control,\r\n              appropriate measures need to be taken prior to the appointment.\r\n              Please remind Mrs. Jay to take her BP medications as prescribed,\r\n              and not drink any coffee / caffeine prior to the BP reading.\r\n              Please try to identify any barriers Mrs. Jay will have in adhering\r\n              to these instructions.\r\n            </h3>\r\n            <h3 className=\"font-weight-light text-center mt-5\">\r\n              Please also ensure that the Medical Assistant team taking the BP\r\n              reads is aware of all protocols that need to be taken including,\r\n              don’t cross legs during read, arm should be at heart level,\r\n              sitting up-right etc.. And taking multiple reads to ensure\r\n              accuracy\r\n            </h3>\r\n          </div>\r\n\r\n          <table\r\n            className=\"table table\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"25%\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n              <tr>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Task\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Make Call\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"40%\" }}>\r\n                  Record Outcome\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Select One\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td rowspan=\"4\" className=\"\">\r\n                  Call Mrs. Jay to review previous BP and what needs to be done\r\n                  before upcoming visit\r\n                </td>\r\n                <td rowspan=\"4\">xxx.xxx.xxxx</td>\r\n                <td>Patient education complete, reviewed all talking points</td>\r\n                <td onClick={() => this.handleOnChecked(\"completed\")}>\r\n                  {option == \"completed\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient did not Pick Up</td>\r\n                <td onClick={() => this.handleOnChecked(\"noAnswer\")}>\r\n                  {option == \"noAnswer\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"text-danger\">\r\n                  Patient not interested in education (0 points)\r\n                </td>\r\n                <td onClick={() => this.handleOnChecked(\"notInterested\")}>\r\n                  {option == \"notInterested\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Deceased / Moved</td>\r\n                <td onClick={() => this.handleOnChecked(\"other\")}>\r\n                  {option == \"other\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: \"100px\" }}></div>\r\n\r\n          <React.Fragment className=\"mt-5 d-flex justify-content-center\">\r\n            <button\r\n              onClick={() => this.setState({ visible: true })}\r\n              className=\"btn p-3 btn-success btn-block\"\r\n              disabled={this.state.option ? false : true}\r\n            >\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Complete to Unlock 5 Points\r\n              </h3>\r\n            </button>\r\n          </React.Fragment>\r\n        </div>\r\n\r\n        <Modal dialogClassName=\"sm\" show={visible} effect=\"fadeInUp\">\r\n          <button\r\n            onClick={() => this.setState({ visible: false })}\r\n            className=\"mt-2 btn ml-auto\"\r\n          >\r\n            <i class=\"fa fa-times fa-2x\"></i>\r\n          </button>\r\n\r\n          <OnComplete count={5} pt={pt} />\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpcomingAppt;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\complianceAppt.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\medCompliance.jsx",["329","330","331","332","333","334","335","336","337"],"import React, { Component } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport OnComplete from \"../../taskSubmission/onComplete\";\r\n\r\nclass MedicationCompliance extends Component {\r\n  state = {\r\n    option: \"\",\r\n    visible: false,\r\n    pt: [\r\n      {\r\n        id: \"1\",\r\n        first_name: \"AGNES\",\r\n        last_name: \"DOCK\",\r\n        systolic: \"128\",\r\n        syscpt: \"3077F\",\r\n        diastolic: \"64\",\r\n        diacpt: \"3099F\",\r\n        status: \"billed\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleOnChecked(text) {\r\n    if (this.state.option == text) this.setState({ option: \"\" });\r\n    else this.setState({ option: text });\r\n  }\r\n\r\n  handleConf() {\r\n    this.setState({ visible: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ visible: false });\r\n  }\r\n\r\n  render() {\r\n    const { option, visible, pt } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\" style={{ margin: \"5%\" }}>\r\n          <div style={{}}></div>\r\n          <React.Fragment>\r\n            <h1>Medication Compliance</h1>\r\n            <hr></hr>\r\n          </React.Fragment>\r\n\r\n          <div\r\n            className=\"\"\r\n            style={{ marginTop: \"100px\", marginBottom: \"100px\", width: \"100%\" }}\r\n          >\r\n            <h3 className=\"font-weight-light text-center\">\r\n              Mr. Doug is Hypertensive and has been prescribed MET. His last\r\n              fill was 8.4.19. Before we call him in to get a controlled reading\r\n              for the year, we need to get him compliant on his BP Medication\r\n            </h3>\r\n          </div>\r\n\r\n          <table\r\n            className=\"table table\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"25%\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n              <tr>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Task\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Make Call\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"40%\" }}>\r\n                  Record Outcome\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Select One\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td rowspan=\"8\" className=\"\">\r\n                  Call Mr. Doug and Understand reason for non-compliance with\r\n                  Medication\r\n                </td>\r\n                <td rowspan=\"8\">248.989.9876</td>\r\n                <td>Already Taking Mediation</td>\r\n                <td onClick={() => this.handleOnChecked(\"taking\")}>\r\n                  {option == \"taking\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Physician Prescribed BP Medication</td>\r\n                <td onClick={() => this.handleOnChecked(\"prescribed\")}>\r\n                  {option == \"prescribed\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Cost Barrier, Physician Prescribed Alternative BP Medication\r\n                </td>\r\n                <td onClick={() => this.handleOnChecked(\"costBarrier\")}>\r\n                  {option == \"costBarrier\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Access Issue Resolved</td>\r\n                <td onClick={() => this.handleOnChecked(\"accessResolved\")}>\r\n                  {option == \"accessResolved\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Education Requested and Scheduled</td>\r\n                <td onClick={() => this.handleOnChecked(\"education\")}>\r\n                  {option == \"education\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Adverse Effects Experienced, Physician Prescribed Alternative\r\n                  BP Medication\r\n                </td>\r\n                <td\r\n                  onClick={() => this.handleOnChecked(\"alternativePrescribed\")}\r\n                >\r\n                  {option == \"alternativePrescribed\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient did not Pick Up</td>\r\n                <td onClick={() => this.handleOnChecked(\"noAnswer\")}>\r\n                  {option == \"noAnswer\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Compliance not Met (0 Pts.)</td>\r\n                <td onClick={() => this.handleOnChecked(\"notMet\")}>\r\n                  {option == \"notMet\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: \"100px\" }}></div>\r\n\r\n          <React.Fragment className=\"mt-5 d-flex justify-content-center\">\r\n            <button\r\n              onClick={() => this.handleConf()}\r\n              className=\"btn p-3 btn-success btn-block\"\r\n              disabled={this.state.option ? false : true}\r\n            >\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Complete to Unlock 5 Points\r\n              </h3>\r\n            </button>\r\n          </React.Fragment>\r\n        </div>\r\n\r\n        <Modal dialogClassName=\"sm\" show={visible} effect=\"fadeInUp\">\r\n          <button\r\n            onClick={() => this.handleClose()}\r\n            className=\"mt-2 btn ml-auto\"\r\n          >\r\n            <i class=\"fa fa-times fa-2x\"></i>\r\n          </button>\r\n\r\n          <OnComplete count={5} pt={pt} />\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicationCompliance;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\cbp\\custom\\verify.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\services\\server.js",["338","339"],"var patients = require(\"./json/patient.json\");\r\nvar taskLibrary = require(\"./json/taskReference.json\");\r\nvar billingcpt = require(\"./json/billingCodes.json\");\r\n\r\n// Exports Weekly Tasks\r\n// Returns JSON Array of Patient Objects\r\nexport function getWeekly() {\r\n  let tasks = patients.weekly;\r\n  let reference = taskLibrary;\r\n  let patientList = [];\r\n\r\n  for (var i = 0; i < tasks.length; i++) {\r\n    let tmp = tasks[i]._id;\r\n\r\n    let ref = reference[tmp];\r\n\r\n    let outcome = ref.outcomes;\r\n\r\n    let description = ref.description.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let scheduledTop = outcome.scheduledTop.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let scheduledBottom = outcome.scheduledBottom.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let noAnswerTop = outcome.noAnswerTop.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let noAnswerBottom = outcome.noAnswerBottom.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n\r\n    let pt = {\r\n      _id: tasks[i]._id,\r\n      patientID: tasks[i].patientID,\r\n      firstName: tasks[i].firstName,\r\n      lastName: tasks[i].lastName,\r\n      phone: tasks[i].phone,\r\n      status: tasks[i].status,\r\n      descriptor: tasks[i].descriptor,\r\n      task: ref.task,\r\n      reason: ref.reason,\r\n      description: description,\r\n      scheduledTop: scheduledTop,\r\n      scheduledBottom: scheduledBottom,\r\n      noAnswerTop: noAnswerTop,\r\n      noAnswerBottom: noAnswerBottom,\r\n    };\r\n\r\n    patientList.push(pt);\r\n  }\r\n\r\n  console.log(patientList);\r\n\r\n  return patientList;\r\n}\r\n\r\n// Gets Single Patient Data\r\n// Return JSON Object\r\nexport function getPatient(path) {\r\n  let tasks = patients.weekly;\r\n  let reference = taskLibrary;\r\n\r\n  let pathname = path.split(\"/\");\r\n  let getID = pathname[3];\r\n\r\n  for (var i = 0; i < tasks.length; i++) {\r\n    if (tasks[i].patientID == getID) {\r\n      let tmp = tasks[i]._id;\r\n\r\n      let ref = reference[tmp];\r\n\r\n      let outcome = ref.outcomes;\r\n\r\n      let description = ref.description.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let scheduledTop = outcome.scheduledTop.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let scheduledBottom = outcome.scheduledBottom.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let noAnswerTop = outcome.noAnswerTop.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let noAnswerBottom = outcome.noAnswerBottom.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n\r\n      let pt = {\r\n        _id: tasks[i]._id,\r\n        patientID: tasks[i].patientID,\r\n        firstName: tasks[i].firstName,\r\n        lastName: tasks[i].lastName,\r\n        phone: tasks[i].phone,\r\n        status: tasks[i].status,\r\n        descriptor: tasks[i].descriptor,\r\n        task: ref.task,\r\n        reason: ref.reason,\r\n        description: description,\r\n        scheduledTop: scheduledTop,\r\n        scheduledBottom: scheduledBottom,\r\n        noAnswerTop: noAnswerTop,\r\n        noAnswerBottom: noAnswerBottom,\r\n      };\r\n\r\n      return pt;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function getMBC() {\r\n   let tasks = patients.monthly;\r\n   let ref = taskLibrary;\r\n   let patientList = {\r\n      meta: {},\r\n      patients: []\r\n   };\r\n\r\n   for (var i = 0; i < tasks.length; i++) {\r\n      if (tasks[i]._id == \"mbc\") {\r\n         patientList.meta = ref.mbc;\r\n         patientList.patients.push(tasks[i]);\r\n      }\r\n   }\r\n\r\n   console.log(patientList);\r\n\r\n   return patientList;\r\n}\r\n\r\nexport function getBillCPT() {\r\n   return billingcpt;\r\n}\r\n\r\nexport function serverPOST(obj){\r\n  \r\n}\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\user\\allStarProfiles.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\common\\header.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\taskSubmission\\onComplete.jsx",["340","341","342","343"],"// Root Imports\r\nimport React, { Component } from \"react\";\r\n\r\n// Component Imports\r\nimport OnSuccess from \"./onSuccess\";\r\nimport Confirmation from \"./confirmation\";\r\n\r\n// Services\r\nimport { serverPOST } from \"../../services/server\";\r\n\r\nclass onComplete extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    show: false,\r\n    pin: \"\",\r\n  };\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Set Loading to TRUE\r\n    this.setState({ isLoading: true });\r\n\r\n    // Create Patient POST Request\r\n    const { pin } = this.state;\r\n    const { pt } = this.props;\r\n\r\n    let obj = {\r\n      pin: pin,\r\n      patient: pt,\r\n    };\r\n\r\n    // Send POST Request\r\n    // TEMPORARY CODE TO MIMIC POST REQUEST\r\n    let response = {\r\n      staff: \"Zaid Uddin\",\r\n      status: 0,\r\n    };\r\n\r\n    setTimeout(() => {\r\n      if (obj.pin == \"1234\") {\r\n        response.status = 200;\r\n      } else {\r\n        response.status = 500;\r\n      }\r\n\r\n      // Wait for Response\r\n      console.log(response);\r\n\r\n      // Call Function Based on Response\r\n      if (response.status == 200) this.handleOnSuccess();\r\n      else if (response.status == 500) this.handleOnError();\r\n    }, 3000);\r\n  };\r\n\r\n  handleOnChange = ({ currentTarget: input }) => {\r\n    let pin = this.state.pin;\r\n    pin = input.value;\r\n\r\n    this.setState({ pin });\r\n  };\r\n\r\n  handleOnSuccess() {\r\n    console.log(\"Success!!!\");\r\n\r\n    this.setState({ show: true, isLoading: false });\r\n  }\r\n\r\n  handleOnError() {}\r\n\r\n  render() {\r\n    const { isLoading, show, pin } = this.state;\r\n    const { count, pt } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {isLoading ? (\r\n          <div className=\"m-5 d-flex justify-content-center\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : show ? (\r\n          <OnSuccess />\r\n        ) : (\r\n          <Confirmation\r\n            count={count}\r\n            pt={pt}\r\n            pin={pin}\r\n            handleOnSubmit={this.handleOnSubmit}\r\n            handleOnChange={this.handleOnChange}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default onComplete;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\forms\\resetPin.jsx",["344","345","346","347"],"import React from \"react\";\r\n\r\n// Root CSS\r\nimport \"../../css/styles.css\";\r\n\r\n// External Libraries\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  Label,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  InputGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\n\r\nconst ResetPin = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"\" style={{ border: \"none\" }}>\r\n        <CardBody>\r\n          <Form>\r\n            {/* START Input */}\r\n            <FormGroup row>\r\n              <Label for=\"input-1\" sm={4}>\r\n                Pin Information\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"text\"\r\n                  id=\"enterName\"\r\n                  placeholder=\"Last Rembered Pin...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Input */}\r\n            {/* START Input */}\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}></Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"text\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Practice Username...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}></Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Practice Password...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup row>\r\n              <Label for=\"operatingSystem11\" sm={4} className=\"pt-0\">\r\n                How would you like to receive the new pin?\r\n              </Label>\r\n              <Col sm={8}>\r\n                <CustomInput\r\n                  type=\"radio\"\r\n                  id=\"operatingSystem11\"\r\n                  name=\"operatingSystem\"\r\n                  label=\"Email\"\r\n                  inline\r\n                  defaultChecked\r\n                />\r\n                <CustomInput\r\n                  type=\"radio\"\r\n                  id=\"operatingSystem12\"\r\n                  name=\"operatingSystem\"\r\n                  label=\"Phone\"\r\n                  inline\r\n                />\r\n                <CustomInput\r\n                  type=\"radio\"\r\n                  id=\"operatingSystem13\"\r\n                  name=\"operatingSystem\"\r\n                  label=\"Practice Manager\"\r\n                  inline\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            {/* START Textarea */}\r\n            <FormGroup row>\r\n              <Label for=\"message-1\" sm={4}>\r\n                Comments\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"text\"\r\n                  id=\"message-1\"\r\n                  placeholder=\"Anything we need to know...?\"\r\n                  className=\"mb-2\"\r\n                />\r\n                <CustomInput\r\n                  type=\"checkbox\"\r\n                  id=\"iConfirm2\"\r\n                  label=\"I confirm that I have read the Terms & Agreements.\"\r\n                  className=\"mb-3\"\r\n                />\r\n                <Button color=\"primary\">Save</Button>\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Textarea */}\r\n          </Form>\r\n          {/* END Form */}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ResetPin;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\forms\\editBilling.jsx",["348","349","350","351"],"import React from \"react\";\r\n\r\n// External Libraries\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  Label,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  InputGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\n\r\nconst EditBilling = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"\" style={{border: \"none\"}}>\r\n        <CardBody>\r\n          <Form>\r\n            {/* START Input */}\r\n            <FormGroup row>\r\n              <Label for=\"input-1\" sm={4}>\r\n                Banking Information\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"text\"\r\n                  id=\"enterName\"\r\n                  placeholder=\"Name on Account...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Input */}\r\n            {/* START Input */}\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Account Number...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Routing Number...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            {/* END Input */}\r\n            {/* START Radios */}\r\n            <FormGroup row className=\"mt-5\">\r\n              <Label for=\"operatingSystem11\" sm={4} className=\"pt-0\">\r\n                Billing Address\r\n              </Label>\r\n              \r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"text\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Address...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"City...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"State...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Radios */}\r\n            {/* START Select */}\r\n            <FormGroup row>\r\n              <Label for=\"country-selector-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <CustomInput\r\n                  type=\"select\"\r\n                  name=\"customSelect\"\r\n                  id=\"country-selector-1\"\r\n                >\r\n                  <option value=\"\">Select Country...</option>\r\n                  <option>United States of America (US)</option>\r\n                  <option>United Kingdom (UK)</option>\r\n                  <option>Australia</option>\r\n                  <option>Canada</option>\r\n                  <option>Other...</option>\r\n                </CustomInput>\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Zip Code...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Select */}\r\n            \r\n            {/* START Textarea */}\r\n            <FormGroup row>\r\n              <Label for=\"message-1\" sm={4}>\r\n                Comments\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"text\"\r\n                  id=\"message-1\"\r\n                  placeholder=\"Anything we need to know...?\"\r\n                  className=\"mb-2\"\r\n                />\r\n                <CustomInput\r\n                  type=\"checkbox\"\r\n                  id=\"iConfirm2\"\r\n                  label=\"I confirm that I have read the Terms & Agreements.\"\r\n                  className=\"mb-3\"\r\n                />\r\n                <Button color=\"primary\">Save</Button>\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Textarea */}\r\n          </Form>\r\n          {/* END Form */}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EditBilling;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\tasks\\accordions.jsx",[],"E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\user\\profile.jsx",["352"],"import React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  const {img, name, points} = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-inline-block m-5\" style={{height: \"10%\", width: \"10%\"}}>\r\n        <img\r\n          src={img}\r\n          style={{ borderRadius: \"50%\" }}\r\n          className=\"img-responsive img-thumbnail\"\r\n        />\r\n        <p className=\"mt-1 h6 text-center text-decoration-none\">{name}</p>\r\n        <h5 className=\"text-center text-success\">{points}</h5>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  img: \"Loading...\",\r\n  name: \"Loading...\",\r\n  points: \"0\"\r\n};\r\n\r\nexport default Profile;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\taskSubmission\\onSuccess.jsx",["353"],"import React from \"react\";\r\n\r\n// External Libraries\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Assets\r\nimport congrats from '../../assets/congrats.jpeg';\r\n\r\nconst onSuccess = () => {\r\n  return (\r\n      <React.Fragment>\r\n        <div className=\"d-flex justify-content-center\">\r\n            <img className=\"img-fluid\" width=\"50%\" src={congrats}/>\r\n        </div>\r\n\r\n        <div>\r\n          <h2 className=\"m-5 font-weight-bold text-success text-center\">\r\n            Congratulations!!!\r\n          </h2>\r\n          <h3 className=\"m-5 font-weight-light text-center\">\r\n            You've just earned 15 points, you can use these points to redeem cash, giftcards or products. To redeem, head to the profile section!\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"m-5 d-flex justify-content-center\">\r\n            <Link className=\"btn p-2 btn-primary\" to=\"/home\">\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Home\r\n              </h3>\r\n            </Link>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default onSuccess;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\tasks\\taskAccordion.jsx",["354"],"// Root Imports\r\nimport { React } from \"react\";\r\n\r\n// External Library Imports\r\nimport { Accordion, Button } from \"react-bootstrap\";\r\n\r\nconst TaskAccordion = (props) => {\r\n  const { color, heading, body } = props;\r\n\r\n  return (\r\n    <Accordion>\r\n      <div\r\n        className=\"d-flex\"\r\n        style={{\r\n          border: `1px solid ${color}`,\r\n          borderRadius: \"5px\",\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n        }}\r\n      >\r\n        <div className=\"mr-auto\">\r\n          <Accordion.Toggle as={Button} variant=\"button\" eventKey=\"0\">\r\n            <h3 style={{ color: `${color}` }}>{heading}</h3>\r\n          </Accordion.Toggle>\r\n        </div>\r\n        <div>\r\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n            <span className=\"ml-auto\">\r\n              <i class=\"fa fa-plus text-dark fa-2x\"></i>\r\n            </span>\r\n          </Accordion.Toggle>\r\n        </div>\r\n      </div>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <table\r\n          className=\"table table-hover table-responsive\"\r\n          style={{\r\n            cursor: \"pointer\",\r\n            overflowX: \"auto\"\r\n          }}\r\n        >\r\n          <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n            <tr>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"15%\" }}\r\n              >\r\n                Tasks\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"5%\" }}\r\n              >\r\n                Type\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"30%\" }}\r\n              >\r\n                Reason\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"10%\" }}\r\n              >\r\n                Patient Name\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"10%\" }}\r\n              >\r\n                Provider\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"10%\" }}\r\n              >\r\n                Status\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"30%\" }}\r\n              >\r\n                Description\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tr\r\n                // key={ea.patientID}\r\n                // onClick={() => this.goToTask(ea._id, ea.patientID)}\r\n              >\r\n                <td className=\"align-middle font-weight-bold\">\r\n                  <i class=\"fa fa-circle text-danger\"></i>\r\n                  Bill CPTII Codes\r\n                </td>\r\n                <td className=\"align-middle font-weight-bold\">\r\n                  MA\r\n                </td>\r\n                <td>\r\n                  CPTII codes are reporting codes which allow payors to ID where\r\n                  members’ BPs stand within a controlled or uncontrolled range,\r\n                  any given year. Gappy has automatically paired the appropriate\r\n                  CPTII codes based on the systolic and diastolic readings for\r\n                  you.\r\n                  <span\r\n                    className=\"ml-2 badge badge-pill text-white\"\r\n                    style={{ background: \"green\" }}\r\n                  >\r\n                    Call\r\n                  </span>\r\n                  <span\r\n                    className=\"ml-2 badge badge-pill text-white\"\r\n                    style={{ background: \"black\" }}\r\n                  >\r\n                    Schedule\r\n                  </span>\r\n                </td>\r\n                <td className=\"align-middle\" style={{ overflowX: \"auto\"}}>\r\n                  John Loe\r\n                </td>\r\n                <td className=\"align-middle\" style={{ overflowX: \"auto\"}}>\r\n                  Margolis Something\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <span\r\n                    className=\"ml-2 badge badge-pill text-white\"\r\n                    style={{ background: \"red\" }}\r\n                  >\r\n                    In-Complete\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  CPTII codes are reporting codes which allow payors to ID where\r\n                  members’ BPs stand within a controlled or uncontrolled range\r\n                </td>\r\n              </tr>\r\n          </tbody>\r\n        </table>\r\n      </Accordion.Collapse>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default TaskAccordion;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\gappytv\\components\\taskSubmission\\confirmation.jsx",["355"],"import React from \"react\";\r\n\r\nconst Confirmation = (props) => {\r\n  const { count, pt, pin, handleOnSubmit, handleOnChange } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <h3 className=\"m-5 font-weight-light text-center\">\r\n          You have selected one or more boxes, certifying that you have\r\n          completed the associated task of, submitting the appropriate CPTII\r\n          codes for the selected patients\r\n        </h3>\r\n      </div>\r\n\r\n      <div className=\"m-5 d-flex justify-content-center\">\r\n        <form onSubmit={handleOnSubmit}>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control mb-3\"\r\n            name=\"pin\"\r\n            id=\"pin\"\r\n            value={pin}\r\n            onChange={handleOnChange}\r\n            placeholder=\"Enter Pin\"\r\n          ></input>\r\n          <button type=\"submit\" className=\"btn p-3 btn-success\">\r\n            <h3 className=\"font-weight-bold text-center\">\r\n              Complete to Unlock {count} Points\r\n            </h3>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","E:\\Gappy\\Back-End\\Payor-View\\src\\components\\services\\demo\\services.js",["356","357"],"var practices = require('./practices.json');\nvar providers = require('./providers.json');\nvar cbp = require('./cbp.json');\n\nexport function getPractices() {\n    return practices;\n}\n\nexport function getPatients() {\n    return cbp;\n}\n\nexport function getProviders() {\n    return providers;\n}\n\nexport function getProvider(id) {\n    let data = providers;\n     \n    for (let i = 0; i < data.length; i++) {\n        if (data[i].id === id)\n            return providers[i];\n    }\n\n    return providers;\n}\n\nexport function getProviderPatients(name) {\n    let data = cbp;\n    let tempObj = [];\n\nfor (let i = 0; i < data.length; i++) {\n        if (data[i].physicianName === name) {\n            tempObj.push(data[i]);\n        }\n    }\n\n    return tempObj;\n}\n\nexport function getPractice(id) {\n    let data = practices;\n     \n    for (let i = 0; i < data.length; i++) {\n        if (data[i].id === id)\n            return practices[i];\n    }\n\n    return practices[1];\n}\n\n//Return All Providers for Respective Practice\nexport function getPracticeProviders(id) {\n    let data = providers;\n    let tempObj = [];\n\n    for (let i = 0; i < data.length; i++) {\n        if (data[i].practiceID === id) {\n            tempObj.push(data[i]);\n        }\n    }\n\n    return tempObj;\n}\n\n// Which bucket\nexport function getPatientsInBucket(data, bucket) {\n    \n    if (data.length == 0) { return [] };\n    \n    console.log(data);\n    let patients = [];\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].bucket.length; j++) {\n            if (data[i].bucket[j] == bucket) {\n                patients.push(data[i]);\n                break;\n            }\n        }\n    }\n\n    console.log(patients);\n    return patients;\n}","E:\\Gappy\\Back-End\\Payor-View\\src\\utils\\payorColumns.js",[],{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","severity":1,"message":"363","line":56,"column":9,"nodeType":"364","messageId":"365","endLine":65,"endColumn":10},{"ruleId":"366","severity":1,"message":"367","line":90,"column":6,"nodeType":"368","endLine":90,"endColumn":8,"suggestions":"369"},{"ruleId":"370","severity":1,"message":"371","line":48,"column":31,"nodeType":"372","messageId":"373","endLine":48,"endColumn":33},{"ruleId":"374","severity":1,"message":"375","line":6,"column":3,"nodeType":"376","messageId":"377","endLine":6,"endColumn":14},{"ruleId":"370","severity":1,"message":"371","line":33,"column":29,"nodeType":"372","messageId":"373","endLine":33,"endColumn":31},{"ruleId":"370","severity":1,"message":"371","line":39,"column":42,"nodeType":"372","messageId":"373","endLine":39,"endColumn":44},{"ruleId":"374","severity":1,"message":"378","line":15,"column":3,"nodeType":"376","messageId":"377","endLine":15,"endColumn":13},{"ruleId":"379","severity":1,"message":"380","line":52,"column":11,"nodeType":"376","messageId":"381","endLine":52,"endColumn":19},{"ruleId":"379","severity":1,"message":"382","line":53,"column":11,"nodeType":"376","messageId":"381","endLine":53,"endColumn":13},{"ruleId":"383","severity":1,"message":"384","line":61,"column":15,"nodeType":"385","messageId":"386","endLine":61,"endColumn":25,"fix":"387"},{"ruleId":"383","severity":1,"message":"384","line":87,"column":17,"nodeType":"385","messageId":"386","endLine":87,"endColumn":27,"fix":"388"},{"ruleId":"383","severity":1,"message":"384","line":98,"column":17,"nodeType":"385","messageId":"386","endLine":98,"endColumn":27,"fix":"389"},{"ruleId":"370","severity":1,"message":"371","line":123,"column":35,"nodeType":"372","messageId":"373","endLine":123,"endColumn":37},{"ruleId":"370","severity":1,"message":"390","line":129,"column":27,"nodeType":"372","messageId":"373","endLine":129,"endColumn":29},{"ruleId":"370","severity":1,"message":"390","line":134,"column":28,"nodeType":"372","messageId":"373","endLine":134,"endColumn":30},{"ruleId":"370","severity":1,"message":"390","line":139,"column":23,"nodeType":"372","messageId":"373","endLine":139,"endColumn":25},{"ruleId":"370","severity":1,"message":"371","line":177,"column":18,"nodeType":"372","messageId":"373","endLine":177,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":182,"column":38,"nodeType":"372","messageId":"373","endLine":182,"endColumn":40},{"ruleId":"370","severity":1,"message":"371","line":189,"column":17,"nodeType":"372","messageId":"373","endLine":189,"endColumn":19},{"ruleId":"370","severity":1,"message":"371","line":220,"column":36,"nodeType":"372","messageId":"373","endLine":220,"endColumn":38},{"ruleId":"370","severity":1,"message":"371","line":223,"column":38,"nodeType":"372","messageId":"373","endLine":223,"endColumn":40},{"ruleId":"370","severity":1,"message":"371","line":228,"column":41,"nodeType":"372","messageId":"373","endLine":228,"endColumn":43},{"ruleId":"370","severity":1,"message":"371","line":231,"column":46,"nodeType":"372","messageId":"373","endLine":231,"endColumn":48},{"ruleId":"391","severity":1,"message":"392","line":290,"column":23,"nodeType":"393","endLine":290,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":298,"column":23,"nodeType":"393","endLine":298,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":309,"column":23,"nodeType":"393","endLine":309,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":317,"column":23,"nodeType":"393","endLine":317,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":325,"column":23,"nodeType":"393","endLine":325,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":333,"column":23,"nodeType":"393","endLine":333,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":342,"column":23,"nodeType":"393","endLine":342,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":353,"column":23,"nodeType":"393","endLine":353,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":362,"column":23,"nodeType":"393","endLine":362,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":373,"column":23,"nodeType":"393","endLine":373,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":379,"column":23,"nodeType":"393","endLine":379,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":390,"column":23,"nodeType":"393","endLine":390,"endColumn":33},{"ruleId":"374","severity":1,"message":"394","line":451,"column":7,"nodeType":"376","messageId":"377","endLine":451,"endColumn":14},{"ruleId":"370","severity":1,"message":"371","line":477,"column":20,"nodeType":"372","messageId":"373","endLine":477,"endColumn":22},{"ruleId":"379","severity":1,"message":"380","line":21,"column":13,"nodeType":"376","messageId":"381","endLine":21,"endColumn":21},{"ruleId":"379","severity":1,"message":"382","line":22,"column":13,"nodeType":"376","messageId":"381","endLine":22,"endColumn":15},{"ruleId":"395","severity":1,"message":"396","line":32,"column":5,"nodeType":"397","messageId":"398","endLine":32,"endColumn":17},{"ruleId":"379","severity":1,"message":"380","line":55,"column":13,"nodeType":"376","messageId":"381","endLine":55,"endColumn":21},{"ruleId":"379","severity":1,"message":"382","line":56,"column":13,"nodeType":"376","messageId":"381","endLine":56,"endColumn":15},{"ruleId":"379","severity":1,"message":"399","line":58,"column":18,"nodeType":"376","messageId":"381","endLine":58,"endColumn":19},{"ruleId":"374","severity":1,"message":"400","line":119,"column":9,"nodeType":"376","messageId":"377","endLine":119,"endColumn":17},{"ruleId":"374","severity":1,"message":"401","line":121,"column":9,"nodeType":"376","messageId":"377","endLine":121,"endColumn":13},{"ruleId":"379","severity":1,"message":"380","line":130,"column":13,"nodeType":"376","messageId":"381","endLine":130,"endColumn":21},{"ruleId":"379","severity":1,"message":"382","line":131,"column":13,"nodeType":"376","messageId":"381","endLine":131,"endColumn":15},{"ruleId":"395","severity":1,"message":"396","line":140,"column":5,"nodeType":"397","messageId":"398","endLine":140,"endColumn":20},{"ruleId":"374","severity":1,"message":"402","line":157,"column":9,"nodeType":"376","messageId":"377","endLine":157,"endColumn":13},{"ruleId":"374","severity":1,"message":"402","line":168,"column":9,"nodeType":"376","messageId":"377","endLine":168,"endColumn":13},{"ruleId":"370","severity":1,"message":"371","line":247,"column":67,"nodeType":"372","messageId":"373","endLine":247,"endColumn":69},{"ruleId":"370","severity":1,"message":"371","line":260,"column":37,"nodeType":"372","messageId":"373","endLine":260,"endColumn":39},{"ruleId":"370","severity":1,"message":"371","line":273,"column":70,"nodeType":"372","messageId":"373","endLine":273,"endColumn":72},{"ruleId":"370","severity":1,"message":"371","line":285,"column":35,"nodeType":"372","messageId":"373","endLine":285,"endColumn":37},{"ruleId":"370","severity":1,"message":"371","line":286,"column":38,"nodeType":"372","messageId":"373","endLine":286,"endColumn":40},{"ruleId":"403","severity":1,"message":"404","line":286,"column":47,"nodeType":"405","messageId":"406","endLine":286,"endColumn":49},{"ruleId":"403","severity":1,"message":"404","line":286,"column":79,"nodeType":"405","messageId":"406","endLine":286,"endColumn":81},{"ruleId":"370","severity":1,"message":"371","line":286,"column":102,"nodeType":"372","messageId":"373","endLine":286,"endColumn":104},{"ruleId":"370","severity":1,"message":"371","line":299,"column":75,"nodeType":"372","messageId":"373","endLine":299,"endColumn":77},{"ruleId":"370","severity":1,"message":"371","line":299,"column":106,"nodeType":"372","messageId":"373","endLine":299,"endColumn":108},{"ruleId":"370","severity":1,"message":"371","line":312,"column":75,"nodeType":"372","messageId":"373","endLine":312,"endColumn":77},{"ruleId":"370","severity":1,"message":"371","line":312,"column":106,"nodeType":"372","messageId":"373","endLine":312,"endColumn":108},{"ruleId":"370","severity":1,"message":"371","line":326,"column":75,"nodeType":"372","messageId":"373","endLine":326,"endColumn":77},{"ruleId":"370","severity":1,"message":"371","line":326,"column":106,"nodeType":"372","messageId":"373","endLine":326,"endColumn":108},{"ruleId":"370","severity":1,"message":"371","line":342,"column":75,"nodeType":"372","messageId":"373","endLine":342,"endColumn":77},{"ruleId":"370","severity":1,"message":"371","line":342,"column":106,"nodeType":"372","messageId":"373","endLine":342,"endColumn":108},{"ruleId":"370","severity":1,"message":"371","line":355,"column":75,"nodeType":"372","messageId":"373","endLine":355,"endColumn":77},{"ruleId":"370","severity":1,"message":"371","line":355,"column":106,"nodeType":"372","messageId":"373","endLine":355,"endColumn":108},{"ruleId":"370","severity":1,"message":"371","line":369,"column":75,"nodeType":"372","messageId":"373","endLine":369,"endColumn":77},{"ruleId":"370","severity":1,"message":"371","line":369,"column":106,"nodeType":"372","messageId":"373","endLine":369,"endColumn":108},{"ruleId":"374","severity":1,"message":"407","line":1,"column":10,"nodeType":"376","messageId":"377","endLine":1,"endColumn":16},{"ruleId":"374","severity":1,"message":"408","line":5,"column":7,"nodeType":"376","messageId":"377","endLine":5,"endColumn":19},{"ruleId":"409","severity":1,"message":"410","line":20,"column":15,"nodeType":"411","endLine":20,"endColumn":63},{"ruleId":"370","severity":1,"message":"371","line":13,"column":13,"nodeType":"372","messageId":"373","endLine":13,"endColumn":15},{"ruleId":"374","severity":1,"message":"412","line":23,"column":80,"nodeType":"376","messageId":"377","endLine":23,"endColumn":86},{"ruleId":"370","severity":1,"message":"371","line":40,"column":60,"nodeType":"372","messageId":"373","endLine":40,"endColumn":62},{"ruleId":"370","severity":1,"message":"371","line":45,"column":84,"nodeType":"372","messageId":"373","endLine":45,"endColumn":86},{"ruleId":"370","severity":1,"message":"371","line":50,"column":49,"nodeType":"372","messageId":"373","endLine":50,"endColumn":51},{"ruleId":"370","severity":1,"message":"371","line":55,"column":35,"nodeType":"372","messageId":"373","endLine":55,"endColumn":37},{"ruleId":"374","severity":1,"message":"413","line":2,"column":13,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"370","severity":1,"message":"371","line":8,"column":20,"nodeType":"372","messageId":"373","endLine":8,"endColumn":22},{"ruleId":"409","severity":1,"message":"414","line":14,"column":103,"nodeType":"411","endLine":14,"endColumn":163},{"ruleId":"409","severity":1,"message":"410","line":18,"column":15,"nodeType":"411","endLine":18,"endColumn":63},{"ruleId":"374","severity":1,"message":"415","line":1,"column":17,"nodeType":"376","messageId":"377","endLine":1,"endColumn":26},{"ruleId":"374","severity":1,"message":"416","line":25,"column":5,"nodeType":"376","messageId":"377","endLine":25,"endColumn":16},{"ruleId":"374","severity":1,"message":"417","line":39,"column":36,"nodeType":"376","messageId":"377","endLine":39,"endColumn":44},{"ruleId":"374","severity":1,"message":"418","line":8,"column":10,"nodeType":"376","messageId":"377","endLine":8,"endColumn":16},{"ruleId":"370","severity":1,"message":"371","line":20,"column":26,"nodeType":"372","messageId":"373","endLine":20,"endColumn":28},{"ruleId":"370","severity":1,"message":"371","line":21,"column":32,"nodeType":"372","messageId":"373","endLine":21,"endColumn":34},{"ruleId":"370","severity":1,"message":"371","line":38,"column":15,"nodeType":"372","messageId":"373","endLine":38,"endColumn":17},{"ruleId":"370","severity":1,"message":"371","line":118,"column":26,"nodeType":"372","messageId":"373","endLine":118,"endColumn":28},{"ruleId":"370","severity":1,"message":"371","line":150,"column":32,"nodeType":"372","messageId":"373","endLine":150,"endColumn":34},{"ruleId":"419","severity":1,"message":"420","line":311,"column":25,"nodeType":"411","endLine":311,"endColumn":29},{"ruleId":"419","severity":1,"message":"420","line":348,"column":25,"nodeType":"411","endLine":348,"endColumn":29},{"ruleId":"419","severity":1,"message":"420","line":429,"column":25,"nodeType":"411","endLine":429,"endColumn":29},{"ruleId":"419","severity":1,"message":"420","line":464,"column":25,"nodeType":"411","endLine":464,"endColumn":29},{"ruleId":"374","severity":1,"message":"421","line":5,"column":10,"nodeType":"376","messageId":"377","endLine":5,"endColumn":20},{"ruleId":"374","severity":1,"message":"422","line":5,"column":22,"nodeType":"376","messageId":"377","endLine":5,"endColumn":32},{"ruleId":"370","severity":1,"message":"371","line":25,"column":27,"nodeType":"372","messageId":"373","endLine":25,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":96,"column":27,"nodeType":"372","messageId":"373","endLine":96,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":106,"column":27,"nodeType":"372","messageId":"373","endLine":106,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":118,"column":27,"nodeType":"372","messageId":"373","endLine":118,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":128,"column":27,"nodeType":"372","messageId":"373","endLine":128,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":25,"column":27,"nodeType":"372","messageId":"373","endLine":25,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":93,"column":27,"nodeType":"372","messageId":"373","endLine":93,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":103,"column":27,"nodeType":"372","messageId":"373","endLine":103,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":115,"column":27,"nodeType":"372","messageId":"373","endLine":115,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":125,"column":27,"nodeType":"372","messageId":"373","endLine":125,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":135,"column":27,"nodeType":"372","messageId":"373","endLine":135,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":150,"column":27,"nodeType":"372","messageId":"373","endLine":150,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":160,"column":27,"nodeType":"372","messageId":"373","endLine":160,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":170,"column":27,"nodeType":"372","messageId":"373","endLine":170,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":75,"column":28,"nodeType":"372","messageId":"373","endLine":75,"endColumn":30},{"ruleId":"370","severity":1,"message":"371","line":136,"column":24,"nodeType":"372","messageId":"373","endLine":136,"endColumn":26},{"ruleId":"374","severity":1,"message":"423","line":9,"column":10,"nodeType":"376","messageId":"377","endLine":9,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":41,"column":19,"nodeType":"372","messageId":"373","endLine":41,"endColumn":21},{"ruleId":"370","severity":1,"message":"371","line":51,"column":27,"nodeType":"372","messageId":"373","endLine":51,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":52,"column":32,"nodeType":"372","messageId":"373","endLine":52,"endColumn":34},{"ruleId":"374","severity":1,"message":"424","line":10,"column":3,"nodeType":"376","messageId":"377","endLine":10,"endColumn":12},{"ruleId":"374","severity":1,"message":"425","line":13,"column":3,"nodeType":"376","messageId":"377","endLine":13,"endColumn":11},{"ruleId":"374","severity":1,"message":"426","line":16,"column":3,"nodeType":"376","messageId":"377","endLine":16,"endColumn":6},{"ruleId":"374","severity":1,"message":"427","line":19,"column":3,"nodeType":"376","messageId":"377","endLine":19,"endColumn":13},{"ruleId":"374","severity":1,"message":"424","line":7,"column":3,"nodeType":"376","messageId":"377","endLine":7,"endColumn":12},{"ruleId":"374","severity":1,"message":"425","line":10,"column":3,"nodeType":"376","messageId":"377","endLine":10,"endColumn":11},{"ruleId":"374","severity":1,"message":"426","line":13,"column":3,"nodeType":"376","messageId":"377","endLine":13,"endColumn":6},{"ruleId":"374","severity":1,"message":"427","line":16,"column":3,"nodeType":"376","messageId":"377","endLine":16,"endColumn":13},{"ruleId":"428","severity":1,"message":"429","line":10,"column":9,"nodeType":"411","endLine":14,"endColumn":11},{"ruleId":"428","severity":1,"message":"429","line":13,"column":13,"nodeType":"411","endLine":13,"endColumn":68},{"ruleId":"374","severity":1,"message":"430","line":8,"column":27,"nodeType":"376","messageId":"377","endLine":8,"endColumn":31},{"ruleId":"374","severity":1,"message":"431","line":4,"column":18,"nodeType":"376","messageId":"377","endLine":4,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":69,"column":21,"nodeType":"372","messageId":"373","endLine":69,"endColumn":23},{"ruleId":"370","severity":1,"message":"371","line":76,"column":35,"nodeType":"372","messageId":"373","endLine":76,"endColumn":37},"no-native-reassign",["432"],"no-negated-in-lhs",["433"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["434"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'getPractice' is defined but never used.","Identifier","unusedVar","'getPending' is defined but never used.","no-redeclare","'strArray' is already defined.","redeclared","'id' is already defined.","no-useless-rename","Destructuring assignment data unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"435","text":"436"},{"range":"437","text":"436"},{"range":"438","text":"436"},"Expected '!==' and instead saw '!='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'heading' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'i' is already defined.","'patients' is assigned a value but never used.","'meta' is assigned a value but never used.","'data' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'format' is defined but never used.","'badgesColors' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'toggle' is assigned a value but never used.","'range' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'setPageSize' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'Header' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'getPatient' is defined but never used.","'finishTask' is defined but never used.","'serverPOST' is defined but never used.","'CardTitle' is defined but never used.","'FormText' is defined but never used.","'Row' is defined but never used.","'InputGroup' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'body' is assigned a value but never used.","'pt' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"439","fix":"440"},[1570,1580],"data",[2425,2435],[2767,2777],"Update the dependencies array to be: [authListener]",{"range":"441","text":"442"},[2815,2817],"[authListener]"]