{"version":3,"sources":["fire.js","components/common/headerMain.jsx","components/common/progress.jsx","components/common/sessionsByDevice.jsx","components/home.jsx","components/navbar.jsx","components/practices.jsx","components/services/services.js","components/common/practiceProfileCard.jsx","components/common/measureBody.jsx","components/practice.jsx","components/gaps.jsx","components/common/not-found.jsx","components/test.jsx","utils/paginate.js","components/common/pagination.jsx","components/providers.jsx","components/common/providerProfileCard.jsx","components/provider.jsx","components/common/globalFilter.jsx","components/reactTable.jsx","utils/columns.js","utils/payorColumns.js","components/tmpCBP.jsx","components/members.jsx","components/login.jsx","components/gappytv/components/common/header.jsx","components/gappytv/components/user/profile.jsx","components/gappytv/assets/profile4.jpg","components/gappytv/components/user/allStarProfiles.jsx","components/gappytv/components/tasks/taskAccordion.jsx","components/gappytv/components/tasks/accordions.jsx","components/gappytv/components/responsive/dash.jsx","components/gappytv/components/forms/editBilling.jsx","components/gappytv/components/forms/resetPin.jsx","components/gappytv/components/user/userPage.jsx","components/gappytv/services/server.js","components/gappytv/assets/congrats.jpeg","components/gappytv/components/taskSubmission/onSuccess.jsx","components/gappytv/components/taskSubmission/confirmation.jsx","components/gappytv/components/taskSubmission/onComplete.jsx","components/gappytv/components/cbp/custom/billCodes.jsx","components/gappytv/components/cbp/custom/medCompliance.jsx","components/gappytv/components/cbp/custom/upcomingAppt.jsx","components/gappytv/components/cbp/custom/scheduleAppt.jsx","components/gappytv/components/cbp/custom/verify.jsx","components/gappytv/components/cbp/custom/complianceAppt.jsx","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","HeaderMain","props","Fragment","className","title","defaultProps","subTitle","Progress","children","slim","otherProps","progressClass","classNames","SessionsByDevice","valuePercentColor","valuePercent","valueColor","value","titlePercentColor","Home","state","practices","providers","patients","openGaps","payor","enabled","styles","position","practiceSize","patientSize","providerSize","REACT_APP_API_PRACTICES","process","axios","get","data","i","length","is_enabled","id","total_gaps","console","log","this","setState","Container","Row","Col","lg","to","style","cursor","textDecoration","Card","CardBody","CardTitle","tag","sm","multi","height","bar","color","CardFooter","Component","NavBar","handleLogout","onClick","Practices","isLoading","isOpen","handleClosedGaps","handleOpenGaps","overflowX","whiteSpace","borderTop","borderBottom","map","practice","name","cbp_gaps","supd_gaps","spc_gaps","cdc_gaps","ninetyday_gaps","mammogram_gaps","provider","require","providerClosed","getVerified","array","tempObj","is_verified","push","getPracticeProviders","practiceID","getPracticePerformance","filterPatientsCompleted","is_complete","filterPatientsControlled","is_controlled","filterPatientsUnControlled","filterPatientsCompliant","is_compliant","filterPatientsUnCompliant","noReading","is_current_year","noReadingNotScheduled","next_visit","noReadingScheduled","reading","readingNotScheduled","readingScheduled","PracticeProfileCard","closed","manager","location","providerCnt","memberCnt","gaps","risk","href","Badge","pill","MeasureBody","onToggle","bool","badgeTitle","badgeColor","controlled","valueTitle","link","toggle","underline","Practice","cbp","handleCurrent","uncontrolled","match","params","handlePerformance","address","CardDeck","width","_id","Gaps","closedGaps","cards","img","header","bcbs","gappy","handlePreformance","footerTitle","footerTitleClassName","footerValue","footerIcon","NotFound","Test","paginate","items","pageNumber","pageSize","startIndex","_","slice","take","Pagination","itemsCount","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","Providers","handlePageChange","list","count","npi","ProviderProfileCard","NPI","open","Provider","patientFiltered","identifier","j","k","patient","first_name","last_name","dob","lastVisit","nextVisit","GlobalFilter","filter","setFilter","onChange","e","target","ReactTable","columns","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","prepareRow","setPageSize","setGlobalFilter","globalFilter","pageIndex","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","type","defaultValue","Number","disabled","class","role","COLUMNS","Header","accessor","PayorCOLUMNS","cbpTest","unverified","insurance","loadingStatus","visible","bcbsVisible","reportHeading","heading","handlePatients","openBCBSModal","handleCompleted","openModal","handleControlled","handleUnControlled","handleCompliant","handleUnCompliant","handleReading","handleReadingNotScheduled","handleReadingScheduled","handleNoReading","handlePending","handleVerified","handleNoReadingNotScheduled","handleNoReadingScheduled","styleNotCompliant","styleCompliant","background","styleNoReading","styleNoReadingSched","styleReading","styleReadingSched","styleIMG","wdith","styleBCBS","path","pathname","cbpData","includes","strArray","split","patientData","refactorData","dataArr","payorData","tmpCbp","tmp","tmpPatients","systolic","diastolic","date","last_visit","getAggregates","flag","patientname","physicianname","meta","verified","compliant","uncompliant","completed","marginLeft","marginTop","backgroundColor","fontWeight","Modal","dialogClassName","show","effect","onHide","closeModal","closeBCBSModal","Members","patientList","Login","email","setEmail","password","setPassword","handleLogin","hasAccount","setHasAccount","emailError","passwordError","Form","Group","size","controlId","Label","Control","autoFocus","required","Button","block","Profile","points","src","borderRadius","AllStarProfiles","TaskAccordion","body","Accordion","border","Toggle","as","variant","eventKey","Collapse","Accordions","Dash","paddingLeft","paddingRight","overflow","EditBilling","FormGroup","for","Input","placeholder","CustomInput","label","ResetPin","inline","defaultChecked","UserPage","form","param","margin","img2","alt","md","outline","renderForm","billingcpt","getBillCPT","onSuccess","congrats","Confirmation","pin","pt","handleOnSubmit","handleOnChange","onSubmit","onComplete","preventDefault","obj","response","staff","status","setTimeout","handleOnSuccess","handleOnError","input","currentTarget","BillCPT","marginBottom","handleAllCheck","rowspan","ea","borderLeft","syscpt","diacpt","handleOnCheck","handleConf","handleClose","MedicationCompliance","option","text","handleOnChecked","UpcomingAppt","ScheduleAppt","checked","firstName","LastName","phone","handleChange","bind","handleSubmit","event","award","lastName","Verify","physicianName","found","phys","ComplianceAppt","App","useState","user","setUser","setEmailError","setPasswordError","authListener","auth","onAuthStateChanged","useEffect","signOut","then","error","component","exact","CBP","from","signInWithEmailAndPassword","catch","err","code","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.756a633f.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyA7mvvJd-qm3Z_NeMDY9R_VOVhrkyTAYCA\",\r\n  authDomain: \"gappy-server.firebaseapp.com\",\r\n  projectId: \"gappy-server\",\r\n  storageBucket: \"gappy-server.appspot.com\",\r\n  messagingSenderId: \"212474184506\",\r\n  appId: \"1:212474184506:web:6ac3af9c3ea4d196f0c603\",\r\n  measurementId: \"G-QY59MEHG5B\"\r\n};\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default fire;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HeaderMain = (props) => (\r\n    <React.Fragment>\r\n        { /* START H1 Header */}\r\n        <div className={` d-flex ${ props.className }` }>\r\n            <h1 className=\"display-4 mr-3 mb-0 align-self-start\">\r\n                { props.title }\r\n            </h1>\r\n        </div>\r\n        { /* END H1 Header */}\r\n    </React.Fragment>\r\n)\r\nHeaderMain.propTypes = {\r\n    title: PropTypes.string,\r\n    subTitle: PropTypes.node,\r\n    className: PropTypes.string\r\n};\r\nHeaderMain.defaultProps = {\r\n    title: \"Waiting for Data...\",\r\n    subTitle: \"Waiting for Data...\",\r\n    className: \"my-4\"\r\n};\r\n\r\nexport { HeaderMain };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport {\r\n    Progress as BsProgress\r\n} from 'reactstrap';\r\n\r\n\r\nconst Progress = (props) => {\r\n    const { children, slim, className, ...otherProps } = props;\r\n    const progressClass = classNames(className, {\r\n        'height: 0.3rem;': slim\r\n    });\r\n\r\n    return (\r\n        <BsProgress className={ progressClass } { ...otherProps }>\r\n            { !slim && children }\r\n        </BsProgress>\r\n    );\r\n};\r\n\r\nProgress.propTypes = {\r\n    slim: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    children: PropTypes.node\r\n};\r\n\r\nexport { Progress };","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SessionsByDevice = (props) => (\r\n    <React.Fragment>\r\n      <div className={`mb-2 ${props.valuePercentColor}`}>{props.title}</div>\r\n      <h2 className={`${props.valuePercentColor}`}>{props.valuePercent}</h2>\r\n      <div className={`mb-3 ${props.valueColor}`}>{props.value}</div>\r\n    </React.Fragment>\r\n);\r\nSessionsByDevice.propTypes = {\r\n  title: PropTypes.node,\r\n  titlePercentColor: PropTypes.node,\r\n  valuePercent: PropTypes.string,\r\n  valuePercentColor: PropTypes.node,\r\n  value: PropTypes.node,\r\n  valueColor: PropTypes.node,\r\n};\r\nSessionsByDevice.defaultProps = {\r\n  title: \"Title\",\r\n  titlePercentColor: \"text-inverse\",\r\n  valuePercent: \"00,0\",\r\n  valuePercentColor: \"text-muted\",\r\n  value: \"000,000\",\r\n  valueColor: \"text-muted\",\r\n};\r\n\r\nexport { SessionsByDevice };\r\n","// Root Imports\r\nimport React, { Component } from \"react\";\r\n\r\n// External Libraries\r\nimport {\r\n  CardTitle,\r\n  CardFooter,\r\n  CardBody,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Components\r\nimport { HeaderMain } from \"./common/headerMain\";\r\nimport { Progress } from \"./common/progress\";\r\nimport { SessionsByDevice } from \"./common/sessionsByDevice\";\r\n\r\n// Main\r\nclass Home extends Component {\r\n  state = {\r\n    practices: 0,\r\n    providers: 0,\r\n    patients: 0,\r\n    openGaps: 0,\r\n    payor: 0,\r\n    enabled: 0\r\n  };\r\n\r\n  async componentDidMount() {\r\n\r\n    // Variables\r\n    var practiceSize = 0;\r\n    var patientSize = 0;\r\n    var providerSize = 0;\r\n    var openGaps = 0;\r\n\r\n    const { REACT_APP_API_PRACTICES } = process.env;\r\n    \r\n    // Get Payor Data\r\n    const { data: payor } = await axios.get('http://api.gapsclosure.com/v1/services/patientlist/BCBSM/2021');\r\n    let enabled = 0;\r\n    \r\n    for (let i = 0; i < payor.length; i++) {\r\n      if (payor[i].is_enabled == true)\r\n        enabled++;\r\n    }\r\n\r\n    // Get Practices\r\n    const { data: practices } = await axios.get(REACT_APP_API_PRACTICES);\r\n    practiceSize = practices.length;\r\n\r\n    \r\n    // Loop Practices and get each individual practice patients\r\n    for (let i = 0; i < practices.length; i++) {\r\n      \r\n      const { data: patients } = await axios.get(REACT_APP_API_PRACTICES + practices[i].id + \"/patients/\");\r\n\r\n      patientSize += patients.length;\r\n      openGaps += practices[i].total_gaps;\r\n\r\n    }\r\n\r\n    // Loop Practices and get Providers\r\n    for (let i = 0; i < practices.length; i++) {\r\n      \r\n      const { data: providers } = await axios.get(REACT_APP_API_PRACTICES + practices[i].id + \"/providers/\");\r\n      providerSize += providers.length;\r\n\r\n      console.log(providerSize);\r\n      \r\n    }\r\n\r\n    this.setState({ practices: practiceSize, providers: providerSize, patients: patientSize, openGaps: openGaps, payor: payor.length, enabled: enabled})\r\n\r\n  }\r\n\r\n  styles = {\r\n    position: \"absolute\",\r\n  };\r\n\r\n  render() {\r\n\r\n    const { practices, providers, patients, openGaps, payor, enabled } = this.state; \r\n    \r\n    return (\r\n      \r\n      <React.Fragment>\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain title=\"Admin Dashboard\" className=\"\" />\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Welcome to the GAPPY website, gappy is designed to provide you with the most relevant information first. Please click on one of the cards below to begin.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"ml-1\"></Row>\r\n          <Row className=\"ml-1 mt-1\"></Row>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col lg={6}>\r\n              {/* START Card Widget */}\r\n              <Link to={\"/members\"} style={{ cursor: \"pointer\", textDecoration: 'none' }}>\r\n                <Card className=\"mb-3\">\r\n                  <CardBody>\r\n                    <CardTitle tag=\"h6\" className=\"mb-4 text-dark\">\r\n                      Member List\r\n                    </CardTitle>\r\n                    <Row>\r\n                      <Col sm={4}>\r\n                        <SessionsByDevice\r\n                          title=\"BCBS-M\"\r\n                          valuePercent={payor}\r\n                          valuePercentColor=\"text-primary\"\r\n                          value=\"Members\"\r\n                          valueColor=\"text-primary\"\r\n                        />\r\n                      </Col>\r\n                      <Col sm={4}>\r\n                        <SessionsByDevice\r\n                          title=\"Gappy\"\r\n                          valuePercent={enabled}\r\n                          valuePercentColor=\"text-success\"\r\n                          value=\"Members\"\r\n                          valueColor=\"text-success\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Progress multi className=\"mb-2\" style={{ height: \"5px\" }}>\r\n                      <Progress bar value=\"25\" />\r\n                      <Progress bar color=\"success\" value=\"30\" />\r\n                      <Progress bar color=\"secondary\" value=\"45\" />\r\n                    </Progress>\r\n                  </CardBody>\r\n                  <CardFooter className=\"small text-dark\">\r\n                    <i className=\"fa fa-fw fa-info-circle mr-2\"></i>\r\n                    Here provided is a list of all current and active members that have a care gap, both open and closed.\r\n                  </CardFooter>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n            <Col lg={6}>\r\n              {/* START Card Widget */}\r\n              <Link to={\"/gaps\"} style={{ cursor: \"pointer\", textDecoration: 'none'  }}>\r\n                <Card className=\"mb-3\">\r\n                  <CardBody>\r\n                    <CardTitle tag=\"h6\" className=\"mb-4 text-dark\">\r\n                      Measures\r\n                    </CardTitle>\r\n                    <Row>\r\n                      <Col sm={4}>\r\n                        <SessionsByDevice\r\n                          title=\"BCBS-M\"\r\n                          valuePercent={patients}\r\n                          valuePercentColor=\"text-primary\"\r\n                          value=\"Open Gaps\"\r\n                          valueColor=\"text-primary\"\r\n                        />\r\n                      </Col>\r\n                      <Col sm={4}>\r\n                        <SessionsByDevice\r\n                          title=\"Gappy\"\r\n                          valuePercent={openGaps}\r\n                          valuePercentColor=\"text-success\"\r\n                          value=\"Open Gaps\"\r\n                          valueColor=\"text-success\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Progress multi className=\"mb-2\" style={{ height: \"5px\" }}>\r\n                      <Progress bar value=\"25\" />\r\n                      <Progress bar color=\"success\" value=\"30\" />\r\n                      <Progress bar color=\"secondary\" value=\"45\" />\r\n                    </Progress>\r\n                  </CardBody>\r\n                  <CardFooter className=\"small text-dark\">\r\n                    <i className=\"fa fa-fw fa-info-circle mr-2\"></i>\r\n                    Gappy provides the most up-to date information regarding the gap closure process, the measures page is where you can find an overview of all measures.\r\n                  </CardFooter>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col lg={6}>\r\n              {/* START Card Widget */}\r\n              <Link to={\"/practices\"} style={{ cursor: \"pointer\", textDecoration: 'none'  }}>\r\n                <Card className=\"mb-3\">\r\n                  <CardBody>\r\n                    <CardTitle tag=\"h6\" className=\"mb-4 text-dark\">\r\n                      Practices\r\n                    </CardTitle>\r\n                    <Row>\r\n                      <Col sm={4}>\r\n                        <SessionsByDevice\r\n                          title=\"BCBS-M\"\r\n                          valuePercent={practices}\r\n                          valuePercentColor=\"text-primary\"\r\n                          value=\"Practices\"\r\n                          valueColor=\"text-primary\"\r\n                        />\r\n                      </Col>\r\n                      <Col sm={4}>\r\n                        <SessionsByDevice\r\n                          title=\"Gappy\"\r\n                          valuePercent={practices}\r\n                          valuePercentColor=\"text-success\"\r\n                          value=\"Practices\"\r\n                          valueColor=\"text-success\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Progress multi className=\"mb-2\" style={{ height: \"5px\" }}>\r\n                      <Progress bar value=\"25\" />\r\n                      <Progress bar color=\"success\" value=\"30\" />\r\n                      <Progress bar color=\"secondary\" value=\"45\" />\r\n                    </Progress>\r\n                  </CardBody>\r\n                  <CardFooter className=\"small text-dark\">\r\n                    <i className=\"fa fa-fw fa-info-circle mr-2\"></i>\r\n                    Here is where you can begin filtering by seeing a list of the current practices available to you.\r\n                  </CardFooter>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n            <Col lg={6}>\r\n              {/* START Card Widget */}\r\n              <Link to={\"/providers\"} style={{ cursor: \"pointer\", textDecoration: 'none'  }}>\r\n                <Card className=\"mb-3\">\r\n                  <CardBody>\r\n                    <CardTitle tag=\"h6\" className=\"mb-4 text-dark\">\r\n                      Providers\r\n                    </CardTitle>\r\n                    <Row>\r\n                      <Col sm={4}>\r\n                        <SessionsByDevice\r\n                          title=\"BCBS-M\"\r\n                          valuePercent={providers}\r\n                          valuePercentColor=\"text-primary\"\r\n                          value=\"Providers\"\r\n                          valueColor=\"text-primary\"\r\n                        />\r\n                      </Col>\r\n                      <Col sm={4}>\r\n                        <SessionsByDevice\r\n                          title=\"Gappy\"\r\n                          valuePercent={providers}\r\n                          valuePercentColor=\"text-success\"\r\n                          value=\"Providers\"\r\n                          valueColor=\"text-success\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Progress multi className=\"mb-2\" style={{ height: \"5px\" }}>\r\n                      <Progress bar value=\"25\" />\r\n                      <Progress bar color=\"success\" value=\"30\" />\r\n                      <Progress bar color=\"secondary\" value=\"45\" />\r\n                    </Progress>\r\n                  </CardBody>\r\n                  <CardFooter className=\"small text-dark\">\r\n                    <i className=\"fa fa-fw fa-info-circle mr-2\"></i>\r\n                    Here is where you can begin filtering by seeing a list of the current providers available to you.\r\n                  </CardFooter>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst NavBar = (props) => {\r\n  const { handleLogout } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-white mb-2\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Gappy\r\n      </Link>\r\n\r\n      <div className=\"navbar-nav ml-auto\">\r\n        <NavLink className=\"nav-item nav-link\" to=\"/home\">\r\n          Dashboard\r\n        </NavLink>\r\n        <NavLink className=\"nav-item nav-link\" to=\"/gaps\">\r\n          Measures\r\n        </NavLink>\r\n        <NavLink className=\"nav-item nav-link\" to=\"/practices\">\r\n          Practices\r\n        </NavLink>\r\n        <NavLink className=\"nav-item nav-link\" to=\"/providers\">\r\n          Providers\r\n        </NavLink>\r\n        <button\r\n          onClick={handleLogout}\r\n          className=\"btn btn-danger btn-sm ml-5\"\r\n          to=\"/home\"\r\n        >\r\n          Sign Out\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nimport { HeaderMain } from \"./common/headerMain\";\r\n\r\nclass Practices extends Component {\r\n  state = {\r\n    practices: [],\r\n    isLoading: true,\r\n    isOpen: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    \r\n    const { data: practices } = await axios.get(process.env.REACT_APP_API_PRACTICES);\r\n\r\n    this.setState({ practices: practices });\r\n\r\n  }\r\n\r\n  handleClosedGaps = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  handleOpenGaps = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  render() {\r\n    const { practices, isOpen } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain title=\"Practices\" className=\"\" />\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Listed below are all available practices within the gappy\r\n                system, you can begin filtering through a selected practice by\r\n                clicking on the view button located on the far left of the\r\n                table. By doing so you will be sent to the details page of the\r\n                respective practice, where you can view the practice, its\r\n                providers and the current gap information.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"\">\r\n            <button\r\n              onClick={this.handleOpenGaps}\r\n              className=\"btn btn-primary m-2\"\r\n            >\r\n              Open\r\n            </button>\r\n            <button\r\n              onClick={this.handleClosedGaps}\r\n              className=\"btn btn-success m-2\"\r\n            >\r\n              Closed\r\n            </button>\r\n          </Row>\r\n          <Row className=\"ml-1 mt-1\"></Row>\r\n        </Container>\r\n        <table\r\n          className=\"table table-striped table-responsive table-borderless\"\r\n          style={{ overflowX: \"auto\", whiteSpace: \"nowrap\" }}\r\n        >\r\n          <thead style={{ borderTop:`${isOpen === true ? (\r\n            \"3px solid blue\"\r\n          ) : (\r\n            \"3px solid green\"\r\n          )}`, borderBottom: `${isOpen === true ? (\r\n            \"3px solid blue\"\r\n          ) : (\r\n            \"3px solid green\"\r\n          )}` }}>\r\n            <tr>\r\n              <th></th>\r\n              <th className=\"font-weight-light\">Practice Name</th>\r\n              <th className=\"font-weight-light\">Members</th>\r\n              <th className=\"font-weight-light\">Providers</th>\r\n              <th className=\"font-weight-light\">Gaps</th>\r\n              <th className=\"font-weight-light\">CBP</th>\r\n              <th className=\"font-weight-light\">SUPD</th>\r\n              <th className=\"font-weight-light\">SPC</th>\r\n              <th className=\"font-weight-light\">CDC-N</th>\r\n              <th className=\"font-weight-light\">90-Day</th>\r\n              <th className=\"font-weight-light\">MAM</th>\r\n              <th className=\"font-weight-light\">COL</th>\r\n              <th className=\"font-weight-light\">PCR</th>\r\n              <th className=\"font-weight-light\">OMW</th>\r\n              <th className=\"font-weight-light\">ART</th>\r\n              <th className=\"font-weight-light\">MRP</th>\r\n              <th className=\"font-weight-light\">BCS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {practices.map((practice) => (\r\n              <tr key={practice.id}>\r\n                <td>\r\n                  <Link\r\n                    className=\"btn btn-primary btn-sm\"\r\n                    to={`/practices/${practice.id}`}\r\n                  >\r\n                    View\r\n                  </Link>\r\n                </td>\r\n                <td>{practice.name}</td>\r\n                <td>{practice.patients}</td>\r\n                <td>{practice.providers}</td>\r\n                <td>{isOpen === true ? (\r\n                  <>{practice.total_gaps}</>\r\n                ) : (\r\n                <>{practice.patients - practice.total_gaps}</>\r\n                )}</td>\r\n                <td>{isOpen === true ? (\r\n                  <>{practice.cbp_gaps}</>\r\n                ) : (\r\n                <>{practice.patients - practice.cbp_gaps}</>\r\n                )}</td>\r\n                <td>{practice.supd_gaps}</td>\r\n                <td>{practice.spc_gaps}</td>\r\n                <td>{practice.cdc_gaps}</td>\r\n                <td>{practice.ninetyday_gaps}</td>\r\n                <td>{practice.mammogram_gaps}</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Practices;\r\n","var json = require('./emrPulls/patients.json'); //(with path)\r\nvar insurance  = require('./bcbs.json');\r\nvar provider = require('./emrPulls/newProviderDB.json');\r\nvar providerClosed = require('./emrPulls/providerClosed.json');\r\nvar practice = require('./emrPulls/practice.json');\r\nvar practiceOpen = require('./emrPulls/practiceOpen.json');\r\nvar bcbsList = require('./bcbsPulls/bcbsList.json');\r\n\r\nexport function getInsurance(path) {\r\n    var data = [];\r\n\r\n    if (path.includes('provider')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n        \r\n        data = getSingleProvider(id);\r\n        return data;\r\n    }\r\n\r\n    else if (path.includes('practice')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n        \r\n        data = getPractice(id);\r\n        return data;\r\n    } \r\n    \r\n    else {\r\n        return insurance;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getBCBSList() {\r\n    return bcbsList;\r\n}\r\n\r\nexport function getBCBSListWPath(path) {\r\n    var data = [];\r\n\r\n    if (path.includes('provider')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n        \r\n        for (var i = 0; i < bcbsList.length; i++) {\r\n            if (bcbsList[i].physicianNPI === id)\r\n                data.push(bcbsList[i])\r\n        }\r\n        \r\n        return data;\r\n    }\r\n\r\n    else if (path.includes('practice')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n        \r\n        for (var i = 0; i < bcbsList.length; i++) {\r\n            if (bcbsList[i].practiceID === id)\r\n                data.push(bcbsList[i])\r\n        }\r\n\r\n        return data;\r\n    } else {\r\n        return bcbsList\r\n    }\r\n}\r\n\r\nexport function getPending(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_verified === false)\r\n            tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n    \r\n}\r\n\r\nexport function getVerified(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_verified === true)\r\n            tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n    \r\n}\r\n\r\nexport function getPractice(id) {\r\n    let data = practice;\r\n     \r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i]._id === id)\r\n            return practice[i];\r\n    }\r\n\r\n    return practice;\r\n}\r\n\r\nexport function getProviders() {\r\n    return provider;\r\n}\r\n\r\nexport function getPatients(array) {\r\n    return array;\r\n}\r\n\r\nexport function getPatientsAll() {\r\n    return json;\r\n}\r\n\r\nexport function getdata(path) {\r\n    let patients = [];\r\n    let tempObj = [];\r\n    let meta = {};\r\n\r\n    if (path.includes('provider')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n\r\n        return getProviderPatients(id)\r\n    }\r\n    else if (path.includes('practice')) {\r\n        var strArray = path.split('/');\r\n        var id = strArray[2];\r\n\r\n        return getPracticePatients(id)\r\n    } \r\n    \r\n    else {\r\n        return json;\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function getProviderPatients(id) {\r\n    let data = json;\r\n    let tempObj = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i].physicianNPI === id) {\r\n            tempObj.push(data[i]);\r\n        }\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function getSingleProvider(id) {\r\n    let data = provider;\r\n\r\n    for (var i = 0; i < provider.length; i++) {\r\n        if (provider[i].physicianNPI === id)\r\n            return provider[i];\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getSingleProviderPerformance(id) {\r\n    let data = providerClosed;\r\n\r\n    for (var i = 0; i < provider.length; i++) {\r\n        if (provider[i].physicianNPI === id)\r\n            return provider[i];\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n//Return All Providers for Respective Practice\r\nexport function getPracticeProviders(id) {\r\n    let data = provider;\r\n    let tempObj = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i].practiceID === id) {\r\n            tempObj.push(data[i]);\r\n        }\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function getPracticePerformance(id) {\r\n    let data = providerClosed;\r\n    let tempObj = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i].practiceID === id) {\r\n            tempObj.push(data[i]);\r\n        }\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function getPracticePatients(id) {\r\n    let data = json;\r\n    let prov = provider;\r\n    let tempObj = [];\r\n\r\n    for (let i = 0; i < prov.length; i++) {\r\n        if (prov[i].practiceID === id) {\r\n            for (let j = 0; j < data.length; j++) {\r\n                if (data[j].physicianNPI === prov[i].physicianNPI)\r\n                    tempObj.push(data[j])\r\n            }\r\n        }\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function closedProviderGaps() {\r\n    return providerClosed;\r\n}\r\n\r\nexport function openPracticeGaps() {\r\n    return practiceOpen;\r\n}\r\n\r\nexport function filterPatientsCompleted(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_complete === true)\r\n            tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function filterPatientsControlled(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === true && data[i].is_verified == true)\r\n            tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function filterPatientsUnControlled(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if (data[i].is_verified == true)\r\n                tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function filterPatientsCompliant(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if (data[i].is_compliant === true && data[i].is_verified == true)\r\n                tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function filterPatientsUnCompliant(array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled == false || data[i].is_controlled == null)\r\n            if (data[i].is_compliant == false || data[i].is_compliant == null && data[i].is_verified == true)\r\n                tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function noReading (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === null && data[i].is_compliant == true && data[i].is_verified == true)\r\n                tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function noReadingNotScheduled (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === null && data[i].is_compliant == true && data[i].is_verified == true)\r\n                if ( data[i].next_visit == null)\r\n                    tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function noReadingScheduled (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === null && data[i].is_compliant == true && data[i].is_verified == true )\r\n                if ( data[i].next_visit != null )\r\n                    tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function reading (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    console.log('ran');\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === true && data[i].is_compliant == true && data[i].is_verified == true)\r\n                tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function readingNotScheduled (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === true && data[i].is_compliant == true && data[i].is_verified == true)\r\n                if ( data[i].next_visit == null)\r\n                    tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}\r\n\r\nexport function readingScheduled (array) {\r\n    let data = array;\r\n    var tempObj = [];\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i].is_controlled === false || data[i].is_controlled === null)\r\n            if ( data[i].is_current_year === true && data[i].is_compliant == true && data[i].is_verified == true) \r\n                if ( data[i].next_visit != null)\r\n                    tempObj.push(data[i])\r\n    }\r\n\r\n    return tempObj;\r\n}","import React from \"react\";\r\n\r\nimport { Card, Badge, CardBody } from \"reactstrap\";\r\n\r\nconst badgesColors = [\"info\", \"primary\", \"secondary\"];\r\n\r\nconst PracticeProfileCard = (props) => {\r\n  const { closed, name, manager, location, providerCnt, memberCnt, gaps, risk } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* START Card */}\r\n      <Card className=\"mb-3\">\r\n        <CardBody>\r\n          <React.Fragment>\r\n            <div className=\"d-flex justify-content-center my-3\">\r\n              <h3>{name}</h3>\r\n            </div>\r\n            <div className=\"mb-4 text-center\">\r\n              <a className=\"h6 text-decoration-none\" href=\"#\">\r\n                Manager: {manager}\r\n              </a>\r\n              <div className=\"text-center\">\r\n                <i className=\"fa fa-map-marker mr-1\"></i>\r\n                {location}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Providers: {providerCnt}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Closed Gaps: {closed}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Open Gaps: {gaps}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Members: {memberCnt}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Risk Level: {risk}\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n          <div className=\"text-center mb-4\">\r\n            <div className=\"mb-2\">\r\n              <span className=\"small\">Measures</span>\r\n            </div>\r\n            <Badge pill color=\"danger\" className=\"mr-1\">\r\n              CBP\r\n            </Badge>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n      {/* END Card */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { PracticeProfileCard };\r\n","import React, { Component } from 'react';\r\nimport { CardTitle } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MeasureBody extends Component {\r\n  state = {\r\n    isOpen: true\r\n  };\r\n\r\n  onToggle = () => {\r\n    let bool = this.state.isOpen;\r\n\r\n    if(bool == true)\r\n      bool = false;\r\n    else\r\n      bool = true;\r\n\r\n    this.setState({isOpen: bool});\r\n  }\r\n\r\n  render() {\r\n\r\n    const {title, badgeTitle, badgeColor, controlled, value, valueTitle, link, toggle} = this.props;\r\n \r\n    return (\r\n      <div>\r\n        <Link underline=\"none\" to={link} style={{ textDecoration: 'none' }}>\r\n        <div className=\"d-flex\">\r\n          <CardTitle tag=\"h6\" className=\" text-dark\">{title}</CardTitle>\r\n          {/* <Badge\r\n            pill\r\n            color={`${badgeColor}`}\r\n            className=\"align-self-start ml-auto\"\r\n          >\r\n            {badgeTitle}\r\n          </Badge> */}\r\n          <span className=\"badge badge-pill align-self-start ml-auto text-white\" style={{\"background\": badgeColor}}>{badgeTitle}</span>\r\n        </div>\r\n        <div className=\"text-center my-4\">\r\n        <h2 className=\"text-success\">{`${this.state.isOpen == true ? (value) : (controlled)}`}</h2>\r\n          <span className=\"text-primary\">{valueTitle}</span>\r\n        </div>\r\n        </Link>\r\n        <div className=\"d-flex\">\r\n          <span onClick={() => this.onToggle()}><i className={`${this.state.isOpen == true ? (\r\n              \"fa text-dark fa-toggle-off\"\r\n            ) : (\r\n              \"fa text-dark fa-toggle-on\"\r\n            )}`}></i></span>\r\n          <span className={`${this.state.isOpen == true ? (\r\n              \"ml-auto text-danger\"\r\n            ) : (\r\n              \"ml-auto text-success\"\r\n            )}`}>\r\n            {`${this.state.isOpen == true ? (\r\n              \"Open\"\r\n            ) : (\r\n              \"Closed\"\r\n            )}`}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default MeasureBody;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getPracticeProviders,\r\n  getPracticePerformance,\r\n  getPractice,\r\n} from \"./services/services\";\r\nimport { PracticeProfileCard } from \"./common/practiceProfileCard\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { HeaderMain } from \"./common/headerMain\";\r\nimport { Card, CardDeck, CardBody } from \"reactstrap\";\r\nimport MeasureBody from \"./common/measureBody\";\r\nimport axios from 'axios';\r\n\r\nclass Practice extends Component {\r\n  state = {\r\n    providers: [],\r\n    practice: [],\r\n    cbp: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n\r\n    let id = this.props.match.params.id;\r\n\r\n    const { data: practice } = await axios.get(process.env.REACT_APP_API_PRACTICES + id);\r\n    const { data: providers } = await axios.get(process.env.REACT_APP_API_PRACTICES + id + \"/providers\");\r\n    \r\n    this.setState({ practice: practice, providers: providers });\r\n  }\r\n\r\n  handleCurrent = () => {\r\n    const cbp = this.state.practice.uncontrolled;\r\n    const providers = getPracticeProviders(this.props.match.params.id);\r\n    this.setState({ cbp, providers });\r\n  };\r\n\r\n  handlePerformance = () => {\r\n    const cbp = this.state.practice.controlled;\r\n    const providers = getPracticePerformance(this.props.match.params.id);\r\n    this.setState({ cbp, providers });\r\n  };\r\n\r\n  render() {\r\n    const { providers } = this.state;\r\n    var practice = this.state.practice;\r\n\r\n    return (\r\n      <div>\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain title={this.state.practice.name} className=\"\" />\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Below is a detailed look into the information of the selected\r\n                practice. On the left profile card, is listed the practice\r\n                manager, provider count, member count and total open gaps. Under\r\n                the measures heading, are listed only the measures that apply to\r\n                the selected practice, clicking on the measure card will take\r\n                you to the associated report. Under the providers heading you\r\n                will find the table of providers associated with the selected\r\n                practice, clicking the view button on a provider will bring you\r\n                to the details page of the provider.\r\n              </p>\r\n              <p className=\"text-left text-muted\">Legend</p>\r\n              <i className=\"fa fa-circle text-primary\">\r\n                <span className=\"ml-2\">\r\n                  Blue represents what BCBS-M believes are open gaps\r\n                </span>\r\n              </i>\r\n              <i className=\"fa fa-circle text-success ml-5\">\r\n                <span className=\"ml-2\">\r\n                  Green represents what gappy's insights are on the current open\r\n                  gaps\r\n                </span>\r\n              </i>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <div>\r\n          <div className=\"row ml-1\">\r\n            <PracticeProfileCard\r\n              name={practice.name}\r\n              manager={practice.manager}\r\n              location={practice.address}\r\n              providerCnt={practice.providers}\r\n              memberCnt={practice.patients}\r\n              closed={practice.patients - practice.total_gaps}\r\n              gaps={practice.total_gaps}\r\n              risk=\"1\"\r\n            />\r\n            <div className=\"col ml-5\">\r\n              <h1 className=\"font-weight-light text-muted\">Measures</h1>\r\n              <CardDeck className=\"\" style={{ width: \"50%\" }}>\r\n                <Card className=\"mb-3\">\r\n                  <CardBody>\r\n                      <MeasureBody\r\n                        title=\"Blood Pressure\"\r\n                        badgeTitle=\"CBP\"\r\n                        badgeColor=\"danger\"\r\n                        value={practice.cbp_gaps}\r\n                        controlled={practice.patients - practice.cbp_gaps}\r\n                        valueTitle={practice.patients}\r\n                        link={`/cbp/${this.props.match.params.id}/practice`}\r\n                      />\r\n                  </CardBody>\r\n                </Card>\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"text-muted\">Providers</h3>\r\n            <table\r\n              className=\"table table-striped table-responsive\"\r\n              style={{ overflowX: \"auto\", whiteSpace: \"nowrap\" }}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th className=\"font-weight-light\">Full Name</th>\r\n                  <th className=\"font-weight-light\">Members</th>\r\n                  <th className=\"font-weight-light\">Open Gaps</th>\r\n                  <th className=\"font-weight-light\">CBP</th>\r\n                  <th className=\"font-weight-light\">SUPD</th>\r\n                  <th className=\"font-weight-light\">SPC</th>\r\n                  <th className=\"font-weight-light\">CDC-N</th>\r\n                  <th className=\"font-weight-light\">90-Day</th>\r\n                  <th className=\"font-weight-light\">MAM</th>\r\n                  <th className=\"font-weight-light\">COL</th>\r\n                  <th className=\"font-weight-light\">PCR</th>\r\n                  <th className=\"font-weight-light\">OMW</th>\r\n                  <th className=\"font-weight-light\">ART</th>\r\n                  <th className=\"font-weight-light\">MRP</th>\r\n                  <th className=\"font-weight-light\">BCS</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {providers.map((provider) => (\r\n                  <tr key={provider._id}>\r\n                    <td>\r\n                      <Link\r\n                        className=\"btn btn-primary btn-sm\"\r\n                        to={`/providers/${provider.id}`}\r\n                      >\r\n                        View\r\n                      </Link>\r\n                    </td>\r\n                <td>{provider.name}</td>\r\n                    <td>{provider.patients}</td>\r\n                    <td>{provider.total_gaps}</td>\r\n                    <td>{provider.cbp_gaps}</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                    <td>0</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Practice;\r\n","import React, { Component } from \"react\";\r\n\r\nimport MeasureBody from \"./common/measureBody\";\r\nimport { CardDeck, CardBody, Card, Row, Col, Container } from \"reactstrap\";\r\nimport { HeaderMain } from \"./common/headerMain\";\r\nimport axios from \"axios\";\r\n\r\nclass Gaps extends Component {\r\n  state = {\r\n    patients: [],\r\n    openGaps: 0,\r\n    closedGaps: 0,\r\n    toggle: true,\r\n    cards: [\r\n      { id: 1, img: \"img1\", header: \"CBP\", bcbs: \"466\", gappy: \"355\" },\r\n      { id: 1, header: \"SUPD\", bcbs: \"0\", gappy: \"0\" },\r\n      { id: 1, header: \"SPC\", bcbs: \"0\", gappy: \"0\" },\r\n      { id: 1, header: \"CDC-N\", bcbs: \"0\", gappy: \"0\" },\r\n      { id: 1, header: \"90-Day\", bcbs: \"0\", gappy: \"0\" },\r\n      { id: 1, header: \"Mammogram\", bcbs: \"0\", gappy: \"0\" },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let patientSize = 0;\r\n    let openGaps = 0;\r\n    let closedGaps = 0;\r\n\r\n    const { data: practices } = await axios.get(\r\n      process.env.REACT_APP_API_PRACTICES\r\n    );\r\n\r\n    // Loop Practices and get each individual practice patients\r\n    for (let i = 0; i < practices.length; i++) {\r\n      const { data: patients } = await axios.get(\r\n        process.env.REACT_APP_API_PRACTICES +\r\n          practices[i].id +\r\n          \"/patients/\"\r\n      );\r\n\r\n      patientSize += patients.length;\r\n      openGaps += practices[i].total_gaps;\r\n      closedGaps = patientSize - openGaps;\r\n    }\r\n\r\n    this.setState({\r\n      patients: patientSize,\r\n      openGaps: openGaps,\r\n      closedGaps: closedGaps,\r\n    });\r\n  }\r\n\r\n  handleCurrent = () => {\r\n    this.setState({ toggle: true });\r\n  };\r\n\r\n  handlePreformance = () => {\r\n    this.setState({ toggle: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* START Header */}\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain title=\"Measures\" className=\"\" />\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Below you will see all measures and the corresponding gaps.\r\n                Please note that you can toggle between open gaps and closed\r\n                gaps by slecting open or closed buttons. You can view a detailed\r\n                report on each gap by clicking on the appropriate card.\r\n              </p>\r\n              <p className=\"text-left text-muted\">Legend</p>\r\n              <i className=\"fa fa-circle text-primary\">\r\n                <span className=\"ml-2\">\r\n                  Blue represents what BCBS-M believes are open gaps.\r\n                </span>\r\n              </i>\r\n              <i className=\"fa fa-circle text-success ml-5\">\r\n                <span className=\"ml-2\">\r\n                  Green represents what gappy's are insights on the current open\r\n                  gaps.\r\n                </span>\r\n              </i>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-2\">\r\n            \r\n            <Col>\r\n              <button\r\n                onClick={this.handleCurrent}\r\n                className=\"btn btn-primary m-2\"\r\n              >\r\n                Open\r\n              </button>\r\n            </Col>\r\n            <Col>\r\n              <button\r\n                onClick={this.handlePreformance}\r\n                className=\"btn btn-success m-2\"\r\n              >\r\n                Closed\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </Container>x\r\n\r\n        {/* START Gaps */}\r\n        <CardDeck className=\"mt-5\">\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Blood Pressure\"\r\n                badgeTitle=\"CBP\"\r\n                badgeColor=\"#e74c3c\"\r\n                value={`${\r\n                  this.state.toggle === true\r\n                    ? `${this.state.openGaps}`\r\n                    : `${this.state.closedGaps}`\r\n                }`}\r\n                controlled={this.state.closedGaps}\r\n                valueTitle={this.state.patients}\r\n                toggle={this.state.toggle}\r\n                link={\"/cbp\"}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Statin Diabetes\"\r\n                badgeTitle=\"SUPD\"\r\n                badgeColor=\"#3498db\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-danger\"\r\n                footerValue=\"Open\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Statin Cardiovasular\"\r\n                badgeTitle=\"SPC\"\r\n                badgeColor=\"#1abc9c\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-success\"\r\n                footerValue=\"Closed\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Diabetes Care\"\r\n                badgeTitle=\"CDC-N\"\r\n                badgeColor=\"#0652DD\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-danger\"\r\n                footerValue=\"Open\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n        </CardDeck>\r\n        <CardDeck className=\"mt-1\">\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"90-Day Meds\"\r\n                badgeTitle=\"90-Day\"\r\n                badgeColor=\"#34495e\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-danger\"\r\n                footerValue=\"Open\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Mammogram\"\r\n                badgeTitle=\"MAM\"\r\n                badgeColor=\"#9b59b6\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-danger\"\r\n                footerValue=\"Open\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Colorectal Cancer\"\r\n                badgeTitle=\"COL\"\r\n                badgeColor=\"#e67e22\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-success\"\r\n                footerValue=\"Closed\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Readmission Prevention\"\r\n                badgeTitle=\"PCR\"\r\n                badgeColor=\"#95a5a6\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-danger\"\r\n                footerValue=\"Open\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n        </CardDeck>\r\n\r\n        <CardDeck className=\"mt-1 mb-5\">\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Osteoporosis\"\r\n                badgeTitle=\"OMW\"\r\n                badgeColor=\"#9980FA\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-danger\"\r\n                footerValue=\"Open\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Rheumatoral\"\r\n                badgeTitle=\"ART\"\r\n                badgeColor=\"#e67e22\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-danger\"\r\n                footerValue=\"Open\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Post Discharge\"\r\n                badgeTitle=\"MRP\"\r\n                badgeColor=\"#f1c40f\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-success\"\r\n                footerValue=\"Closed\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n          {/* START Card Widget */}\r\n          <Card className=\"mb-3\">\r\n            <CardBody>\r\n              <MeasureBody\r\n                title=\"Breast Cancer\"\r\n                badgeTitle=\"BCS\"\r\n                badgeColor=\"#FDA7DF\"\r\n                value=\"0\"\r\n                valueTitle=\"0\"\r\n                footerTitle=\"TOGGLE\"\r\n                footerTitleClassName=\"text-danger\"\r\n                footerValue=\"Open\"\r\n                footerIcon=\"\"\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          {/* START Card Widget */}\r\n        </CardDeck>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gaps;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( <h1> Page Not Found </h1> );\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nclass Test extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n        <React.Fragment>\r\n            <Row>\r\n                <Col className=\"bg-primary p-5\"></Col>\r\n                <Col className=\"bg-warning p-5\"></Col>\r\n                <Col className=\"bg-danger p-5\"></Col>\r\n                <Col className=\"bg-success p-5\"></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col className=\"bg-success p-5\"></Col>\r\n                <Col className=\"bg-success p-5\"></Col>\r\n                <Col className=\"bg-success p-5\"></Col>\r\n                <Col className=\"bg-success p-5\"></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col className=\"bg-primary p-5\"></Col>\r\n                <Col className=\"bg-warning p-5\"></Col>\r\n                <Col className=\"bg-danger p-5\"></Col>\r\n                <Col className=\"bg-success p-5\"></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col className=\"bg-danger p-5\"></Col>\r\n                <Col className=\"bg-danger p-5\"></Col>\r\n                <Col className=\"bg-danger p-5\"></Col>\r\n                <Col className=\"bg-danger p-5\"></Col>\r\n            </Row>\r\n        </React.Fragment> );\r\n    }\r\n}\r\n \r\nexport default Test;","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items)\r\n        .slice(startIndex)\r\n        .take(pageSize)\r\n        .value();\r\n\r\n}","import React from 'react';\r\nimport _, { range } from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n    const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    if (pagesCount == 1) return null;\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    return <nav>\r\n        <ul className=\"pagination\">\r\n            { pages.map(page => (\r\n                <li key={ page } className={ page === currentPage ? 'page-item active' : 'page-item'}><a onClick={() => onPageChange(page)} className=\"page-link\">{ page }</a></li>\r\n            ))}\r\n        </ul>\r\n    </nav>;\r\n}\r\n \r\nexport default Pagination;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { HeaderMain } from \"./common/headerMain\";\r\nimport axios from 'axios';\r\n\r\nclass Providers extends Component {\r\n  state = {\r\n    providers: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isLoading: true,\r\n    isOpen: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n\r\n    var providers = [];\r\n\r\n    const { data: practices } = await axios.get(process.env.REACT_APP_API_PRACTICES);\r\n\r\n    for (let i = 0; i < practices.length; i++) {\r\n\r\n      const { data: list } = await axios.get(process.env.REACT_APP_API_PRACTICES + practices[i].id + \"/providers/\");\r\n      providers = [...providers, ...list];\r\n\r\n    }\r\n\r\n    this.setState({ providers: providers });\r\n\r\n  }\r\n\r\n  handleClosedGaps = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  handleOpenGaps = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.providers;\r\n    const { isOpen, pageSize, currentPage, providers: allProviders } = this.state;\r\n\r\n    const providers = paginate(allProviders, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain title=\"Providers\" className=\"\" />\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Here is a list of the respective providers in the gappy system,\r\n                you will find the respective providers practice they belong to,\r\n                NPI and current gap information below. By clicking view on the\r\n                far left of a respective provider will bring you to a more\r\n                detailed page of the provider.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"\">\r\n            <button\r\n              onClick={this.handleOpenGaps}\r\n              className=\"btn btn-primary m-2\"\r\n            >\r\n              Open\r\n            </button>\r\n            <button\r\n              onClick={this.handleClosedGaps}\r\n              className=\"btn btn-success m-2\"\r\n            >\r\n              Closed\r\n            </button>\r\n          </Row>\r\n          <Row className=\"ml-1 mt-1\"></Row>\r\n        </Container>\r\n        <table\r\n          className=\"table table-striped table-borderless table-responsive\" style={{ overflowX: \"auto\", whiteSpace: \"nowrap\"}}\r\n        >\r\n          <thead style={{ borderTop:`${isOpen === true ? (\r\n            \"4px solid blue\"\r\n          ) : (\r\n            \"4px solid green\"\r\n          )}`, borderBottom: `${isOpen === true ? (\r\n            \"4px solid blue\"\r\n          ) : (\r\n            \"4px solid green\"\r\n          )}` }}>\r\n            <tr className=\"text-muted\">\r\n              <th></th>\r\n              <th className=\"font-weight-light\">Full Name</th>\r\n              <th className=\"font-weight-light\">NPI</th>\r\n              <th className=\"font-weight-light\">Practice</th>\r\n              <th className=\"font-weight-light\">Members</th>\r\n              <th className=\"font-weight-light\">Gaps</th>\r\n              <th className=\"font-weight-light\">CBP</th>\r\n              <th className=\"font-weight-light\">SUPD</th>\r\n              <th className=\"font-weight-light\">SPC</th>\r\n              <th className=\"font-weight-light\">CDC-N</th>\r\n              <th className=\"font-weight-light\">90-Day</th>\r\n              <th className=\"font-weight-light\">MAM</th>\r\n              <th className=\"font-weight-light\">COL</th>\r\n              <th className=\"font-weight-light\">PCR</th>\r\n              <th className=\"font-weight-light\">OMW</th>\r\n              <th className=\"font-weight-light\">ART</th>\r\n              <th className=\"font-weight-light\">MRP</th>\r\n              <th className=\"font-weight-light\">BCS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {providers.map((provider) => (\r\n              <tr key={provider.id}>\r\n                <td>\r\n                  <Link\r\n                    className=\"btn btn-primary btn-sm\"\r\n                    to={`/providers/${provider.id}`}\r\n                  >\r\n                    View\r\n                  </Link>\r\n                </td>\r\n                <td>{provider.name}</td>\r\n                <td>{provider.npi}</td>\r\n                <td>...</td>\r\n                <td>{provider.patients}</td>\r\n                <td>{isOpen === true ? (\r\n                  <>{provider.total_gaps}</>\r\n                ) : (\r\n                <>{provider.patients - provider.total_gaps}</>\r\n                )}</td>\r\n                <td>{isOpen === true ? (\r\n                  <>{provider.cbp_gaps}</>\r\n                ) : (\r\n                <>{provider.patients - provider.cbp_gaps}</>\r\n                )}</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n                <td>0</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemsCount={count}\r\n          pageSize={pageSize}\r\n          onPageChange={this.handlePageChange}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Providers;\r\n","import React from \"react\";\r\n\r\nimport { Card, Badge, CardBody } from \"reactstrap\";\r\n\r\nconst ProviderProfileCard = (props) => {\r\n  const { practice, address, NPI, memberCnt, gaps, open, risk } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* START Card */}\r\n      <Card className=\"mb-3\">\r\n        <CardBody>\r\n          <React.Fragment>\r\n            <div className=\"d-flex justify-content-center my-3\">\r\n              <h3>{practice}</h3>\r\n            </div>\r\n            <div className=\"mb-4 text-center\">\r\n              <a className=\"h6 text-decoration-none\" href=\"#\">\r\n                Manager: {NPI}\r\n              </a>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                {address}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Open Gaps: {gaps}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Closed Gaps: {open}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Members: {memberCnt}\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <i className=\"mr-1\"></i>\r\n                Risk Level: {risk}\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n          <div className=\"text-center mb-4\">\r\n            <div className=\"mb-2\">\r\n              <span className=\"small\">Measures</span>\r\n            </div>\r\n            <Badge pill color=\"danger\" className=\"mr-1\">\r\n              CBP\r\n            </Badge>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n      {/* END Card */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { ProviderProfileCard };\r\n","import React, { Component } from \"react\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { HeaderMain } from \"./common/headerMain\";\r\nimport { Card, CardDeck, CardBody } from \"reactstrap\";\r\nimport MeasureBody from \"./common/measureBody\";\r\nimport { ProviderProfileCard } from \"./common/providerProfileCard\";\r\nimport axios from 'axios';\r\n\r\nclass Provider extends Component {\r\n  state = {\r\n    practice: {},\r\n    provider: {},\r\n    patients: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n  };\r\n\r\n  async componentDidMount() {\r\n\r\n    let provider = {};\r\n    let patientFiltered = [];\r\n\r\n    let identifier = this.props.match.params.id;\r\n\r\n    const { data: practice } = await axios.get(process.env.REACT_APP_API_PRACTICES);\r\n\r\n    for (let i = 0; i < practice.length; i++) {\r\n      const { data: providers } = await axios.get(process.env.REACT_APP_API_PRACTICES + practice[i].id + \"/providers\");\r\n\r\n      for (let j = 0; j < providers.length; j++) {\r\n        if (providers[j].id == identifier) {\r\n          provider = providers[j];\r\n        \r\n          const { data: patients } = await axios.get(process.env.REACT_APP_API_PRACTICES + practice[i].id + \"/patients\");\r\n          for (let k = 0; k < patients.length; k++) {\r\n            \r\n            if ( patients[k].provider.id == identifier )\r\n              patientFiltered.push(patients[k]);\r\n          }\r\n\r\n          this.setState({ practice: practice[i], provider: provider, patients: patientFiltered });\r\n\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleCurrent = () => {\r\n    const cbp = this.state.provider.uncontrolled;\r\n    this.setState({ cbp });\r\n  };\r\n\r\n  handlePerformance = () => {\r\n    const cbp = this.state.provider.controlled;\r\n    this.setState({ cbp });\r\n  };\r\n\r\n  render() {\r\n    const { provider } = this.state;\r\n\r\n    const { length: count } = this.state.patients;\r\n    const { practice, pageSize, currentPage, patients: allPatients } = this.state;\r\n\r\n    const patients = paginate(allPatients, currentPage, pageSize);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain title={provider.name} className=\"\" />\r\n              <h4 className=\"font-weight-light\">{practice.name}</h4>\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Below is a detailed look into the information of the selected\r\n                provider. On the left profile card, is listed the provider\r\n                NPI, member count, and total open gaps. Under\r\n                the measures heading, are listed only the measures that apply to\r\n                the selected provider, clicking on the measure card will take\r\n                you to the associated report. Under the members heading you\r\n                will find the table of members associated with the selected\r\n                provider.\r\n              </p>\r\n              <p className=\"text-left text-muted\">Legend</p>\r\n              <i className=\"fa fa-circle text-primary\">\r\n                <span className=\"ml-2\">\r\n                  Blue represents what BCBS-M believes are open gaps.\r\n                </span>\r\n              </i>\r\n              <i className=\"fa fa-circle text-success ml-5\">\r\n                <span className=\"ml-2\">\r\n                  Green represents what gappy's are insights on the current open\r\n                  gaps.\r\n                </span>\r\n              </i>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <div>\r\n          <div className=\"row ml-1\">\r\n            <ProviderProfileCard\r\n              practice={practice.name}\r\n              NPI={practice.manager}\r\n              address={practice.address}\r\n              memberCnt={provider.patients}\r\n              gaps={provider.total_gaps}\r\n              open={provider.patients - provider.total_gaps}\r\n              risk=\"1\"\r\n            />\r\n            <div className=\"ml-5 col-sm\">\r\n              <h1 className=\"font-weight-light text-muted\">Measures</h1>\r\n              <CardDeck className=\"\" style={{ width: \"50%\" }}>\r\n                <Card className=\"mb-3\">\r\n                  <CardBody>\r\n                    <MeasureBody\r\n                      title=\"Blood Pressure\"\r\n                      badgeTitle=\"CBP\"\r\n                      badgeColor=\"danger\"\r\n                      value={provider.total_gaps}\r\n                      controlled={provider.patients - provider.cbp_gaps}\r\n                      valueTitle={provider.patients}\r\n                      link={`/cbp/${this.props.match.params.id}/provider`}\r\n                    />\r\n                  </CardBody>\r\n                </Card>\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"text-muted\">Members</h3>\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"font-weight-light\">First Name</th>\r\n                  <th className=\"font-weight-light\">Last Name</th>\r\n                  <th className=\"font-weight-light\">Address</th>\r\n                  <th className=\"font-weight-light\">DOB</th>\r\n                  <th className=\"font-weight-light\">Last Visit</th>\r\n                  <th className=\"font-weight-light\">Next Visit</th>\r\n                  <th className=\"font-weight-light\">Gap</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {patients.map((patient) => (\r\n                  <tr>\r\n                    <td>{patient.first_name}</td>\r\n                    <td>{patient.last_name}</td>\r\n                    <td>{patient.address}</td>\r\n                    <td>{patient.dob}</td>\r\n                    <td>{patient.lastVisit}</td>\r\n                    <td>{patient.nextVisit}</td>\r\n                    <td className=\"text-danger\">CBP</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Provider;\r\n","import React from 'react';\r\n\r\nconst GlobalFilter = ({ filter, setFilter }) => {\r\n    return ( \r\n        <span>\r\n            Search:{' '}\r\n            <input value={filter || ''} onChange={(e) => setFilter(e.target.value)} />\r\n        </span>\r\n     );\r\n}\r\n \r\nexport default GlobalFilter;","import React, { Component } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport GlobalFilter from \"./common/globalFilter\";\r\n\r\nconst ReactTable = (props) => {\r\n  const { columns, data, isLoading } = props;\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const { globalFilter, pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <div>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <table className=\"table mt-2 table-striped\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th className=\"font-weight-light\" {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted ? (\r\n                      column.isSortedDesc ? (\r\n                        <i className=\"fa fa-sort-desc\" />\r\n                      ) : (\r\n                        <i className=\"fa fa-sort-asc\" />\r\n                      )\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <span className=\"m-5\">\r\n        Page{\" \"}\r\n        <strong>\r\n          {pageIndex + 1} of {pageOptions.length}\r\n        </strong>{\" \"}\r\n      </span>\r\n      <span className=\"m-2\">\r\n        Go to page:{\"   \"}\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={pageIndex + 1}\r\n          onChange={e => {\r\n            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\r\n            gotoPage(pageNumber);\r\n          }}\r\n          style={{ width: \"50px\" }}\r\n        ></input>\r\n      </span>\r\n      {/* <select value={pageSize} onChange={e => setPageSize(Number(e.target.value))}>\r\n        {\r\n          [10, 15, 25].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))\r\n        }\r\n      </select> */}\r\n      <button\r\n        onClick={() => gotoPage(0)}\r\n        disabled={!canPreviousPage}\r\n        className=\"btn btn-primary m-2\"\r\n      >\r\n        {\"<<\"}\r\n      </button>\r\n      <button\r\n        onClick={() => previousPage()}\r\n        disabled={!canPreviousPage}\r\n        className=\"btn btn-primary m-2\"\r\n      >\r\n        Previous\r\n      </button>\r\n      <button\r\n        onClick={() => nextPage()}\r\n        disabled={!canNextPage}\r\n        className=\"btn btn-primary m-2\"\r\n      >\r\n        Next\r\n      </button>\r\n      <button\r\n        onClick={() => gotoPage(pageCount - 1)}\r\n        disabled={!canNextPage}\r\n        className=\"btn btn-primary m-2\"\r\n      >\r\n        {\">>\"}\r\n      </button>\r\n      {isLoading ? (\r\n        <div class=\"center m-5\">\r\n          <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactTable;\r\n","import { format } from \"date-fns\";\r\n\r\nexport const COLUMNS = [\r\n  {\r\n    Header: \"First Name\",\r\n    accessor: \"first_name\",\r\n  },\r\n  {\r\n    Header: \"Last Name\",\r\n    accessor: \"last_name\",\r\n  },\r\n  {\r\n    Header: \"Provider\",\r\n    accessor: \"provider\",\r\n  },\r\n  {\r\n    Header: \"DOB\",\r\n    accessor: \"dob\",\r\n  },\r\n  {\r\n    Header: \"Gap\",\r\n    accessor: \"CBP\",\r\n  },\r\n  {\r\n    Header: \"Sys\",\r\n    accessor: \"systolic\",\r\n  },\r\n  {\r\n    Header: \"Dia\",\r\n    accessor: \"diastolic\",\r\n  },\r\n  {\r\n    Header: \"Date Taken\",\r\n    accessor: \"date\",\r\n  },\r\n  {\r\n    Header: \"Last Visit\",\r\n    accessor: \"last_visit\",\r\n  },\r\n  {\r\n    Header: \"Next Visit\",\r\n    accessor: \"next_visit\",\r\n  },\r\n  {\r\n    Header: \"Status\",\r\n    accessor: \"status\",\r\n  },\r\n  {\r\n    Header: \"Description\",\r\n    accessor: \"null\",\r\n  },\r\n];\r\n","export const PayorCOLUMNS = [\r\n    {\r\n        Header: \"Provider\",\r\n        accessor: \"physicianname\",\r\n    },\r\n    {\r\n        Header: \"MemberID\",\r\n        accessor: \"memberid\",\r\n    },\r\n    {\r\n      Header: \"Full Name\",\r\n      accessor: \"patientname\",\r\n    },\r\n    {\r\n        Header: \"DOB\",\r\n        accessor: \"birthdate\",\r\n    },\r\n    {\r\n      Header: \"Address\",\r\n      accessor: \"address\",\r\n    },\r\n    {\r\n      Header: \"Phone\",\r\n      accessor: \"patinetphone\",\r\n    },\r\n    {\r\n      Header: \"Gap\",\r\n      accessor: \"opengaps\",\r\n    }\r\n  ];\r\n  ","import React, { Component } from \"react\";\r\nimport {\r\n  filterPatientsControlled,\r\n  filterPatientsUnControlled,\r\n  filterPatientsUnCompliant,\r\n  filterPatientsCompliant,\r\n  noReading,\r\n  reading,\r\n  readingNotScheduled,\r\n  readingScheduled,\r\n  noReadingNotScheduled,\r\n  noReadingScheduled,\r\n  filterPatientsCompleted,\r\n  getVerified,\r\n  getPending,\r\n} from \"./services/services\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"../cbp.css\";\r\nimport ReactTable from \"./reactTable\";\r\nimport { COLUMNS } from \"../utils/columns\";\r\nimport { PayorCOLUMNS } from \"../utils/payorColumns\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { HeaderMain } from \"./common/headerMain\";\r\nimport axios from 'axios';\r\n\r\nclass cbpTest extends Component {\r\n  state = {\r\n    payor: [],\r\n    unverified: [],\r\n    data: [],\r\n    insurance: {},\r\n    patients: [],\r\n    isLoading: true,\r\n    loadingStatus: \"Getting CBP Data...\",\r\n    visible: false,\r\n    bcbsVisible: false,\r\n    reportHeading: \"Loading...\",\r\n    heading: \"Heading\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n\r\n    var path = this.props.location.pathname;\r\n    var patients = [];\r\n    var cbpData = [];\r\n\r\n    if (path.includes(\"provider\")) {\r\n      var strArray = path.split(\"/\");\r\n      var id = strArray[2];\r\n\r\n    } else if (path.includes(\"practice\")) {\r\n      var strArray = path.split(\"/\");\r\n      var id = strArray[2];\r\n\r\n      const { data: heading } = await axios.get(\r\n        process.env.REACT_APP_API_PRACTICES + id\r\n      );\r\n\r\n      this.setState({ reportHeading: heading.name });\r\n\r\n      const { data: data } = await axios.get(\r\n        process.env.REACT_APP_API_PRACTICES + id + \"/measures/cbp\"\r\n      );\r\n\r\n      cbpData = data;\r\n      this.setState({ loadingStatus: \"Getting Patient Data\" });\r\n\r\n      const { data: patientData } = await axios.get(\r\n        process.env.REACT_APP_API_PRACTICES + id + \"/patients\"\r\n      );\r\n\r\n      patients = patientData;\r\n    } else {\r\n      this.setState({ reportHeading: \"BCSB-M\" });\r\n\r\n      const { data: payor } = await axios.get('http://api.gapsclosure.com/v1/services/patientlist/BCBSM/2021');\r\n\r\n      this.setState({ payor: payor })\r\n\r\n      // Get Practices\r\n      const { data: practices } = await axios.get(\r\n        process.env.REACT_APP_API_PRACTICES\r\n      );\r\n\r\n      // Loop Practices and get each individual practice patients\r\n      for (let i = 0; i < practices.length; i++) {\r\n        const { data: data } = await axios.get(\r\n          process.env.REACT_APP_API_PRACTICES +\r\n            practices[i].id +\r\n            \"/measures/cbp\"\r\n        );\r\n        cbpData = [...cbpData, ...data];\r\n      }\r\n\r\n      this.setState({ loadingStatus: \"Getting Patient Data\" });\r\n\r\n      for (let i = 0; i < practices.length; i++) {\r\n        const { data: data } = await axios.get(\r\n          process.env.REACT_APP_API_PRACTICES + practices[i].id + \"/patients\"\r\n        );\r\n        patients = [...patients, ...data];\r\n      }\r\n    }\r\n    \r\n    this.refactorData(cbpData, patients);\r\n\r\n  }\r\n\r\n  refactorData(cbpData, patients) {\r\n    var dataArr = [];\r\n    let payorData = this.state.payor;\r\n\r\n    console.log(payorData);\r\n\r\n    for (let i = 0; i < cbpData.length; i++) {\r\n      let tmp = {};\r\n      let tmpCbp = {};\r\n      let tmpPatients = {};\r\n\r\n      tmpCbp = cbpData[i];\r\n\r\n      for (let j = 0; j < patients.length; j++) {\r\n        if (cbpData[i].patient.id == patients[j].id) {\r\n          tmpPatients = patients[j];\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if (tmpCbp.systolic != '999')\r\n        tmp.systolic = tmpCbp.systolic;\r\n      else\r\n        tmp.systolic = 'N/A';\r\n\r\n      if (tmpCbp.diastolic != '11')\r\n        tmp.diastolic = tmpCbp.diastolic;\r\n      else\r\n        tmp.diastolic = 'N/A';\r\n\r\n      if (tmpCbp.date != '1111-11-11')\r\n        tmp.date = tmpCbp.date;\r\n      else\r\n        tmp.date = 'N/A';\r\n\r\n      tmp.is_controlled = tmpCbp.is_controlled;\r\n      tmp.is_compliant = tmpCbp.is_compliant;\r\n      tmp.is_current_year = tmpCbp.is_current_year;\r\n      tmp.provider = tmpCbp.patient.provider.name;\r\n\r\n      tmp.id = tmpPatients.id;\r\n      tmp.first_name = tmpPatients.first_name;\r\n      tmp.last_name = tmpPatients.last_name;\r\n      tmp.dob = tmpPatients.dob;\r\n      tmp.last_visit = tmpPatients.last_visit;\r\n      tmp.next_visit = tmpPatients.next_visit;\r\n\r\n      tmp.is_verified = true;\r\n\r\n      dataArr.push(tmp);\r\n    }\r\n\r\n    this.getVerified(dataArr);\r\n    this.getAggregates(dataArr);\r\n  }\r\n\r\n  getVerified(patients) {\r\n\r\n    let payor = this.state.payor;\r\n\r\n    let unverified = [];\r\n\r\n    for (let i = 0; i < payor.length; i++) {\r\n\r\n      let flag = 0;\r\n\r\n      for (let j = 0; j < patients.length; j++) {\r\n        \r\n        if (flag == 1)\r\n          break;\r\n\r\n        if (payor[i].patientname.includes(patients[j].first_name)\r\n        && payor[i].patientname.includes(patients[j].last_name)) {\r\n          if (payor[i].physicianname == patients[j].provider) {\r\n            flag = 1;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      if ( flag == 0) \r\n        unverified.push(payor[i]);\r\n\r\n    }\r\n\r\n    this.setState({unverified: unverified})\r\n\r\n  }\r\n\r\n  getAggregates(patients) {\r\n    var dataArr = patients;\r\n    var meta = {\r\n      patients: 0,\r\n      verified: 0,\r\n      unverified: 0,\r\n      controlled: 0,\r\n      uncontrolled: 0,\r\n      compliant: 0,\r\n      uncompliant: 0,\r\n      reading: 0,\r\n      readingScheduled: 0,\r\n      readingNotScheduled: 0,\r\n      noReading: 0,\r\n      noReadingScheduled: 0,\r\n      noReadingNotScheduled: 0,\r\n      completed: 0,\r\n    };\r\n\r\n    meta.patients = dataArr.length;\r\n\r\n    for (let i = 0; i < dataArr.length; i++) {\r\n        if (dataArr[i].is_verified == true) {\r\n          meta.verified += 1;\r\n          if (\r\n            dataArr[i].is_controlled == false ||\r\n            dataArr[i].is_controlled == null\r\n          ) {\r\n            meta.uncontrolled += 1;\r\n\r\n            if (dataArr[i].is_compliant == true) {\r\n              meta.compliant += 1;\r\n\r\n              if (dataArr[i].is_current_year == true) {\r\n                meta.reading += 1;\r\n\r\n                if (dataArr[i].next_visit) meta.readingScheduled += 1;\r\n                else meta.readingNotScheduled += 1;\r\n              } else {\r\n                meta.noReading += 1;\r\n\r\n                if (dataArr[i].next_visit) meta.noReadingScheduled += 1;\r\n                else meta.noReadingNotScheduled += 1;\r\n              }\r\n            } else meta.uncompliant += 1;\r\n          } else meta.controlled += 1;\r\n        } else meta.unverified += 1;\r\n    }\r\n\r\n    console.log(meta);\r\n\r\n    this.setState({\r\n      insurance: meta,\r\n      data: dataArr,\r\n      patients: dataArr,\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      visible: false,\r\n      currentPage: 1,\r\n    });\r\n  }\r\n\r\n  openBCBSModal() {\r\n    this.setState({\r\n      bcbsVisible: true,\r\n    });\r\n  }\r\n\r\n  closeBCBSModal() {\r\n    this.setState({\r\n      bcbsVisible: false,\r\n      currentPage: 1,\r\n    });\r\n  }\r\n\r\n  handlePatients = () => {\r\n    this.openBCBSModal();\r\n    this.setState({ patients: this.state.payor, heading: \"List from BCBS-M\" });\r\n  };\r\n\r\n  handleCompleted = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = filterPatientsCompleted(\r\n      this.state.data\r\n    ));\r\n    this.setState({ patients, heading: \"Closed Gaps\" });\r\n  };\r\n\r\n  handleControlled = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = filterPatientsControlled(\r\n      this.state.data\r\n    ));\r\n    this.setState({\r\n      patients,\r\n      heading: \"Documented Controlled Reading in 2021\",\r\n    });\r\n  };\r\n\r\n  handleUnControlled = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = filterPatientsUnControlled(\r\n      this.state.data\r\n    ));\r\n    this.setState({ patients, heading: \"Total Not Controlled in 2021\" });\r\n  };\r\n\r\n  handleCompliant = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = filterPatientsCompliant(\r\n      this.state.data\r\n    ));\r\n    this.setState({ patients, heading: \"Compliant with BP Medication\" });\r\n  };\r\n\r\n  handleUnCompliant = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = filterPatientsUnCompliant(\r\n      this.state.data\r\n    ));\r\n    this.setState({ patients, heading: \"Not Compliant with BP Medication\" });\r\n  };\r\n\r\n  handleReading = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = reading(this.state.data));\r\n    this.setState({\r\n      patients,\r\n      heading: \"Total with Reading in 2021 but Not Controlled Reading\",\r\n    });\r\n  };\r\n\r\n  handleReadingNotScheduled = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = readingNotScheduled(\r\n      this.state.data\r\n    ));\r\n    this.setState({\r\n      patients,\r\n      heading: \"BP Not Controlled & No Scheduled Upcoming Appointment in 2021\",\r\n    });\r\n  };\r\n\r\n  handleReadingScheduled = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = readingScheduled(this.state.data));\r\n    this.setState({\r\n      patients,\r\n      heading: \"BP Not Controlled & Upcoming Appointment is Scheduled in 2021\",\r\n    });\r\n  };\r\n\r\n  handleNoReading = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = noReading(this.state.data));\r\n    this.setState({ patients, heading: \"Total with No BP Reading in 2021\" });\r\n  };\r\n\r\n  handlePending = () => {\r\n    this.openBCBSModal();\r\n    this.setState({ patients: this.state.unverified, heading: \"Patients Pending Verification\" });\r\n  };\r\n\r\n  handleVerified = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = getVerified(this.state.data));\r\n    this.setState({ patients, heading: \"Patients Verified\" });\r\n  };\r\n\r\n  handleNoReadingNotScheduled = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = noReadingNotScheduled(\r\n      this.state.data\r\n    ));\r\n    this.setState({\r\n      patients,\r\n      heading: \"No BP Reading and No Upcoming Appointment\",\r\n    });\r\n  };\r\n\r\n  handleNoReadingScheduled = () => {\r\n    this.openModal();\r\n    const patients = (this.state.patients = noReadingScheduled(\r\n      this.state.data\r\n    ));\r\n    this.setState({\r\n      patients,\r\n      heading: \"No BP Reading with Upcoming Appointment\",\r\n    });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  styleNotCompliant = {\r\n    width: \"1400px\",\r\n  };\r\n\r\n  styleCompliant = {\r\n    width: \"1400px\",\r\n    background: \"#4169e1\",\r\n    color: \"#FFFFFF\",\r\n  };\r\n\r\n  styleNoReading = {\r\n    width: \"1200px\",\r\n    color: \"#4169e1\",\r\n  };\r\n\r\n  styleNoReadingSched = {\r\n    width: \"1000px\",\r\n    color: \"#4169e1\",\r\n  };\r\n\r\n  styleReading = {\r\n    width: \"1200px\",\r\n    color: \"#4169e1\",\r\n  };\r\n\r\n  styleReadingSched = {\r\n    width: \"1000px\",\r\n    color: \"#4169e1\",\r\n  };\r\n\r\n  styleIMG = {\r\n    wdith: \"48px\",\r\n    height: \"48px\",\r\n  };\r\n\r\n  styleBCBS = {\r\n    width: \"1500px\",\r\n  };\r\n\r\n  render() {\r\n    const columns = COLUMNS;\r\n    const { \r\n      payor,\r\n      insurance,\r\n      patients,\r\n      isLoading,\r\n      loadingStatus,\r\n      reportHeading,\r\n      heading,\r\n      unverified\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain\r\n                title={`CBP Report for ${reportHeading}`}\r\n                className=\"\"\r\n              />\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Below is the detailed report on Controlled Blood Pressure (CBP),\r\n                to the far right of each category is the number of patients\r\n                associated with the category, by clicking on view you will be\r\n                brought to a table of patients assoicated with the category\r\n                where you can filter through and see detailed information per\r\n                patient. For example clicking on the controlled category will\r\n                show you all patients with controlled readings for CBP.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        \r\n        {isLoading == true ? (\r\n          <div>\r\n            <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <h5 className=\"mt-2 font-weight-light\">{loadingStatus}</h5>\r\n          </div>\r\n        ) : (\r\n          <section>\r\n            <table\r\n              className=\"table table table-hover\"\r\n              style={{\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <thead></thead>\r\n              <tbody>\r\n                <tr onClick={this.handlePatients}>\r\n                  <td style={{ width: \"90%\" }}>List from BCBS-M</td>\r\n                  <td style={{ width: \"10%\" }}>{payor.length}</td>\r\n                </tr>\r\n                <tr onClick={this.handlePending}>\r\n                  <td style={{ width: \"90%\" }}>\r\n                    Patient Affiliation Being Verified\r\n                  </td>\r\n                  <td style={{ width: \"10%\" }}>{unverified.length}</td>\r\n                </tr>\r\n                <tr onClick={this.handleVerified}>\r\n                  <td>Patient Affiliation Verified</td>\r\n                  <td>{insurance.verified}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <table\r\n              className=\"table table-borderless table-hover\"\r\n              style={{\r\n                marginLeft: \"50px\",\r\n                marginTop: \"-12px\",\r\n                borderTop: \"1px solid blue\",\r\n                borderBottom: \"1px solid blue\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n                width: \"1060px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <tbody>\r\n                <tr onClick={this.handleControlled} style={{ borderBottom: \"1px solid lightgrey\" }}>\r\n                  <td>Documented Controlled Readings in 2021</td>\r\n                  <td>{insurance.controlled}</td>\r\n                </tr>\r\n                <tr onClick={this.handleUnControlled}>\r\n                  <td className=\"font-weight-bold\" style={{ width: \"85%\" }}>\r\n                    Total Not Controlled in 2021\r\n                  </td>\r\n                  <td className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                    {insurance.uncontrolled}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <table\r\n              className=\"table table-borderless table-hover\"\r\n              style={{\r\n                marginLeft: \"100px\",\r\n                marginTop: \"-14px\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n                width: \"1010px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <tbody>\r\n                <tr\r\n                  onClick={this.handleUnCompliant}\r\n                  style={{ borderBottom: \"1px lightgray solid\" }}\r\n                >\r\n                  <td style={{ width: \"80%\" }}>\r\n                    Not Compliant with BP Medication\r\n                  </td>\r\n                  <td style={{ width: \"10%\" }}>{insurance.uncompliant}</td>\r\n                </tr>\r\n                <tr onClick={this.handleCompliant}>\r\n                  <td style={{ width: \"80%\" }}>Compliant with BP Medication</td>\r\n                  <td style={{ width: \"5%\" }}>{insurance.compliant}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <table\r\n              className=\"table table-borderless table-hover\"\r\n              style={{\r\n                marginLeft: \"150px\",\r\n                borderTop: \"1px solid blue\",\r\n                borderBottom: \"1px solid blue\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n                marginTop: \"-12px\",\r\n                width: \"960px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <tbody>\r\n                <tr onClick={this.handleNoReading}>\r\n                  <td className=\"font-weight-bold\" style={{ width: \"75%\" }}>\r\n                    Total no Reading in 2021\r\n                  </td>\r\n                  <td className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                    {insurance.noReading}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <table\r\n              className=\"table table-borderless table-hover\"\r\n              style={{\r\n                marginLeft: \"200px\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n                marginTop: \"-14px\",\r\n                width: \"910px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <tbody>\r\n                <tr\r\n                  onClick={this.handleNoReadingScheduled}\r\n                  style={{ borderBottom: \"1px lightgray solid\" }}\r\n                >\r\n                  <td style={{ width: \"70%\" }}>\r\n                    Scheduled for an Appointment in 2021\r\n                  </td>\r\n                  <td style={{ width: \"10%\" }}>\r\n                    {insurance.noReadingScheduled}\r\n                  </td>\r\n                </tr>\r\n                <tr onClick={this.handleNoReadingNotScheduled}>\r\n                  <td style={{ width: \"70%\" }}>\r\n                    No Upcoming Appointment in 2021\r\n                  </td>\r\n                  <td style={{ width: \"10%\" }}>\r\n                    {insurance.noReadingNotScheduled}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <table\r\n              className=\"table table-borderless table-hover\"\r\n              style={{\r\n                marginLeft: \"150px\",\r\n                borderTop: \"1px solid blue\",\r\n                borderBottom: \"1px solid blue\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n                marginTop: \"-12px\",\r\n                width: \"960px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  <td\r\n                    className=\"font-weight-bold\"\r\n                    onClick={this.handleReading}\r\n                    style={{ width: \"75%\" }}\r\n                  >\r\n                    Total with Reading in 2021 but Not Controlled Reading\r\n                  </td>\r\n                  <td className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                    {insurance.reading}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <table\r\n              className=\"table table-borderless table-hover\"\r\n              style={{\r\n                marginLeft: \"200px\",\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n                marginTop: \"-14px\",\r\n                width: \"910px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <tbody>\r\n                <tr\r\n                  onClick={this.handleReadingScheduled}\r\n                  style={{ borderBottom: \"1px lightgray solid\" }}\r\n                >\r\n                  <td style={{ width: \"70%\" }}>\r\n                    Not Controlled with Upcoming Appointment in 2021\r\n                  </td>\r\n                  <td style={{ width: \"10%\" }}>{insurance.readingScheduled}</td>\r\n                </tr>\r\n                <tr onClick={this.handleReadingNotScheduled}>\r\n                  <td style={{ width: \"70%\" }}>\r\n                    Not Controlled and No Upcoming Appointment in 2021\r\n                  </td>\r\n                  <td style={{ width: \"10%\" }}>\r\n                    {insurance.readingNotScheduled}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <table\r\n              className=\"table table-borderless table-hover\"\r\n              style={{\r\n                overflowX: \"auto\",\r\n                whiteSpace: \"nowrap\",\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"blue\",\r\n              }}\r\n            >\r\n              <thead></thead>\r\n              <tbody>\r\n                <tr\r\n                  style={{ color: \"white\", fontWeight: \"bold\" }}\r\n                  onClick={this.handleCompleted}\r\n                >\r\n                  <td style={{ width: \"90%\" }}>Completed Gaps</td>\r\n                  <td style={{ width: \"10%\" }}>{insurance.completed}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </section>\r\n        )}\r\n\r\n        <Modal\r\n          dialogClassName=\"md\"\r\n          show={this.state.visible}\r\n          effect=\"fadeInUp\"\r\n          onHide={() => this.closeModal()}\r\n        >\r\n          <div className=\"m-5\">\r\n            <h3 className=\"ml-auto\">{patients.length}</h3>\r\n            <ReactTable\r\n              columns={columns}\r\n              data={patients}\r\n              isLoading={isLoading}\r\n            />\r\n            {patients.length === 0 ? (\r\n              <h4 className=\"text-center font-italic\">No Patients Found</h4>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <button\r\n              onClick={() => this.closeModal()}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n        <Modal\r\n          dialogClassName=\"md\"\r\n          show={this.state.bcbsVisible}\r\n          effect=\"fadeInUp\"\r\n          onHide={() => this.closeBCBSModal()}\r\n        >\r\n          <div className=\"m-5\">\r\n            <h3 className=\"ml-auto\">{patients.length}</h3>\r\n            <ReactTable\r\n              columns={PayorCOLUMNS}\r\n              data={patients}\r\n              isLoading={isLoading}\r\n            />\r\n            {patients.length === 0 ? (\r\n              <h4 className=\"text-center font-italic\">No Patients Found</h4>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <button\r\n              onClick={() => this.closeBCBSModal()}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default cbpTest;\r\n","// Root Imports\r\nimport React, { Component } from \"react\";\r\n\r\n// External Libraries\r\nimport axios from \"axios\";\r\n\r\n// Utils\r\nimport { paginate } from \"../utils/paginate\";\r\n\r\n// Components\r\nimport Pagination from \"./common/pagination\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { HeaderMain } from \"./common/headerMain\";\r\n\r\nclass Members extends Component {\r\n  state = {\r\n    pageSize: 25,\r\n    currentPage: 1,\r\n    patients: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    var patientList = [];\r\n\r\n    const { REACT_APP_API_PRACTICES } = process.env;\r\n\r\n    // Get Practices\r\n    const { data: practices } = await axios.get(\r\n      REACT_APP_API_PRACTICES\r\n    );\r\n    console.log(practices);\r\n\r\n    // Loop Practices and get each individual practice patients\r\n    for (let i = 0; i < practices.length; i++) {\r\n      const { data: list } = await axios.get(\r\n        REACT_APP_API_PRACTICES +\r\n          practices[i].id +\r\n          \"/patients/\"\r\n      );\r\n      patientList = [...patientList, ...list];\r\n    }\r\n\r\n    console.log(patientList);\r\n\r\n    this.setState({ patients: patientList });\r\n  }\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.patients;\r\n    const { currentPage, pageSize, patients: allPatients } = this.state;\r\n\r\n    const patients = paginate(allPatients, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"\">\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain title=\"Members List\" className=\"\" />\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Down below are listed the current and active members with open\r\n                care gaps. Each patient has their respective information\r\n                displayed, what practice they belong to and who their physician\r\n                is. The far right column indicates the patients gap.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"ml-1\"></Row>\r\n          <Row className=\"ml-1 mt-1\"></Row>\r\n        </Container>\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"font-weight-light\">Practice</th>\r\n              <th className=\"font-weight-light\">Provider</th>\r\n              <th className=\"font-weight-light\">First Name</th>\r\n              <th className=\"font-weight-light\">Last Name</th>\r\n              <th className=\"font-weight-light\">DOB</th>\r\n              <th className=\"font-weight-light\">Gap</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {patients.map((patient) => (\r\n              <tr>\r\n                <td>...</td>\r\n                <td>{patient.provider.name}</td>\r\n                <td>{patient.first_name}</td>\r\n                <td>{patient.last_name}</td>\r\n                <td>{patient.dob}</td>\r\n                <td className=\"text-danger\">CBP</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemsCount={count}\r\n          pageSize={pageSize}\r\n          onPageChange={this.handlePageChange}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Members;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = (props) => {\r\n  const {\r\n    email,\r\n    setEmail,\r\n    password,\r\n    setPassword,\r\n    handleLogin,\r\n    hasAccount,\r\n    setHasAccount,\r\n    emailError,\r\n    passwordError,\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\r\n        <h1 className=\"navbar-brand\" to=\"/\">\r\n          Gappy\r\n        </h1>\r\n        <div className=\"navbar-nav ml-auto\">\r\n          <button\r\n            className=\"btn btn-primary btn-sm\"\r\n          >\r\n            Product Page\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <div className=\"Login\">\r\n        <Form>\r\n          <Form.Group size=\"lg\" controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              type=\"email\"\r\n              value={email}\r\n              required\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <p className=\"errorMsg\">{emailError}</p>\r\n          <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              required\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <p className=\"errorMsg\">{passwordError}</p>\r\n          {hasAccount ? (\r\n            <>\r\n              <Button block size=\"lg\">\r\n                Sign Up\r\n              </Button>\r\n              <p>\r\n                Have an Account?{\" \"}\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button block size=\"lg\" onClick={handleLogin}>\r\n                Sign in\r\n              </Button>\r\n              <p>\r\n                Don't have an Account?{\" \"}\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span>\r\n              </p>\r\n            </>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n    <React.Fragment>\r\n        { /* START H1 Header */}\r\n        <div className={` d-flex ${ props.className }` }>\r\n            <h3 className=\"display-4 mr-3 mb-0 align-self-start\">\r\n                { props.title }\r\n            </h3>\r\n        </div>\r\n        { /* END H1 Header */}\r\n    </React.Fragment>\r\n)\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    subTitle: PropTypes.node,\r\n    className: PropTypes.string\r\n};\r\nHeader.defaultProps = {\r\n    title: \"Waiting for Data...\",\r\n    subTitle: \"Waiting for Data...\",\r\n    className: \"my-4\"\r\n};\r\n\r\nexport { Header };","import React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  const {img, name, points} = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-inline-block m-5\" style={{height: \"10%\", width: \"10%\"}}>\r\n        <img\r\n          src={img}\r\n          style={{ borderRadius: \"50%\" }}\r\n          className=\"img-responsive img-thumbnail\"\r\n        />\r\n        <p className=\"mt-1 h6 text-center text-decoration-none\">{name}</p>\r\n        <h5 className=\"text-center text-success\">{points}</h5>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  img: \"Loading...\",\r\n  name: \"Loading...\",\r\n  points: \"0\"\r\n};\r\n\r\nexport default Profile;\r\n","export default __webpack_public_path__ + \"static/media/profile4.f92e5ecc.jpg\";","// Root Imports\r\nimport React, { Component } from \"react\";\r\n\r\n// Component Imports\r\nimport Profile from './profile';\r\n\r\n// TEMPORARY ASSETS\r\nimport img from '../../assets/profile4.jpg';\r\n\r\nclass AllStarProfiles extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile \r\n            img={img}\r\n            name=\"Zaid Uddin\"\r\n            points=\"8400\"\r\n        />\r\n        <Profile \r\n            img={img}\r\n            name=\"Zaid Uddin\"\r\n            points=\"8400\"\r\n        />\r\n        <Profile \r\n            img={img}\r\n            name=\"Zaid Uddin\"\r\n            points=\"8400\"\r\n        />\r\n        <Profile \r\n            img={img}\r\n            name=\"Zaid Uddin\"\r\n            points=\"8400\"\r\n        />\r\n        <Profile \r\n            img={img}\r\n            name=\"Zaid Uddin\"\r\n            points=\"8400\"\r\n        />\r\n        <Profile \r\n            img={img}\r\n            name=\"Zaid Uddin\"\r\n            points=\"8400\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllStarProfiles;\r\n","// Root Imports\r\nimport { React } from \"react\";\r\n\r\n// External Library Imports\r\nimport { Accordion, Button } from \"react-bootstrap\";\r\n\r\nconst TaskAccordion = (props) => {\r\n  const { color, heading, body } = props;\r\n\r\n  return (\r\n    <Accordion>\r\n      <div\r\n        className=\"d-flex\"\r\n        style={{\r\n          border: `1px solid ${color}`,\r\n          borderRadius: \"5px\",\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n        }}\r\n      >\r\n        <div className=\"mr-auto\">\r\n          <Accordion.Toggle as={Button} variant=\"button\" eventKey=\"0\">\r\n            <h3 style={{ color: `${color}` }}>{heading}</h3>\r\n          </Accordion.Toggle>\r\n        </div>\r\n        <div>\r\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n            <span className=\"ml-auto\">\r\n              <i class=\"fa fa-plus text-dark fa-2x\"></i>\r\n            </span>\r\n          </Accordion.Toggle>\r\n        </div>\r\n      </div>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <table\r\n          className=\"table table-hover table-responsive\"\r\n          style={{\r\n            cursor: \"pointer\",\r\n            overflowX: \"auto\"\r\n          }}\r\n        >\r\n          <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n            <tr>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"15%\" }}\r\n              >\r\n                Tasks\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"5%\" }}\r\n              >\r\n                Type\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"30%\" }}\r\n              >\r\n                Reason\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"10%\" }}\r\n              >\r\n                Patient Name\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"10%\" }}\r\n              >\r\n                Provider\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"10%\" }}\r\n              >\r\n                Status\r\n              </th>\r\n              <th\r\n                className=\"font-weight-bold text-muted\"\r\n                style={{ width: \"30%\" }}\r\n              >\r\n                Description\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tr\r\n                // key={ea.patientID}\r\n                // onClick={() => this.goToTask(ea._id, ea.patientID)}\r\n              >\r\n                <td className=\"align-middle font-weight-bold\">\r\n                  <i class=\"fa fa-circle text-danger\"></i>\r\n                  Bill CPTII Codes\r\n                </td>\r\n                <td className=\"align-middle font-weight-bold\">\r\n                  MA\r\n                </td>\r\n                <td>\r\n                  CPTII codes are reporting codes which allow payors to ID where\r\n                  members’ BPs stand within a controlled or uncontrolled range,\r\n                  any given year. Gappy has automatically paired the appropriate\r\n                  CPTII codes based on the systolic and diastolic readings for\r\n                  you.\r\n                  <span\r\n                    className=\"ml-2 badge badge-pill text-white\"\r\n                    style={{ background: \"green\" }}\r\n                  >\r\n                    Call\r\n                  </span>\r\n                  <span\r\n                    className=\"ml-2 badge badge-pill text-white\"\r\n                    style={{ background: \"black\" }}\r\n                  >\r\n                    Schedule\r\n                  </span>\r\n                </td>\r\n                <td className=\"align-middle\" style={{ overflowX: \"auto\"}}>\r\n                  John Loe\r\n                </td>\r\n                <td className=\"align-middle\" style={{ overflowX: \"auto\"}}>\r\n                  Margolis Something\r\n                </td>\r\n                <td className=\"align-middle\">\r\n                  <span\r\n                    className=\"ml-2 badge badge-pill text-white\"\r\n                    style={{ background: \"red\" }}\r\n                  >\r\n                    In-Complete\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  CPTII codes are reporting codes which allow payors to ID where\r\n                  members’ BPs stand within a controlled or uncontrolled range\r\n                </td>\r\n              </tr>\r\n          </tbody>\r\n        </table>\r\n      </Accordion.Collapse>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default TaskAccordion;\r\n","// Root Imports\r\nimport React, { Component } from \"react\";\r\n\r\n// Component Imports\r\nimport TaskAccordion from \"./taskAccordion\";\r\n\r\nclass Accordions extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"pt-1 pb-1\">\r\n          <TaskAccordion\r\n            color=\"blue\"\r\n            heading=\"End of Day\"\r\n            body=\"The Daily Tasks\"\r\n          />\r\n        </div>\r\n        <div className=\"pt-1 pb-1\">\r\n          <TaskAccordion\r\n            color=\"orange\"\r\n            heading=\"End of Week\"\r\n            body=\"The Weekly Tasks\"\r\n          />\r\n        </div>\r\n        <div className=\"pt-1 pb-1\">\r\n          <TaskAccordion\r\n            color=\"red\"\r\n            heading=\"End of Month\"\r\n            body=\"The Monthly Tasks\"\r\n          />\r\n        </div>\r\n        <div className=\"pt-1 pb-1\">\r\n          <TaskAccordion\r\n            color=\"green\"\r\n            heading=\"Completed Tasks\"\r\n            body=\"The Completed Tasks\"\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Accordions;\r\n","// Root Imports\r\nimport React, { Component } from \"react\";\r\n\r\n// External Library Imports\r\n//...\r\n\r\n// Component Imports\r\nimport { Header } from \"../common/header\";\r\nimport AllStarProfiles from \"../user/allStarProfiles\";\r\nimport Accordions from '../tasks/accordions';\r\n\r\nclass Dash extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div style={{paddingLeft: \"5%\", paddingRight: \"5%\"}}>\r\n        <div>\r\n          <h3 className=\"text-center\">Gap Closure All Stars</h3>\r\n        </div>\r\n        <section\r\n          className=\"d-flex\"\r\n          style={{\r\n            overflow: \"auto\",\r\n            whiteSpace: \"nowrap\",\r\n            height: \"auto\",\r\n            width: \"auto\",\r\n          }}\r\n        >\r\n          <AllStarProfiles />\r\n        </section>\r\n        \r\n        <section className=\"\">\r\n          <Accordions />\r\n        </section>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dash;\r\n","import React from \"react\";\r\n\r\n// External Libraries\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  Label,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  InputGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\n\r\nconst EditBilling = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"\" style={{border: \"none\"}}>\r\n        <CardBody>\r\n          <Form>\r\n            {/* START Input */}\r\n            <FormGroup row>\r\n              <Label for=\"input-1\" sm={4}>\r\n                Banking Information\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"text\"\r\n                  id=\"enterName\"\r\n                  placeholder=\"Name on Account...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Input */}\r\n            {/* START Input */}\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Account Number...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Routing Number...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            {/* END Input */}\r\n            {/* START Radios */}\r\n            <FormGroup row className=\"mt-5\">\r\n              <Label for=\"operatingSystem11\" sm={4} className=\"pt-0\">\r\n                Billing Address\r\n              </Label>\r\n              \r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"text\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Address...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"City...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"State...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Radios */}\r\n            {/* START Select */}\r\n            <FormGroup row>\r\n              <Label for=\"country-selector-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <CustomInput\r\n                  type=\"select\"\r\n                  name=\"customSelect\"\r\n                  id=\"country-selector-1\"\r\n                >\r\n                  <option value=\"\">Select Country...</option>\r\n                  <option>United States of America (US)</option>\r\n                  <option>United Kingdom (UK)</option>\r\n                  <option>Australia</option>\r\n                  <option>Canada</option>\r\n                  <option>Other...</option>\r\n                </CustomInput>\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}>\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Zip Code...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Select */}\r\n            \r\n            {/* START Textarea */}\r\n            <FormGroup row>\r\n              <Label for=\"message-1\" sm={4}>\r\n                Comments\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"text\"\r\n                  id=\"message-1\"\r\n                  placeholder=\"Anything we need to know...?\"\r\n                  className=\"mb-2\"\r\n                />\r\n                <CustomInput\r\n                  type=\"checkbox\"\r\n                  id=\"iConfirm2\"\r\n                  label=\"I confirm that I have read the Terms & Agreements.\"\r\n                  className=\"mb-3\"\r\n                />\r\n                <Button color=\"primary\">Save</Button>\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Textarea */}\r\n          </Form>\r\n          {/* END Form */}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EditBilling;\r\n","import React from \"react\";\r\n\r\n// Root CSS\r\nimport \"../../css/styles.css\";\r\n\r\n// External Libraries\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  Label,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  InputGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\n\r\nconst ResetPin = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"\" style={{ border: \"none\" }}>\r\n        <CardBody>\r\n          <Form>\r\n            {/* START Input */}\r\n            <FormGroup row>\r\n              <Label for=\"input-1\" sm={4}>\r\n                Pin Information\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"text\"\r\n                  id=\"enterName\"\r\n                  placeholder=\"Last Rembered Pin...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Input */}\r\n            {/* START Input */}\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}></Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"text\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Practice Username...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label for=\"inputPassword-1\" sm={4}></Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword-1\"\r\n                  placeholder=\"Practice Password...\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup row>\r\n              <Label for=\"operatingSystem11\" sm={4} className=\"pt-0\">\r\n                How would you like to receive the new pin?\r\n              </Label>\r\n              <Col sm={8}>\r\n                <CustomInput\r\n                  type=\"radio\"\r\n                  id=\"operatingSystem11\"\r\n                  name=\"operatingSystem\"\r\n                  label=\"Email\"\r\n                  inline\r\n                  defaultChecked\r\n                />\r\n                <CustomInput\r\n                  type=\"radio\"\r\n                  id=\"operatingSystem12\"\r\n                  name=\"operatingSystem\"\r\n                  label=\"Phone\"\r\n                  inline\r\n                />\r\n                <CustomInput\r\n                  type=\"radio\"\r\n                  id=\"operatingSystem13\"\r\n                  name=\"operatingSystem\"\r\n                  label=\"Practice Manager\"\r\n                  inline\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            {/* START Textarea */}\r\n            <FormGroup row>\r\n              <Label for=\"message-1\" sm={4}>\r\n                Comments\r\n              </Label>\r\n              <Col sm={8}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"text\"\r\n                  id=\"message-1\"\r\n                  placeholder=\"Anything we need to know...?\"\r\n                  className=\"mb-2\"\r\n                />\r\n                <CustomInput\r\n                  type=\"checkbox\"\r\n                  id=\"iConfirm2\"\r\n                  label=\"I confirm that I have read the Terms & Agreements.\"\r\n                  className=\"mb-3\"\r\n                />\r\n                <Button color=\"primary\">Save</Button>\r\n              </Col>\r\n            </FormGroup>\r\n            {/* END Textarea */}\r\n          </Form>\r\n          {/* END Form */}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ResetPin;\r\n","import React, { Component } from \"react\";\r\n\r\n// Root CSS\r\nimport \"../../css/styles.css\";\r\n\r\n// External Libraries\r\nimport { Row, Col, Card, CardTitle, CardBody, Button, Badge } from \"reactstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n// Components\r\nimport { Header } from \"../common/header\";\r\nimport EditBilling from \"../forms/editBilling\";\r\nimport ResetPin from \"../forms/resetPin\";\r\n\r\n// Assets\r\nimport img2 from \"../../assets/profile4.jpg\";\r\n\r\nclass UserPage extends Component {\r\n  state = {\r\n    visible: false,\r\n    form: \"\",\r\n  };\r\n\r\n  renderForm(param) {\r\n    switch (param) {\r\n      case 'editbilling':\r\n        return <EditBilling />\r\n\r\n      case 'resetpin':\r\n        return <ResetPin />\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { form, visible } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <section style={{ margin: \"5%\" }}>\r\n          <Header title=\"Profile Details\" className=\"mb-5 mt-4\" />\r\n          {/* START Content */}\r\n          <Row>\r\n            <Col lg={4}>\r\n              <Card>\r\n                <CardBody>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <img\r\n                      src={img2}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50%\",\r\n                        height: \"50%\",\r\n                        borderRadius: \"50%\",\r\n                      }}\r\n                      className=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"mt-3 mb-4 text-center\">\r\n                    <p\r\n                      className=\"h6 text-center text-overflow text-decoration-none\"\r\n                      href=\"#\"\r\n                    >\r\n                      Lawren Rightwork\r\n                    </p>\r\n                    <div className=\"text-center text-success font-weight-bold\">\r\n                      <h2>8500</h2>\r\n                    </div>\r\n                    <span>\r\n                      <i class=\"fa fa-star fa-2x\" style={{ color: \"gold\" }}></i>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"text-center pb-1\">\r\n                    <ul className=\"list-inline\">\r\n                      <li className=\"list-inline-item text-center\">\r\n                        <h2 className=\"mb-1\">2</h2>\r\n                        <span>Tasks In-Progress</span>\r\n                      </li>\r\n                      <li className=\"list-inline-item text-center\">\r\n                        <h2 className=\"mb-1\">126</h2>\r\n                        <span>Tasks Completed</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <Row className=\"mt-3\">\r\n                    <Col sm={6} md={6}>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        block\r\n                        to=\"/apps/new-email\"\r\n                        className=\"mb-3 mb-lg-0\"\r\n                      >\r\n                        Message\r\n                      </Button>\r\n                    </Col>\r\n                    <Col sm={6} md={6}>\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        outline\r\n                        block\r\n                        to=\"/apps/profile-edit\"\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <div></div>\r\n                  <p className=\"mt-4 small text-left\">Profile</p>\r\n                  <p className=\"text-left\">Office Staff Biller</p>\r\n                  <p className=\"mt-4 small text-left\">Awards</p>\r\n                  <div className=\"text-left mb-4\">\r\n                    <span className=\"mr-2 badge badge-pill bg-warning text-white\">\r\n                      Weekly Leader\r\n                    </span>\r\n                    <Badge pill color=\"info\" className=\"mr-2\">\r\n                      Monthly Leader\r\n                    </Badge>\r\n                    <Badge pill color=\"success\" className=\"mr-1\">\r\n                      Yearly Leader\r\n                    </Badge>\r\n                  </div>\r\n                  <p className=\"mt-4 small text-left\">Practice Info</p>\r\n                  <dl className=\"row\">\r\n                    <dt className={`col-sm-3 text-lg-left`}>Address</dt>\r\n                    <dd className={`col-sm-9 text-lg-right text-inverse`}>\r\n                      700 Zemlak Glen\r\n                    </dd>\r\n                    <dt className={`col-sm-3 text-lg-left`}>City</dt>\r\n                    <dd className={`col-sm-9 text-lg-right text-inverse`}>\r\n                      Jacobiton\r\n                    </dd>\r\n                    <dt className={`col-sm-3 text-lg-left`}>State</dt>\r\n                    <dd className={`col-sm-9 text-lg-right text-inverse`}>\r\n                      West Virginia\r\n                    </dd>\r\n                    <dt className={`col-sm-3 text-lg-left`}>ZIP</dt>\r\n                    <dd className={`col-sm-9 text-lg-right text-inverse`}>\r\n                      87032\r\n                    </dd>\r\n                  </dl>\r\n\r\n                  <p className=\"mt-4 small text-left\">Settings</p>\r\n                  <div>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      block\r\n                      onClick={() => this.setState({ visible: true, form: \"resetpin\" })}\r\n                      className=\"mb-3 mb-lg-0\"\r\n                    >\r\n                      Reset Pin\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      block\r\n                      to=\"/apps/new-email\"\r\n                      className=\"mb-3 mb-lg-0\"\r\n                    >\r\n                      Edit User Details\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      block\r\n                      to=\"/apps/new-email\"\r\n                      className=\"mb-3 mb-lg-0\"\r\n                    >\r\n                      Contact Support\r\n                    </Button>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col lg={8}>\r\n              <div className=\"hr-sect\">Funds</div>\r\n              <Row className=\"mb-5\">\r\n                <Col>\r\n                  <Card className=\"mb-3\">\r\n                    <CardBody>\r\n                      <CardTitle tag=\"h6\" className=\"text-center mb-4\">\r\n                        Reedamable Points\r\n                      </CardTitle>\r\n                      <div className=\"content-left\">\r\n                        <h2 className=\"text-center\">4000 </h2>\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n                <Col>\r\n                  <Card className=\"mb-3\">\r\n                    <CardBody>\r\n                      <CardTitle tag=\"h6\" className=\"text-center mb-4\">\r\n                        Points Pending Gap Closure\r\n                      </CardTitle>\r\n                      <div>\r\n                        <h2 className=\"text-center\">1470</h2>\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n                <Col>\r\n                  <Card className=\"mb-3\">\r\n                    <CardBody>\r\n                      <CardTitle tag=\"h6\" className=\"text-center mb-4\">\r\n                        Lifetime Total Points\r\n                      </CardTitle>\r\n                      <div>\r\n                        <h2 className=\"text-center\">8500</h2>\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"mb-5\">\r\n                <Col>\r\n                  <Button color=\"success\" outline block to=\"/apps/profile-edit\">\r\n                    Redeem Points\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    block\r\n                    onClick={() => this.setState({ visible: true, form: \"editbilling\" })}\r\n                  >\r\n                    Edit Billing Info\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Col lg={12}>\r\n                <div className=\"hr-sect\">In-Progress</div>\r\n                <table\r\n                  className=\"table table-hover table-responsive\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    overflowX: \"auto\",\r\n                  }}\r\n                >\r\n                  <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n                    <tr>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"25%\" }}\r\n                      >\r\n                        Tasks\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"30%\" }}\r\n                      >\r\n                        Reason\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-center text-muted\"\r\n                        style={{ width: \"10%\", whiteSpace: \"nowrap\" }}\r\n                      >\r\n                        Patient Name\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-center text-muted\"\r\n                        style={{ width: \"13%\" }}\r\n                      >\r\n                        Status\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"30%\" }}\r\n                      >\r\n                        Description\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td\r\n                        className=\"align-middle font-weight-bold\"\r\n                        style={{ whiteSpace: \"nowrap\" }}\r\n                      >\r\n                        <i class=\"fa fa-circle text-danger\"></i>\r\n                        BP Check Appointment Scheduling\r\n                      </td>\r\n                      <td>\r\n                        We need to ensure that patient BP is controlled to avoid\r\n                        HTN related complications. It is important that we have\r\n                        a controlled BP on file every calendar year.\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"blue\" }}\r\n                        >\r\n                          Call\r\n                        </span>\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"black\" }}\r\n                        >\r\n                          Schedule\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"align-middle text-center\">\r\n                        Amy Wrightworth\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge badge-pill bg-info text-white\">\r\n                          In-Progress\r\n                        </span>\r\n                        <h6></h6>\r\n                        <h6 className=\"text-center\">3/10/21 12:01pm</h6>\r\n                      </td>\r\n                      <td>Call to patient in progress, awaiting outcome.</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td\r\n                        className=\"align-middle font-weight-bold\"\r\n                        style={{ whiteSpace: \"nowrap\" }}\r\n                      >\r\n                        <i class=\"fa fa-circle text-danger\"></i>\r\n                        BP Check Appointment Scheduling\r\n                      </td>\r\n                      <td>\r\n                        We need to ensure that patient BP is controlled to avoid\r\n                        HTN related complications. It is important that we have\r\n                        a controlled BP on file every calendar year.\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"blue\" }}\r\n                        >\r\n                          Call\r\n                        </span>\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"black\" }}\r\n                        >\r\n                          Schedule\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"align-middle text-center\">\r\n                        Duck Worthslight\r\n                      </td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge badge-pill bg-info text-white\">\r\n                          In-Progress\r\n                        </span>\r\n                        <h6></h6>\r\n                        <h6 className=\"text-center\">3/10/21 12:01pm</h6>\r\n                      </td>\r\n                      <td>Call to patient in progress, awaiting outcome.</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <div className=\"hr-sect mt-5\">Completed</div>\r\n                <table\r\n                  className=\"table table-hover table-responsive\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    overflowX: \"auto\",\r\n                  }}\r\n                >\r\n                  <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n                    <tr>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"25%\" }}\r\n                      >\r\n                        Tasks\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"30%\" }}\r\n                      >\r\n                        Reason\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-center text-muted\"\r\n                        style={{ width: \"10%\", whiteSpace: \"nowrap\" }}\r\n                      >\r\n                        Patient Name\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-center text-muted\"\r\n                        style={{ width: \"13%\" }}\r\n                      >\r\n                        Status\r\n                      </th>\r\n                      <th\r\n                        className=\"font-weight-bold text-muted\"\r\n                        style={{ width: \"30%\" }}\r\n                      >\r\n                        Description\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td\r\n                        className=\"align-middle font-weight-bold\"\r\n                        style={{ whiteSpace: \"nowrap\" }}\r\n                      >\r\n                        <i class=\"fa fa-circle text-danger\"></i>\r\n                        BP Check Appointment Scheduling\r\n                      </td>\r\n                      <td>\r\n                        We need to ensure that patient BP is controlled to avoid\r\n                        HTN related complications. It is important that we have\r\n                        a controlled BP on file every calendar year.\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"blue\" }}\r\n                        >\r\n                          Call\r\n                        </span>\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"black\" }}\r\n                        >\r\n                          Schedule\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"align-middle text-center\">John Loe</td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge badge-pill bg-success text-white\">\r\n                          Completed\r\n                        </span>\r\n                        <h6></h6>\r\n                        <h6 className=\"text-center\">3/10/21 12:01pm</h6>\r\n                      </td>\r\n                      <td>\r\n                        Successfully scheduled patient for blood pressure\r\n                        measurement. Placed appointment flag in EMR.\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"align-middle font-weight-bold\">\r\n                        <i class=\"fa fa-circle text-danger\"></i>\r\n                        BP Check Appointment Scheduling\r\n                      </td>\r\n                      <td>\r\n                        We need to ensure that patient BP is controlled to avoid\r\n                        HTN related complications. It is important that we have\r\n                        a controlled BP on file every calimport EditBilling from calendar year.\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"blue\" }}\r\n                        >\r\n                          Call\r\n                        </span>\r\n                        <span\r\n                          className=\"ml-2 badge badge-pill text-white\"\r\n                          style={{ background: \"black\" }}\r\n                        >\r\n                          Schedule\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"align-middle text-center\">Dove Madison</td>\r\n                      <td className=\"text-center align-middle\">\r\n                        <span className=\"badge badge-pill bg-success text-white\">\r\n                          Completed\r\n                        </span>\r\n                        <h6></h6>\r\n                        <h6 className=\"text-center\">3/8/21 1:03pm</h6>\r\n                      </td>\r\n                      <td>\r\n                        Successfully scheduled patient for blood pressure\r\n                        measurement. Placed appointment flag in EMR.\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n          {/* END Content */}\r\n\r\n          <Modal\r\n            dialogClassName=\"sm\"\r\n            show={visible}\r\n            effect=\"fadeInUp\"\r\n          >\r\n            <div className=\"modal-header d-flex m-2\">\r\n              <h4 className=\"modal-title\">Form...</h4>\r\n              <Button\r\n                color=\"danger\"\r\n                className=\"close\"\r\n                onClick={() => this.setState({ visible: false })}\r\n              ><i class=\"fa fa-times-circle\"></i></Button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {this.renderForm(form)}\r\n            </div>\r\n          </Modal>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPage;\r\n","var patients = require(\"./json/patient.json\");\r\nvar taskLibrary = require(\"./json/taskReference.json\");\r\nvar billingcpt = require(\"./json/billingCodes.json\");\r\n\r\n// Exports Weekly Tasks\r\n// Returns JSON Array of Patient Objects\r\nexport function getWeekly() {\r\n  let tasks = patients.weekly;\r\n  let reference = taskLibrary;\r\n  let patientList = [];\r\n\r\n  for (var i = 0; i < tasks.length; i++) {\r\n    let tmp = tasks[i]._id;\r\n\r\n    let ref = reference[tmp];\r\n\r\n    let outcome = ref.outcomes;\r\n\r\n    let description = ref.description.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let scheduledTop = outcome.scheduledTop.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let scheduledBottom = outcome.scheduledBottom.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let noAnswerTop = outcome.noAnswerTop.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let noAnswerBottom = outcome.noAnswerBottom.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n\r\n    let pt = {\r\n      _id: tasks[i]._id,\r\n      patientID: tasks[i].patientID,\r\n      firstName: tasks[i].firstName,\r\n      lastName: tasks[i].lastName,\r\n      phone: tasks[i].phone,\r\n      status: tasks[i].status,\r\n      descriptor: tasks[i].descriptor,\r\n      task: ref.task,\r\n      reason: ref.reason,\r\n      description: description,\r\n      scheduledTop: scheduledTop,\r\n      scheduledBottom: scheduledBottom,\r\n      noAnswerTop: noAnswerTop,\r\n      noAnswerBottom: noAnswerBottom,\r\n    };\r\n\r\n    patientList.push(pt);\r\n  }\r\n\r\n  console.log(patientList);\r\n\r\n  return patientList;\r\n}\r\n\r\n// Gets Single Patient Data\r\n// Return JSON Object\r\nexport function getPatient(path) {\r\n  let tasks = patients.weekly;\r\n  let reference = taskLibrary;\r\n\r\n  let pathname = path.split(\"/\");\r\n  let getID = pathname[3];\r\n\r\n  for (var i = 0; i < tasks.length; i++) {\r\n    if (tasks[i].patientID == getID) {\r\n      let tmp = tasks[i]._id;\r\n\r\n      let ref = reference[tmp];\r\n\r\n      let outcome = ref.outcomes;\r\n\r\n      let description = ref.description.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let scheduledTop = outcome.scheduledTop.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let scheduledBottom = outcome.scheduledBottom.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let noAnswerTop = outcome.noAnswerTop.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let noAnswerBottom = outcome.noAnswerBottom.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n\r\n      let pt = {\r\n        _id: tasks[i]._id,\r\n        patientID: tasks[i].patientID,\r\n        firstName: tasks[i].firstName,\r\n        lastName: tasks[i].lastName,\r\n        phone: tasks[i].phone,\r\n        status: tasks[i].status,\r\n        descriptor: tasks[i].descriptor,\r\n        task: ref.task,\r\n        reason: ref.reason,\r\n        description: description,\r\n        scheduledTop: scheduledTop,\r\n        scheduledBottom: scheduledBottom,\r\n        noAnswerTop: noAnswerTop,\r\n        noAnswerBottom: noAnswerBottom,\r\n      };\r\n\r\n      return pt;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function getMBC() {\r\n   let tasks = patients.monthly;\r\n   let ref = taskLibrary;\r\n   let patientList = {\r\n      meta: {},\r\n      patients: []\r\n   };\r\n\r\n   for (var i = 0; i < tasks.length; i++) {\r\n      if (tasks[i]._id == \"mbc\") {\r\n         patientList.meta = ref.mbc;\r\n         patientList.patients.push(tasks[i]);\r\n      }\r\n   }\r\n\r\n   console.log(patientList);\r\n\r\n   return patientList;\r\n}\r\n\r\nexport function getBillCPT() {\r\n   return billingcpt;\r\n}\r\n\r\nexport function serverPOST(obj){\r\n  \r\n}\r\n","export default __webpack_public_path__ + \"static/media/congrats.24d04264.jpeg\";","import React from \"react\";\r\n\r\n// External Libraries\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Assets\r\nimport congrats from '../../assets/congrats.jpeg';\r\n\r\nconst onSuccess = () => {\r\n  return (\r\n      <React.Fragment>\r\n        <div className=\"d-flex justify-content-center\">\r\n            <img className=\"img-fluid\" width=\"50%\" src={congrats}/>\r\n        </div>\r\n\r\n        <div>\r\n          <h2 className=\"m-5 font-weight-bold text-success text-center\">\r\n            Congratulations!!!\r\n          </h2>\r\n          <h3 className=\"m-5 font-weight-light text-center\">\r\n            You've just earned 15 points, you can use these points to redeem cash, giftcards or products. To redeem, head to the profile section!\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"m-5 d-flex justify-content-center\">\r\n            <Link className=\"btn p-2 btn-primary\" to=\"/home\">\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Home\r\n              </h3>\r\n            </Link>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default onSuccess;\r\n","import React from \"react\";\r\n\r\nconst Confirmation = (props) => {\r\n  const { count, pt, pin, handleOnSubmit, handleOnChange } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <h3 className=\"m-5 font-weight-light text-center\">\r\n          You have selected one or more boxes, certifying that you have\r\n          completed the associated task of, submitting the appropriate CPTII\r\n          codes for the selected patients\r\n        </h3>\r\n      </div>\r\n\r\n      <div className=\"m-5 d-flex justify-content-center\">\r\n        <form onSubmit={handleOnSubmit}>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control mb-3\"\r\n            name=\"pin\"\r\n            id=\"pin\"\r\n            value={pin}\r\n            onChange={handleOnChange}\r\n            placeholder=\"Enter Pin\"\r\n          ></input>\r\n          <button type=\"submit\" className=\"btn p-3 btn-success\">\r\n            <h3 className=\"font-weight-bold text-center\">\r\n              Complete to Unlock {count} Points\r\n            </h3>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","// Root Imports\r\nimport React, { Component } from \"react\";\r\n\r\n// Component Imports\r\nimport OnSuccess from \"./onSuccess\";\r\nimport Confirmation from \"./confirmation\";\r\n\r\n// Services\r\nimport { serverPOST } from \"../../services/server\";\r\n\r\nclass onComplete extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    show: false,\r\n    pin: \"\",\r\n  };\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Set Loading to TRUE\r\n    this.setState({ isLoading: true });\r\n\r\n    // Create Patient POST Request\r\n    const { pin } = this.state;\r\n    const { pt } = this.props;\r\n\r\n    let obj = {\r\n      pin: pin,\r\n      patient: pt,\r\n    };\r\n\r\n    // Send POST Request\r\n    // TEMPORARY CODE TO MIMIC POST REQUEST\r\n    let response = {\r\n      staff: \"Zaid Uddin\",\r\n      status: 0,\r\n    };\r\n\r\n    setTimeout(() => {\r\n      if (obj.pin == \"1234\") {\r\n        response.status = 200;\r\n      } else {\r\n        response.status = 500;\r\n      }\r\n\r\n      // Wait for Response\r\n      console.log(response);\r\n\r\n      // Call Function Based on Response\r\n      if (response.status == 200) this.handleOnSuccess();\r\n      else if (response.status == 500) this.handleOnError();\r\n    }, 3000);\r\n  };\r\n\r\n  handleOnChange = ({ currentTarget: input }) => {\r\n    let pin = this.state.pin;\r\n    pin = input.value;\r\n\r\n    this.setState({ pin });\r\n  };\r\n\r\n  handleOnSuccess() {\r\n    console.log(\"Success!!!\");\r\n\r\n    this.setState({ show: true, isLoading: false });\r\n  }\r\n\r\n  handleOnError() {}\r\n\r\n  render() {\r\n    const { isLoading, show, pin } = this.state;\r\n    const { count, pt } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {isLoading ? (\r\n          <div className=\"m-5 d-flex justify-content-center\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : show ? (\r\n          <OnSuccess />\r\n        ) : (\r\n          <Confirmation\r\n            count={count}\r\n            pt={pt}\r\n            pin={pin}\r\n            handleOnSubmit={this.handleOnSubmit}\r\n            handleOnChange={this.handleOnChange}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default onComplete;\r\n","import React, { Component } from \"react\";\r\nimport { getBillCPT } from \"../../../services/server\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport OnComplete from '../../taskSubmission/onComplete';\r\n\r\nclass BillCPT extends Component {\r\n  state = {\r\n    pt: getBillCPT(),\r\n    visible: false,\r\n    count: 0,\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  handleOnCheck(data) {\r\n    var patients = this.state.pt;\r\n    var count = this.state.count;\r\n\r\n    for (let i = 0; i < patients.length; i++) {\r\n      if (patients[i].id == data.id) {\r\n        if (patients[i].status == \"billed\") {\r\n          patients[i].status = \"null\";\r\n          count -= 1;\r\n        } else {\r\n          patients[i].status = \"billed\";\r\n          count += 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ pt: patients, count: count });\r\n  }\r\n\r\n  handleAllCheck() {\r\n    var patients = this.state.pt;\r\n    var count = this.state.count;\r\n\r\n    if (count == patients.length) {\r\n      for (let i = 0; i < patients.length; i++) {\r\n        patients[i].status = \"null\";\r\n      }\r\n      count = 0;\r\n    } else {\r\n      for (let i = 0; i < patients.length; i++) {\r\n        patients[i].status = \"billed\";\r\n      }\r\n      count = patients.length\r\n    }\r\n\r\n    this.setState({ pt: patients, count: count });\r\n  }\r\n\r\n  handleConf() {\r\n    this.setState({ visible: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ visible: false });\r\n  }\r\n\r\n  render() {\r\n    const { pt, count } = this.state;\r\n    console.log(count);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\" style={{ margin: \"5%\" }}>\r\n          <React.Fragment>\r\n            <h1>CPTII Billing</h1>\r\n            <hr></hr>\r\n          </React.Fragment>\r\n\r\n          <div\r\n            className=\"\"\r\n            style={{ marginTop: \"100px\", marginBottom: \"100px\", width: \"100%\" }}\r\n          >\r\n            <h3 className=\"font-weight-light text-center\">\r\n              CPTII codes are reporting codes which allow payors to ID where\r\n              members’ BPs stand within a controlled or uncontrolled range, any\r\n              given year. Gappy has automatically paired the appropriate CPTII\r\n              codes based on the systolic and diastolic readings for you\r\n            </h3>\r\n          </div>\r\n\r\n          <table\r\n            className=\"table table-responsive\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"25%\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n              <tr>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Task\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Patient Name\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Systolic\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  CPTII\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Diastolic\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  CPTII\r\n                </th>\r\n                <th\r\n                  className=\"font-weight-bold text-center\"\r\n                  style={{ width: \"20%\" }}\r\n                  onClick={() => this.handleAllCheck()}\r\n                >\r\n                  {count == pt.length ? (\r\n                    <i class=\"fa fa-check-square text-success fa-2x\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td rowspan={pt.length + 1} className=\"\">\r\n                  Please submit the corresponding CPTII Codes for the patients\r\n                  listed\r\n                </td>\r\n              </tr>\r\n              {pt.map((ea) => (\r\n                <tr key={ea.id}>\r\n                  <td>\r\n                    {ea.first_name} {ea.last_name}\r\n                  </td>\r\n                  <td style={{ borderLeft: \"1px solid black\" }}>\r\n                    {ea.systolic}\r\n                  </td>\r\n                  <td>{ea.syscpt}</td>\r\n                  <td style={{ borderLeft: \"1px solid black\" }}>\r\n                    {ea.diastolic}\r\n                  </td>\r\n                  <td>{ea.diacpt}</td>\r\n                  <td\r\n                    className=\"text-center\"\r\n                    onClick={() => this.handleOnCheck(ea)}\r\n                  >\r\n                    {ea.status == \"billed\" ? (\r\n                      <i class=\"fa fa-check-square text-success fa-2x\"></i>\r\n                    ) : (\r\n                      <i class=\"fa fa-check-square fa-2x\"></i>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: \"100px\" }}></div>\r\n\r\n          <React.Fragment className=\"mt-5 d-flex justify-content-center\">\r\n            <button\r\n              onClick={() => this.handleConf()}\r\n              className=\"btn p-3 btn-success btn-block\"\r\n              disabled={count >= 1 ? false : true}\r\n            >\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Complete to Unlock {count}/{pt.length} Points\r\n              </h3>\r\n            </button>\r\n          </React.Fragment>\r\n\r\n          <Modal\r\n            dialogClassName=\"sm\"\r\n            show={this.state.visible}\r\n            effect=\"fadeInUp\"\r\n          >\r\n            <button\r\n              onClick={() => this.handleClose()}\r\n              className=\"mt-2 btn ml-auto\"\r\n            >\r\n              <i class=\"fa fa-times fa-2x\"></i>\r\n            </button>\r\n\r\n            <OnComplete \r\n              count={`${count}/${pt.length}`}\r\n              pt={pt}\r\n            />\r\n\r\n          </Modal>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BillCPT;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport OnComplete from \"../../taskSubmission/onComplete\";\r\n\r\nclass MedicationCompliance extends Component {\r\n  state = {\r\n    option: \"\",\r\n    visible: false,\r\n    pt: [\r\n      {\r\n        id: \"1\",\r\n        first_name: \"AGNES\",\r\n        last_name: \"DOCK\",\r\n        systolic: \"128\",\r\n        syscpt: \"3077F\",\r\n        diastolic: \"64\",\r\n        diacpt: \"3099F\",\r\n        status: \"billed\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleOnChecked(text) {\r\n    if (this.state.option == text) this.setState({ option: \"\" });\r\n    else this.setState({ option: text });\r\n  }\r\n\r\n  handleConf() {\r\n    this.setState({ visible: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ visible: false });\r\n  }\r\n\r\n  render() {\r\n    const { option, visible, pt } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\" style={{ margin: \"5%\" }}>\r\n          <div style={{}}></div>\r\n          <React.Fragment>\r\n            <h1>Medication Compliance</h1>\r\n            <hr></hr>\r\n          </React.Fragment>\r\n\r\n          <div\r\n            className=\"\"\r\n            style={{ marginTop: \"100px\", marginBottom: \"100px\", width: \"100%\" }}\r\n          >\r\n            <h3 className=\"font-weight-light text-center\">\r\n              Mr. Doug is Hypertensive and has been prescribed MET. His last\r\n              fill was 8.4.19. Before we call him in to get a controlled reading\r\n              for the year, we need to get him compliant on his BP Medication\r\n            </h3>\r\n          </div>\r\n\r\n          <table\r\n            className=\"table table\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"25%\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n              <tr>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Task\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Make Call\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"40%\" }}>\r\n                  Record Outcome\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Select One\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td rowspan=\"8\" className=\"\">\r\n                  Call Mr. Doug and Understand reason for non-compliance with\r\n                  Medication\r\n                </td>\r\n                <td rowspan=\"8\">248.989.9876</td>\r\n                <td>Already Taking Mediation</td>\r\n                <td onClick={() => this.handleOnChecked(\"taking\")}>\r\n                  {option == \"taking\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Physician Prescribed BP Medication</td>\r\n                <td onClick={() => this.handleOnChecked(\"prescribed\")}>\r\n                  {option == \"prescribed\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Cost Barrier, Physician Prescribed Alternative BP Medication\r\n                </td>\r\n                <td onClick={() => this.handleOnChecked(\"costBarrier\")}>\r\n                  {option == \"costBarrier\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Access Issue Resolved</td>\r\n                <td onClick={() => this.handleOnChecked(\"accessResolved\")}>\r\n                  {option == \"accessResolved\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Education Requested and Scheduled</td>\r\n                <td onClick={() => this.handleOnChecked(\"education\")}>\r\n                  {option == \"education\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Adverse Effects Experienced, Physician Prescribed Alternative\r\n                  BP Medication\r\n                </td>\r\n                <td\r\n                  onClick={() => this.handleOnChecked(\"alternativePrescribed\")}\r\n                >\r\n                  {option == \"alternativePrescribed\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient did not Pick Up</td>\r\n                <td onClick={() => this.handleOnChecked(\"noAnswer\")}>\r\n                  {option == \"noAnswer\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Compliance not Met (0 Pts.)</td>\r\n                <td onClick={() => this.handleOnChecked(\"notMet\")}>\r\n                  {option == \"notMet\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: \"100px\" }}></div>\r\n\r\n          <React.Fragment className=\"mt-5 d-flex justify-content-center\">\r\n            <button\r\n              onClick={() => this.handleConf()}\r\n              className=\"btn p-3 btn-success btn-block\"\r\n              disabled={this.state.option ? false : true}\r\n            >\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Complete to Unlock 5 Points\r\n              </h3>\r\n            </button>\r\n          </React.Fragment>\r\n        </div>\r\n\r\n        <Modal dialogClassName=\"sm\" show={visible} effect=\"fadeInUp\">\r\n          <button\r\n            onClick={() => this.handleClose()}\r\n            className=\"mt-2 btn ml-auto\"\r\n          >\r\n            <i class=\"fa fa-times fa-2x\"></i>\r\n          </button>\r\n\r\n          <OnComplete count={5} pt={pt} />\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicationCompliance;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport OnComplete from \"../../taskSubmission/onComplete\";\r\n\r\nclass UpcomingAppt extends Component {\r\n  state = {\r\n    option: \"\",\r\n    visible: false,\r\n    pt: [\r\n      {\r\n        id: \"1\",\r\n        first_name: \"AGNES\",\r\n        last_name: \"DOCK\",\r\n        systolic: \"128\",\r\n        syscpt: \"3077F\",\r\n        diastolic: \"64\",\r\n        diacpt: \"3099F\",\r\n        status: \"billed\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleOnChecked(text) {\r\n    if (this.state.option == text) this.setState({ option: \"\" });\r\n    else this.setState({ option: text });\r\n  }\r\n\r\n  render() {\r\n    const { option, visible, pt } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\" style={{ margin: \"5%\" }}>\r\n          <div style={{}}></div>\r\n          <React.Fragment>\r\n            <h1>Upcoming Appointment</h1>\r\n            <hr></hr>\r\n          </React.Fragment>\r\n\r\n          <div\r\n            className=\"\"\r\n            style={{ marginTop: \"100px\", marginBottom: \"100px\", width: \"100%\" }}\r\n          >\r\n            <h3 className=\"font-weight-light text-center\">\r\n              Mrs. Jay is a hypertensive. The last time she came in her BP\r\n              reading was xxx. In order to ensure a reading closer to control,\r\n              appropriate measures need to be taken prior to the appointment.\r\n              Please remind Mrs. Jay to take her BP medications as prescribed,\r\n              and not drink any coffee / caffeine prior to the BP reading.\r\n              Please try to identify any barriers Mrs. Jay will have in adhering\r\n              to these instructions.\r\n            </h3>\r\n            <h3 className=\"font-weight-light text-center mt-5\">\r\n              Please also ensure that the Medical Assistant team taking the BP\r\n              reads is aware of all protocols that need to be taken including,\r\n              don’t cross legs during read, arm should be at heart level,\r\n              sitting up-right etc.. And taking multiple reads to ensure\r\n              accuracy\r\n            </h3>\r\n          </div>\r\n\r\n          <table\r\n            className=\"table table\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"25%\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n              <tr>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Task\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Make Call\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"40%\" }}>\r\n                  Record Outcome\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Select One\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td rowspan=\"4\" className=\"\">\r\n                  Call Mrs. Jay to review previous BP and what needs to be done\r\n                  before upcoming visit\r\n                </td>\r\n                <td rowspan=\"4\">xxx.xxx.xxxx</td>\r\n                <td>Patient education complete, reviewed all talking points</td>\r\n                <td onClick={() => this.handleOnChecked(\"completed\")}>\r\n                  {option == \"completed\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient did not Pick Up</td>\r\n                <td onClick={() => this.handleOnChecked(\"noAnswer\")}>\r\n                  {option == \"noAnswer\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"text-danger\">\r\n                  Patient not interested in education (0 points)\r\n                </td>\r\n                <td onClick={() => this.handleOnChecked(\"notInterested\")}>\r\n                  {option == \"notInterested\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Deceased / Moved</td>\r\n                <td onClick={() => this.handleOnChecked(\"other\")}>\r\n                  {option == \"other\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: \"100px\" }}></div>\r\n\r\n          <React.Fragment className=\"mt-5 d-flex justify-content-center\">\r\n            <button\r\n              onClick={() => this.setState({ visible: true })}\r\n              className=\"btn p-3 btn-success btn-block\"\r\n              disabled={this.state.option ? false : true}\r\n            >\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Complete to Unlock 5 Points\r\n              </h3>\r\n            </button>\r\n          </React.Fragment>\r\n        </div>\r\n\r\n        <Modal dialogClassName=\"sm\" show={visible} effect=\"fadeInUp\">\r\n          <button\r\n            onClick={() => this.setState({ visible: false })}\r\n            className=\"mt-2 btn ml-auto\"\r\n          >\r\n            <i class=\"fa fa-times fa-2x\"></i>\r\n          </button>\r\n\r\n          <OnComplete count={5} pt={pt} />\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpcomingAppt;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n// Services\r\nimport { getPatient, finishTask } from \"../../../services/server\";\r\n\r\n// Component Imports\r\nimport OnComplete from '../../taskSubmission/onComplete';\r\n\r\nclass ScheduleAppt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      checked: \"\",\r\n      patient: {\r\n        firstName: \"Zaid\",\r\n        LastName: \"Uddin\",\r\n        phone: \"123432543254\",\r\n      },\r\n      value: \"\",\r\n      visible: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.setState({ patient: getPatient(this.props.location.pathname) });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSubmit() {\r\n    // finishTask(this.state.checked, this.state.patient, this.state.value);\r\n    this.setState({ award: true });\r\n  }\r\n\r\n  render() {\r\n    const { patient, visible } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\" style={{ margin: \"5%\" }}>\r\n          <React.Fragment>\r\n            <h1>Appointment Scheduling</h1>\r\n            <hr></hr>\r\n          </React.Fragment>\r\n\r\n          <div\r\n            className=\"\"\r\n            style={{ marginTop: \"100px\", marginBottom: \"100px\", width: \"100%\" }}\r\n          >\r\n            <h3 className=\"font-weight-light text-center\">...</h3>\r\n          </div>\r\n          <table\r\n            className=\"table table\"\r\n            style={{\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n              <tr>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Task\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Make Call\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"40%\" }}>\r\n                  Record Outcome\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Select One\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td rowspan=\"4\" className=\"\">\r\n                  Call {patient.firstName} {patient.lastName} in for an\r\n                  appointment to obtain her BP\r\n                </td>\r\n                <td rowspan=\"4\">{patient.phone}</td>\r\n                <td>Appointment Scheduled</td>\r\n                <td onClick={() => this.setState({ checked: \"scheduled\" })}>\r\n                  {this.state.checked === \"scheduled\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient did not Pick Up</td>\r\n                <td onClick={() => this.setState({ checked: \"noAnswer\" })}>\r\n                  {this.state.checked === \"noAnswer\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"text-danger\">\r\n                  Patient not interested in scheduling appointment (0 pts.)\r\n                </td>\r\n                <td onClick={() => this.setState({ checked: \"notInterested\" })}>\r\n                  {this.state.checked === \"notInterested\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Deceased / Moved</td>\r\n                <td onClick={() => this.setState({ checked: \"other\" })}>\r\n                  {this.state.checked === \"other\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: \"100px\" }}></div>\r\n\r\n          <React.Fragment className=\"mt-5 d-flex justify-content-center\">\r\n            <button\r\n              onClick={() => this.setState({ visible: true })}\r\n              className=\"btn p-3 btn-success btn-block\"\r\n              disabled={!this.state.checked}\r\n            >\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Complete to Unlock 15 Points\r\n              </h3>\r\n            </button>\r\n          </React.Fragment>\r\n\r\n          <Modal dialogClassName=\"sm\" show={visible} effect=\"fadeInUp\">\r\n            <button\r\n              onClick={() => this.setState({ visible: false })}\r\n              className=\"mt-2 btn ml-auto\"\r\n            >\r\n              <i class=\"fa fa-times fa-2x\"></i>\r\n            </button>\r\n\r\n            <OnComplete count={5} pt={patient} />\r\n          </Modal>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduleAppt;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Verify extends Component {\r\n  state = {\r\n    patient: {\r\n      firstName: \"Zaid\",\r\n      lastName: \"Uddin\",\r\n      dob: \"1/4/1999\",\r\n      physicianName: \"Chika Fujiwara\",\r\n    },\r\n    found: false,\r\n    name: false,\r\n    dob: false,\r\n    phys: false,\r\n  };\r\n  render() {\r\n    const { patient } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\" style={{ margin: \"5%\" }}>\r\n          <React.Fragment>\r\n            <h1>Patient Verification</h1>\r\n            <hr></hr>\r\n          </React.Fragment>\r\n\r\n          <div\r\n            className=\"\"\r\n            style={{ marginTop: \"100px\", marginBottom: \"100px\", width: \"100%\" }}\r\n          >\r\n            <h3 className=\"font-weight-light text-center\">\r\n              Payor records are indicating that {patient.firstName} {patient.lastName} is affiliated with\r\n              doctor {patient.physicianName} however, no EMR\r\n              records match {patient.firstName} {patient.lastName} and/or DOB. Please verify spelling in\r\n              EMR and type patient name and/or dob in as seen in EMR\r\n            </h3>\r\n          </div>\r\n\r\n          <table\r\n            className=\"table table\"\r\n            style={{\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n              <tr>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Task\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"35%\" }}>\r\n                  Patient ID to Verify\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Same as Payor\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"30%\" }}>\r\n                  Practice Findings\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td rowspan=\"4\" className=\"\">\r\n                  Patient Verification\r\n                </td>\r\n                <td>Affiliated with Practice</td>\r\n                <td className=\"d-flex\">\r\n                  <button className=\"btn btn-outline-success mr-3\">Yes</button>\r\n                  <button className=\"btn btn-outline-danger\">No</button>\r\n                </td>\r\n                <td>N/A</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  {patient.firstName} {patient.lastName}\r\n                </td>\r\n                <td\r\n                  onClick={() => {\r\n                    let name = this.state.name;\r\n                    this.setState({ name: !name });\r\n                  }}\r\n                >\r\n                  {this.state.name === true ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <textarea></textarea>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>{patient.dob}</td>\r\n                <td\r\n                  onClick={() => {\r\n                    let dob = this.state.dob;\r\n                    this.setState({ dob: !dob });\r\n                  }}\r\n                >\r\n                  {this.state.dob === true ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <textarea></textarea>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>{patient.physicianName}</td>\r\n                <td\r\n                  onClick={() => {\r\n                    let phys = this.state.phys;\r\n                    this.setState({ phys: !phys });\r\n                  }}\r\n                >\r\n                  {this.state.phys === true ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <textarea></textarea>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: \"100px\" }}></div>\r\n\r\n          <React.Fragment className=\"mt-5 d-flex justify-content-center\">\r\n            <button\r\n              onClick={() => this.setState({ visible: true })}\r\n              className=\"btn p-3 btn-success btn-block\"\r\n              disabled={!this.state.checked}\r\n            >\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Complete to Unlock 15 Points\r\n              </h3>\r\n            </button>\r\n          </React.Fragment>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Verify;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport OnComplete from '../../taskSubmission/onComplete';\r\n\r\nclass ComplianceAppt extends Component {\r\n  state = {\r\n    checked: \"\",\r\n    patient: {\r\n      firstName: \"Zaid\",\r\n      LastName: \"Uddin\",\r\n      phone: \"123432543254\",\r\n    },\r\n    visible: false,\r\n  };\r\n  render() {\r\n\r\n    const { patient, visible } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\" style={{ margin: \"5%\" }}>\r\n          <React.Fragment>\r\n            <h1>BP Compliance Appointment Scheduling</h1>\r\n            <hr></hr>\r\n          </React.Fragment>\r\n\r\n          <div\r\n            className=\"\"\r\n            style={{ marginTop: \"100px\", marginBottom: \"100px\", width: \"100%\" }}\r\n          >\r\n            <h3 className=\"font-weight-light text-center\">...</h3>\r\n          </div>\r\n          <table\r\n            className=\"table table\"\r\n            style={{\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <thead style={{ borderBottom: \"1px solid lightGrey\" }}>\r\n              <tr>\r\n                <th className=\"font-weight-bold\" style={{ width: \"20%\" }}>\r\n                  Task\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Make Call\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"40%\" }}>\r\n                  Record Outcome\r\n                </th>\r\n                <th className=\"font-weight-bold\" style={{ width: \"10%\" }}>\r\n                  Select One\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td rowspan=\"5\" className=\"\">\r\n                  Call {patient.firstName} {patient.lastName} in for an\r\n                  appointment to reach compliance\r\n                </td>\r\n                <td rowspan=\"5\">{patient.phone}</td>\r\n                <td>Appointment Scheduled</td>\r\n                <td onClick={() => this.setState({ checked: \"scheduled\" })}>\r\n                  {this.state.checked === \"scheduled\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient will Call Back to Confirm Appt.</td>\r\n                <td onClick={() => this.setState({ checked: \"noAnswer\" })}>\r\n                  {this.state.checked === \"noAnswer\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient did not Pick Up</td>\r\n                <td onClick={() => this.setState({ checked: \"noAnswer\" })}>\r\n                  {this.state.checked === \"noAnswer\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"text-danger\">\r\n                  Patient not interested in scheduling appointment (0 pts.)\r\n                </td>\r\n                <td onClick={() => this.setState({ checked: \"notInterested\" })}>\r\n                  {this.state.checked === \"notInterested\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Patient Deceased / Moved</td>\r\n                <td onClick={() => this.setState({ checked: \"other\" })}>\r\n                  {this.state.checked === \"other\" ? (\r\n                    <i class=\"fa fa-check-square fa-2x text-success\"></i>\r\n                  ) : (\r\n                    <i class=\"fa fa-check-square fa-2x\"></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div style={{ marginTop: \"100px\" }}></div>\r\n\r\n          <React.Fragment className=\"mt-5 d-flex justify-content-center\">\r\n            <button\r\n              onClick={() => this.setState({ visible: true })}\r\n              className=\"btn p-3 btn-success btn-block\"\r\n              disabled={!this.state.checked}\r\n            >\r\n              <h3 className=\"font-weight-bold text-center\">\r\n                Complete to Unlock 15 Points\r\n              </h3>\r\n            </button>\r\n          </React.Fragment>\r\n\r\n          <Modal dialogClassName=\"sm\" show={visible} effect=\"fadeInUp\">\r\n            <button\r\n              onClick={() => this.setState({ visible: false })}\r\n              className=\"mt-2 btn ml-auto\"\r\n            >\r\n              <i class=\"fa fa-times fa-2x\"></i>\r\n            </button>\r\n\r\n            <OnComplete count={5} pt={patient} />\r\n          </Modal>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComplianceAppt;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport fire from './fire';\r\n\r\nimport Home from './components/home';\r\nimport NavBar from './components/navbar';\r\nimport Practices from './components/practices';\r\nimport Practice from './components/practice';\r\nimport Gaps from './components/gaps';\r\n\r\nimport NotFound from './components/common/not-found';\r\nimport Test from './components/test';\r\n\r\nimport './App.css';\r\nimport Providers from './components/providers';\r\nimport Provider from './components/provider';\r\nimport CBP from './components/tmpCBP';\r\nimport Members from './components/members';\r\nimport Login from './components/login';\r\n\r\n// GAPPY TV LINKS\r\nimport Dash from './components/gappytv/components/responsive/dash';\r\nimport UserPage from './components/gappytv/components/user/userPage';\r\nimport BillCPT from './components/gappytv/components/cbp/custom/billCodes';\r\nimport MedicationCompliance from './components/gappytv/components/cbp/custom/medCompliance';\r\nimport UpcomingAppt from './components/gappytv/components/cbp/custom/upcomingAppt';\r\nimport ScheduleAppt from './components/gappytv/components/cbp/custom/scheduleAppt';\r\nimport Verify from './components/gappytv/components/cbp/custom/verify';\r\nimport ComplianceAppt from './components/gappytv/components/cbp/custom/complianceAppt';\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n  \r\n  const clearInputs = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setEmailError(\"\");\r\n    setPasswordError(\"\");\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    clearErrors();\r\n    fire\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    fire.auth().signOut().then(function() {\r\n      console.log('Signed Out');\r\n    }, function(error) {\r\n      console.error('Sign Out Error', error);\r\n    });\r\n  };\r\n\r\n  const authListener = () => {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        clearInputs();\r\n        setUser(user);\r\n      } else {\r\n        setUser(\"\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    authListener();\r\n  }, []);\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {user ? (\r\n        <div>\r\n          <NavBar \r\n            handleLogout={handleLogout}\r\n          />\r\n          <main className=\"container\">\r\n            <Switch>\r\n              <Route path=\"/home\" component={ Home }></Route>\r\n              <Route path=\"/members\" component={ Members }></Route>\r\n              <Route path=\"/not-found\" component={ NotFound }></Route>\r\n              <Route path=\"/practices\" exact component={ Practices } />\r\n              <Route path=\"/practices/:id\" component={ Practice }/>\r\n              <Route path=\"/gaps\" component={ Gaps }></Route>\r\n              <Route path=\"/providers\" exact component={ Providers }></Route>\r\n              <Route path=\"/providers/:id\" component={ Provider }></Route>\r\n\r\n              <Route path=\"/cbp/:id\" component={ CBP }></Route>\r\n              <Route path=\"/cbp\" component={ CBP }></Route>\r\n\r\n              <Route path=\"/test\" component={ Test }></Route>\r\n\r\n              {/* START GAPPY TV TEMPORARY LINKS DELETE */}\r\n\r\n              <Route path=\"/tv/dash\" component={ Dash }></Route>\r\n              <Route path=\"/tv/profile\" component={ UserPage }></Route>\r\n\r\n              <Route path=\"/tv/cbp/schedule\" component={ScheduleAppt}></Route>\r\n              <Route path=\"/tv/cbp/billing\" component={BillCPT}></Route>\r\n              <Route path=\"/tv/cbp/compliance\" component={MedicationCompliance}></Route>\r\n              <Route path=\"/tv/cbp/upcoming\" component={UpcomingAppt}></Route>\r\n              <Route path=\"/tv/cbp/verify\" component={Verify}></Route>\r\n              <Route path=\"/tv/cbp/complianceappt\" component={ComplianceAppt}></Route>\r\n\r\n              {/* END GAPPY TV TEMPORARY LINKS DELETE */}\r\n\r\n              <Redirect from=\"/\" exact to=\"/home\" />\r\n              <Redirect to=\"/not-found\" />\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      ) : (\r\n        <Login\r\n          email={email}\r\n          setEmail={setEmail}\r\n          password={password}\r\n          setPassword={setPassword}\r\n          handleLogin={handleLogin}\r\n          hasAccount={hasAccount}\r\n          setHasAccount={setHasAccount}\r\n          emailError={emailError}\r\n          passwordError={passwordError} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}