{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"E:/Gappy/Back-End/Payor-View/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"E:/Gappy/Back-End/Payor-View/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"E:/Gappy/Back-End/Payor-View/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"E:/Gappy/Back-End/Payor-View/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{CardTitle}from'reactstrap';import{Link}from'react-router-dom';var MeasureBody=/*#__PURE__*/function(_Component){_inherits(MeasureBody,_Component);var _super=_createSuper(MeasureBody);function MeasureBody(){var _this;_classCallCheck(this,MeasureBody);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isOpen:true};_this.onToggle=function(){var bool=_this.state.isOpen;if(bool==true)bool=false;else bool=true;_this.setState({isOpen:bool});};return _this;}_createClass(MeasureBody,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,title=_this$props.title,badgeTitle=_this$props.badgeTitle,badgeColor=_this$props.badgeColor,controlled=_this$props.controlled,value=_this$props.value,valueTitle=_this$props.valueTitle,link=_this$props.link,toggle=_this$props.toggle;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Link,{underline:\"none\",to:link,style:{textDecoration:'none'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(CardTitle,{tag:\"h6\",className:\" text-dark\",children:title}),/*#__PURE__*/_jsx(\"span\",{className:\"badge badge-pill align-self-start ml-auto text-white\",style:{\"background\":badgeColor},children:badgeTitle})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center my-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-success\",children:\"\".concat(this.state.isOpen==true?value:controlled)}),/*#__PURE__*/_jsx(\"span\",{className:\"text-primary\",children:valueTitle})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){return _this2.onToggle();},children:/*#__PURE__*/_jsx(\"i\",{className:\"\".concat(this.state.isOpen==true?\"fa text-dark fa-toggle-off\":\"fa text-dark fa-toggle-on\")})}),/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(this.state.isOpen==true?\"ml-auto text-danger\":\"ml-auto text-success\"),children:\"\".concat(this.state.isOpen==true?\"Open\":\"Closed\")})]})]});}}]);return MeasureBody;}(Component);export default MeasureBody;","map":{"version":3,"sources":["E:/Gappy/Back-End/Payor-View/src/components/common/measureBody.jsx"],"names":["React","Component","CardTitle","Link","MeasureBody","state","isOpen","onToggle","bool","setState","props","title","badgeTitle","badgeColor","controlled","value","valueTitle","link","toggle","textDecoration"],"mappings":"ogBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,YAA1B,CACA,OAASC,IAAT,KAAqB,kBAArB,C,GAEMC,CAAAA,W,+UACJC,K,CAAQ,CACNC,MAAM,CAAE,IADF,C,OAIRC,Q,CAAW,UAAM,CACf,GAAIC,CAAAA,IAAI,CAAG,MAAKH,KAAL,CAAWC,MAAtB,CAEA,GAAGE,IAAI,EAAI,IAAX,CACEA,IAAI,CAAG,KAAP,CADF,IAGEA,CAAAA,IAAI,CAAG,IAAP,CAEF,MAAKC,QAAL,CAAc,CAACH,MAAM,CAAEE,IAAT,CAAd,EACD,C,8EAEQ,iCAE8E,KAAKE,KAFnF,CAEAC,KAFA,aAEAA,KAFA,CAEOC,UAFP,aAEOA,UAFP,CAEmBC,UAFnB,aAEmBA,UAFnB,CAE+BC,UAF/B,aAE+BA,UAF/B,CAE2CC,KAF3C,aAE2CA,KAF3C,CAEkDC,UAFlD,aAEkDA,UAFlD,CAE8DC,IAF9D,aAE8DA,IAF9D,CAEoEC,MAFpE,aAEoEA,MAFpE,CAIP,mBACE,oCACE,MAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,CAAuB,EAAE,CAAED,IAA3B,CAAiC,KAAK,CAAE,CAAEE,cAAc,CAAE,MAAlB,CAAxC,wBACA,aAAK,SAAS,CAAC,QAAf,wBACE,KAAC,SAAD,EAAW,GAAG,CAAC,IAAf,CAAoB,SAAS,CAAC,YAA9B,UAA4CR,KAA5C,EADF,cASE,aAAM,SAAS,CAAC,sDAAhB,CAAuE,KAAK,CAAE,CAAC,aAAcE,UAAf,CAA9E,UAA2GD,UAA3G,EATF,GADA,cAYA,aAAK,SAAS,CAAC,kBAAf,wBACA,WAAI,SAAS,CAAC,cAAd,oBAAiC,KAAKP,KAAL,CAAWC,MAAX,EAAqB,IAArB,CAA6BS,KAA7B,CAAuCD,UAAxE,GADA,cAEE,aAAM,SAAS,CAAC,cAAhB,UAAgCE,UAAhC,EAFF,GAZA,GADF,cAkBE,aAAK,SAAS,CAAC,QAAf,wBACE,aAAM,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACT,QAAL,EAAN,EAAf,uBAAsC,UAAG,SAAS,WAAK,KAAKF,KAAL,CAAWC,MAAX,EAAqB,IAArB,CACnD,4BADmD,CAGnD,2BAH8C,CAAZ,EAAtC,EADF,cAME,aAAM,SAAS,WAAK,KAAKD,KAAL,CAAWC,MAAX,EAAqB,IAArB,CAChB,qBADgB,CAGhB,sBAHW,CAAf,oBAKM,KAAKD,KAAL,CAAWC,MAAX,EAAqB,IAArB,CACF,MADE,CAGF,QARJ,GANF,GAlBF,GADF,CAuCD,C,yBA3DuBL,S,EA8D1B,cAAeG,CAAAA,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { CardTitle } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MeasureBody extends Component {\r\n  state = {\r\n    isOpen: true\r\n  };\r\n\r\n  onToggle = () => {\r\n    let bool = this.state.isOpen;\r\n\r\n    if(bool == true)\r\n      bool = false;\r\n    else\r\n      bool = true;\r\n\r\n    this.setState({isOpen: bool});\r\n  }\r\n\r\n  render() {\r\n\r\n    const {title, badgeTitle, badgeColor, controlled, value, valueTitle, link, toggle} = this.props;\r\n \r\n    return (\r\n      <div>\r\n        <Link underline=\"none\" to={link} style={{ textDecoration: 'none' }}>\r\n        <div className=\"d-flex\">\r\n          <CardTitle tag=\"h6\" className=\" text-dark\">{title}</CardTitle>\r\n          {/* <Badge\r\n            pill\r\n            color={`${badgeColor}`}\r\n            className=\"align-self-start ml-auto\"\r\n          >\r\n            {badgeTitle}\r\n          </Badge> */}\r\n          <span className=\"badge badge-pill align-self-start ml-auto text-white\" style={{\"background\": badgeColor}}>{badgeTitle}</span>\r\n        </div>\r\n        <div className=\"text-center my-4\">\r\n        <h2 className=\"text-success\">{`${this.state.isOpen == true ? (value) : (controlled)}`}</h2>\r\n          <span className=\"text-primary\">{valueTitle}</span>\r\n        </div>\r\n        </Link>\r\n        <div className=\"d-flex\">\r\n          <span onClick={() => this.onToggle()}><i className={`${this.state.isOpen == true ? (\r\n              \"fa text-dark fa-toggle-off\"\r\n            ) : (\r\n              \"fa text-dark fa-toggle-on\"\r\n            )}`}></i></span>\r\n          <span className={`${this.state.isOpen == true ? (\r\n              \"ml-auto text-danger\"\r\n            ) : (\r\n              \"ml-auto text-success\"\r\n            )}`}>\r\n            {`${this.state.isOpen == true ? (\r\n              \"Open\"\r\n            ) : (\r\n              \"Closed\"\r\n            )}`}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default MeasureBody;"]},"metadata":{},"sourceType":"module"}