{"ast":null,"code":"var practices = require('./practices.json');\n\nvar providers = require('./providers.json');\n\nvar cbp = require('./cbp.json');\n\nexport function getPractices() {\n  return practices;\n}\nexport function getPatients() {\n  return cbp;\n}\nexport function getProviders() {\n  return providers;\n}\nexport function getProvider(id) {\n  let data = providers;\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].id === id) return providers[i];\n  }\n\n  return providers;\n}\nexport function getProviderPatients(name) {\n  let data = cbp;\n  let tempObj = [];\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].physicianName === name) {\n      tempObj.push(data[i]);\n    }\n  }\n\n  return tempObj;\n}\nexport function getPractice(id) {\n  let data = practices;\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].id === id) return practices[i];\n  }\n\n  return practices[1];\n} //Return All Providers for Respective Practice\n\nexport function getPracticeProviders(id) {\n  let data = providers;\n  let tempObj = [];\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].practiceID === id) {\n      tempObj.push(data[i]);\n    }\n  }\n\n  return tempObj;\n} // Which bucket\n\nexport function getPatientsInBucket(data, bucket) {\n  if (data.length == 0) {\n    return [];\n  }\n\n  ;\n  console.log(data);\n  let patients = [];\n\n  for (var i = 0; i < data.length; i++) {\n    for (var j = 0; j < data[i].bucket.length; j++) {\n      if (data[i].bucket[j] == bucket) {\n        patients.push(data[i]);\n        break;\n      }\n    }\n  }\n\n  console.log(patients);\n  return patients;\n}","map":{"version":3,"sources":["E:/Gappy/Back-End/Payor-View/src/components/services/demo/services.js"],"names":["practices","require","providers","cbp","getPractices","getPatients","getProviders","getProvider","id","data","i","length","getProviderPatients","name","tempObj","physicianName","push","getPractice","getPracticeProviders","practiceID","getPatientsInBucket","bucket","console","log","patients","j"],"mappings":"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","sourcesContent":["var practices = require('./practices.json');\nvar providers = require('./providers.json');\nvar cbp = require('./cbp.json');\n\nexport function getPractices() {\n    return practices;\n}\n\nexport function getPatients() {\n    return cbp;\n}\n\nexport function getProviders() {\n    return providers;\n}\n\nexport function getProvider(id) {\n    let data = providers;\n     \n    for (let i = 0; i < data.length; i++) {\n        if (data[i].id === id)\n            return providers[i];\n    }\n\n    return providers;\n}\n\nexport function getProviderPatients(name) {\n    let data = cbp;\n    let tempObj = [];\n\nfor (let i = 0; i < data.length; i++) {\n        if (data[i].physicianName === name) {\n            tempObj.push(data[i]);\n        }\n    }\n\n    return tempObj;\n}\n\nexport function getPractice(id) {\n    let data = practices;\n     \n    for (let i = 0; i < data.length; i++) {\n        if (data[i].id === id)\n            return practices[i];\n    }\n\n    return practices[1];\n}\n\n//Return All Providers for Respective Practice\nexport function getPracticeProviders(id) {\n    let data = providers;\n    let tempObj = [];\n\n    for (let i = 0; i < data.length; i++) {\n        if (data[i].practiceID === id) {\n            tempObj.push(data[i]);\n        }\n    }\n\n    return tempObj;\n}\n\n// Which bucket\nexport function getPatientsInBucket(data, bucket) {\n    \n    if (data.length == 0) { return [] };\n    \n    console.log(data);\n    let patients = [];\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].bucket.length; j++) {\n            if (data[i].bucket[j] == bucket) {\n                patients.push(data[i]);\n                break;\n            }\n        }\n    }\n\n    console.log(patients);\n    return patients;\n}"]},"metadata":{},"sourceType":"module"}