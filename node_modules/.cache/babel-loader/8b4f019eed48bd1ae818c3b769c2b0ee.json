{"ast":null,"code":"var patients=require(\"./json/patient.json\");var taskLibrary=require(\"./json/taskReference.json\");var billingcpt=require(\"./json/billingCodes.json\");// Exports Weekly Tasks\n// Returns JSON Array of Patient Objects\nexport function getWeekly(){var tasks=patients.weekly;var reference=taskLibrary;var patientList=[];for(var i=0;i<tasks.length;i++){var tmp=tasks[i]._id;var ref=reference[tmp];var outcome=ref.outcomes;var description=ref.description.replace(/PATIENT/g,tasks[i].firstName+\" \"+tasks[i].lastName);var scheduledTop=outcome.scheduledTop.replace(/PATIENT/g,tasks[i].firstName+\" \"+tasks[i].lastName);var scheduledBottom=outcome.scheduledBottom.replace(/PATIENT/g,tasks[i].firstName+\" \"+tasks[i].lastName);var noAnswerTop=outcome.noAnswerTop.replace(/PATIENT/g,tasks[i].firstName+\" \"+tasks[i].lastName);var noAnswerBottom=outcome.noAnswerBottom.replace(/PATIENT/g,tasks[i].firstName+\" \"+tasks[i].lastName);var pt={_id:tasks[i]._id,patientID:tasks[i].patientID,firstName:tasks[i].firstName,lastName:tasks[i].lastName,phone:tasks[i].phone,status:tasks[i].status,descriptor:tasks[i].descriptor,task:ref.task,reason:ref.reason,description:description,scheduledTop:scheduledTop,scheduledBottom:scheduledBottom,noAnswerTop:noAnswerTop,noAnswerBottom:noAnswerBottom};patientList.push(pt);}console.log(patientList);return patientList;}// Gets Single Patient Data\n// Return JSON Object\nexport function getPatient(path){var tasks=patients.weekly;var reference=taskLibrary;var pathname=path.split(\"/\");var getID=pathname[3];for(var i=0;i<tasks.length;i++){if(tasks[i].patientID==getID){var tmp=tasks[i]._id;var ref=reference[tmp];var outcome=ref.outcomes;var description=ref.description.replace(/PATIENT/g,tasks[i].firstName+\" \"+tasks[i].lastName);var scheduledTop=outcome.scheduledTop.replace(/PATIENT/g,tasks[i].firstName+\" \"+tasks[i].lastName);var scheduledBottom=outcome.scheduledBottom.replace(/PATIENT/g,tasks[i].firstName+\" \"+tasks[i].lastName);var noAnswerTop=outcome.noAnswerTop.replace(/PATIENT/g,tasks[i].firstName+\" \"+tasks[i].lastName);var noAnswerBottom=outcome.noAnswerBottom.replace(/PATIENT/g,tasks[i].firstName+\" \"+tasks[i].lastName);var pt={_id:tasks[i]._id,patientID:tasks[i].patientID,firstName:tasks[i].firstName,lastName:tasks[i].lastName,phone:tasks[i].phone,status:tasks[i].status,descriptor:tasks[i].descriptor,task:ref.task,reason:ref.reason,description:description,scheduledTop:scheduledTop,scheduledBottom:scheduledBottom,noAnswerTop:noAnswerTop,noAnswerBottom:noAnswerBottom};return pt;}}return null;}export function getMBC(){var tasks=patients.monthly;var ref=taskLibrary;var patientList={meta:{},patients:[]};for(var i=0;i<tasks.length;i++){if(tasks[i]._id==\"mbc\"){patientList.meta=ref.mbc;patientList.patients.push(tasks[i]);}}console.log(patientList);return patientList;}export function getBillCPT(){return billingcpt;}export function serverPOST(obj){}","map":{"version":3,"sources":["E:/Gappy/Back-End/Payor-View/src/components/gappytv/services/server.js"],"names":["patients","require","taskLibrary","billingcpt","getWeekly","tasks","weekly","reference","patientList","i","length","tmp","_id","ref","outcome","outcomes","description","replace","firstName","lastName","scheduledTop","scheduledBottom","noAnswerTop","noAnswerBottom","pt","patientID","phone","status","descriptor","task","reason","push","console","log","getPatient","path","pathname","split","getID","getMBC","monthly","meta","mbc","getBillCPT","serverPOST","obj"],"mappings":"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","sourcesContent":["var patients = require(\"./json/patient.json\");\r\nvar taskLibrary = require(\"./json/taskReference.json\");\r\nvar billingcpt = require(\"./json/billingCodes.json\");\r\n\r\n// Exports Weekly Tasks\r\n// Returns JSON Array of Patient Objects\r\nexport function getWeekly() {\r\n  let tasks = patients.weekly;\r\n  let reference = taskLibrary;\r\n  let patientList = [];\r\n\r\n  for (var i = 0; i < tasks.length; i++) {\r\n    let tmp = tasks[i]._id;\r\n\r\n    let ref = reference[tmp];\r\n\r\n    let outcome = ref.outcomes;\r\n\r\n    let description = ref.description.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let scheduledTop = outcome.scheduledTop.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let scheduledBottom = outcome.scheduledBottom.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let noAnswerTop = outcome.noAnswerTop.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n    let noAnswerBottom = outcome.noAnswerBottom.replace(\r\n      /PATIENT/g,\r\n      tasks[i].firstName + \" \" + tasks[i].lastName\r\n    );\r\n\r\n    let pt = {\r\n      _id: tasks[i]._id,\r\n      patientID: tasks[i].patientID,\r\n      firstName: tasks[i].firstName,\r\n      lastName: tasks[i].lastName,\r\n      phone: tasks[i].phone,\r\n      status: tasks[i].status,\r\n      descriptor: tasks[i].descriptor,\r\n      task: ref.task,\r\n      reason: ref.reason,\r\n      description: description,\r\n      scheduledTop: scheduledTop,\r\n      scheduledBottom: scheduledBottom,\r\n      noAnswerTop: noAnswerTop,\r\n      noAnswerBottom: noAnswerBottom,\r\n    };\r\n\r\n    patientList.push(pt);\r\n  }\r\n\r\n  console.log(patientList);\r\n\r\n  return patientList;\r\n}\r\n\r\n// Gets Single Patient Data\r\n// Return JSON Object\r\nexport function getPatient(path) {\r\n  let tasks = patients.weekly;\r\n  let reference = taskLibrary;\r\n\r\n  let pathname = path.split(\"/\");\r\n  let getID = pathname[3];\r\n\r\n  for (var i = 0; i < tasks.length; i++) {\r\n    if (tasks[i].patientID == getID) {\r\n      let tmp = tasks[i]._id;\r\n\r\n      let ref = reference[tmp];\r\n\r\n      let outcome = ref.outcomes;\r\n\r\n      let description = ref.description.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let scheduledTop = outcome.scheduledTop.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let scheduledBottom = outcome.scheduledBottom.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let noAnswerTop = outcome.noAnswerTop.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n      let noAnswerBottom = outcome.noAnswerBottom.replace(\r\n        /PATIENT/g,\r\n        tasks[i].firstName + \" \" + tasks[i].lastName\r\n      );\r\n\r\n      let pt = {\r\n        _id: tasks[i]._id,\r\n        patientID: tasks[i].patientID,\r\n        firstName: tasks[i].firstName,\r\n        lastName: tasks[i].lastName,\r\n        phone: tasks[i].phone,\r\n        status: tasks[i].status,\r\n        descriptor: tasks[i].descriptor,\r\n        task: ref.task,\r\n        reason: ref.reason,\r\n        description: description,\r\n        scheduledTop: scheduledTop,\r\n        scheduledBottom: scheduledBottom,\r\n        noAnswerTop: noAnswerTop,\r\n        noAnswerBottom: noAnswerBottom,\r\n      };\r\n\r\n      return pt;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function getMBC() {\r\n   let tasks = patients.monthly;\r\n   let ref = taskLibrary;\r\n   let patientList = {\r\n      meta: {},\r\n      patients: []\r\n   };\r\n\r\n   for (var i = 0; i < tasks.length; i++) {\r\n      if (tasks[i]._id == \"mbc\") {\r\n         patientList.meta = ref.mbc;\r\n         patientList.patients.push(tasks[i]);\r\n      }\r\n   }\r\n\r\n   console.log(patientList);\r\n\r\n   return patientList;\r\n}\r\n\r\nexport function getBillCPT() {\r\n   return billingcpt;\r\n}\r\n\r\nexport function serverPOST(obj){\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}