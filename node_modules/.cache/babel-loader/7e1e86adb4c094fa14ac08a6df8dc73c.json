{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Gappy\\\\Back-End\\\\Payor-View\\\\src\\\\components\\\\provider.jsx\";\nimport React, { Component } from \"react\";\nimport { paginate } from \"../utils/paginate\";\nimport Pagination from \"./common/pagination\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { HeaderMain } from \"./common/headerMain\";\nimport { Card, CardDeck, CardBody } from \"reactstrap\";\nimport MeasureBody from \"./common/measureBody\";\nimport { ProviderProfileCard } from \"./common/providerProfileCard\";\nimport axios from 'axios';\n\nclass Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      practice: {},\n      provider: {},\n      patients: [],\n      pageSize: 10,\n      currentPage: 1\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleCurrent = () => {\n      const cbp = this.state.provider.uncontrolled;\n      this.setState({\n        cbp\n      });\n    };\n\n    this.handlePerformance = () => {\n      const cbp = this.state.provider.controlled;\n      this.setState({\n        cbp\n      });\n    };\n  }\n\n  async componentDidMount() {\n    let provider = {};\n    let patientFiltered = [];\n    let identifier = this.props.match.params.id;\n    const {\n      data: practice\n    } = await axios.get(process.env.REACT_APP_API_PRACTICES);\n\n    for (let i = 0; i < practice.length; i++) {\n      const {\n        data: providers\n      } = await axios.get(process.env.REACT_APP_API_PRACTICES + practice[i].id + \"/providers\");\n\n      for (let j = 0; j < providers.length; j++) {\n        if (providers[j].id == identifier) {\n          provider = providers[j];\n          const {\n            data: patients\n          } = await axios.get(process.env.REACT_APP_API_PRACTICES + practice[i].id + \"/patients\");\n\n          for (let k = 0; k < patients.length; k++) {\n            if (patients[k].provider.id == identifier) patientFiltered.push(patients[k]);\n          }\n\n          this.setState({\n            practice: practice[i],\n            provider: provider,\n            patients: patientFiltered\n          });\n          return;\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      provider\n    } = this.state;\n    const {\n      length: count\n    } = this.state.patients;\n    const {\n      practice,\n      pageSize,\n      currentPage,\n      patients: allPatients\n    } = this.state;\n    const patients = paginate(allPatients, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt-5 mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(HeaderMain, {\n              title: provider.name,\n              className: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-weight-light\",\n              children: practice.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-left text-muted mt-5\",\n              children: \"Below is a detailed look into the information of the selected provider. On the left profile card, is listed the provider NPI, member count, and total open gaps. Under the measures heading, are listed only the measures that apply to the selected provider, clicking on the measure card will take you to the associated report. Under the members heading you will find the table of members associated with the selected provider.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-left text-muted\",\n              children: \"Legend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-circle text-primary\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2\",\n                children: \"Blue represents what BCBS-M believes are open gaps.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-circle text-success ml-5\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2\",\n                children: \"Green represents what gappy's are insights on the current open gaps.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row ml-1\",\n          children: [/*#__PURE__*/_jsxDEV(ProviderProfileCard, {\n            practice: practice.name,\n            NPI: practice.manager,\n            address: practice.address,\n            memberCnt: provider.patients,\n            gaps: provider.total_gaps,\n            open: provider.patients - provider.total_gaps,\n            risk: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-5 col-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"font-weight-light text-muted\",\n              children: \"Measures\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardDeck, {\n              className: \"\",\n              style: {\n                width: \"50%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(MeasureBody, {\n                    title: \"Blood Pressure\",\n                    badgeTitle: \"CBP\",\n                    badgeColor: \"danger\",\n                    value: provider.total_gaps,\n                    controlled: provider.patients - provider.cbp_gaps,\n                    valueTitle: provider.patients,\n                    link: `/cbp/${this.props.match.params.id}/provider`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-muted\",\n            children: \"Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"font-weight-light\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"font-weight-light\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"font-weight-light\",\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"font-weight-light\",\n                  children: \"DOB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"font-weight-light\",\n                  children: \"Last Visit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"font-weight-light\",\n                  children: \"Next Visit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"font-weight-light\",\n                  children: \"Gap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patient.first_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patient.last_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patient.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patient.dob\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patient.lastVisit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patient.nextVisit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-danger\",\n                  children: \"CBP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsCount: count,\n            pageSize: pageSize,\n            onPageChange: this.handlePageChange,\n            currentPage: currentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Provider;","map":{"version":3,"sources":["E:/Gappy/Back-End/Payor-View/src/components/provider.jsx"],"names":["React","Component","paginate","Pagination","Container","Row","Col","HeaderMain","Card","CardDeck","CardBody","MeasureBody","ProviderProfileCard","axios","Provider","state","practice","provider","patients","pageSize","currentPage","handlePageChange","page","setState","handleCurrent","cbp","uncontrolled","handlePerformance","controlled","componentDidMount","patientFiltered","identifier","props","match","params","id","data","get","process","env","REACT_APP_API_PRACTICES","i","length","providers","j","k","push","render","count","allPatients","name","manager","address","total_gaps","width","cbp_gaps","map","patient","first_name","last_name","dob","lastVisit","nextVisit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { HeaderMain } from \"./common/headerMain\";\r\nimport { Card, CardDeck, CardBody } from \"reactstrap\";\r\nimport MeasureBody from \"./common/measureBody\";\r\nimport { ProviderProfileCard } from \"./common/providerProfileCard\";\r\nimport axios from 'axios';\r\n\r\nclass Provider extends Component {\r\n  state = {\r\n    practice: {},\r\n    provider: {},\r\n    patients: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n  };\r\n\r\n  async componentDidMount() {\r\n\r\n    let provider = {};\r\n    let patientFiltered = [];\r\n\r\n    let identifier = this.props.match.params.id;\r\n\r\n    const { data: practice } = await axios.get(process.env.REACT_APP_API_PRACTICES);\r\n\r\n    for (let i = 0; i < practice.length; i++) {\r\n      const { data: providers } = await axios.get(process.env.REACT_APP_API_PRACTICES + practice[i].id + \"/providers\");\r\n\r\n      for (let j = 0; j < providers.length; j++) {\r\n        if (providers[j].id == identifier) {\r\n          provider = providers[j];\r\n        \r\n          const { data: patients } = await axios.get(process.env.REACT_APP_API_PRACTICES + practice[i].id + \"/patients\");\r\n          for (let k = 0; k < patients.length; k++) {\r\n            \r\n            if ( patients[k].provider.id == identifier )\r\n              patientFiltered.push(patients[k]);\r\n          }\r\n\r\n          this.setState({ practice: practice[i], provider: provider, patients: patientFiltered });\r\n\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleCurrent = () => {\r\n    const cbp = this.state.provider.uncontrolled;\r\n    this.setState({ cbp });\r\n  };\r\n\r\n  handlePerformance = () => {\r\n    const cbp = this.state.provider.controlled;\r\n    this.setState({ cbp });\r\n  };\r\n\r\n  render() {\r\n    const { provider } = this.state;\r\n\r\n    const { length: count } = this.state.patients;\r\n    const { practice, pageSize, currentPage, patients: allPatients } = this.state;\r\n\r\n    const patients = paginate(allPatients, currentPage, pageSize);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container className=\"mt-5 mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <HeaderMain title={provider.name} className=\"\" />\r\n              <h4 className=\"font-weight-light\">{practice.name}</h4>\r\n              <p className=\"text-left text-muted mt-5\">\r\n                Below is a detailed look into the information of the selected\r\n                provider. On the left profile card, is listed the provider\r\n                NPI, member count, and total open gaps. Under\r\n                the measures heading, are listed only the measures that apply to\r\n                the selected provider, clicking on the measure card will take\r\n                you to the associated report. Under the members heading you\r\n                will find the table of members associated with the selected\r\n                provider.\r\n              </p>\r\n              <p className=\"text-left text-muted\">Legend</p>\r\n              <i className=\"fa fa-circle text-primary\">\r\n                <span className=\"ml-2\">\r\n                  Blue represents what BCBS-M believes are open gaps.\r\n                </span>\r\n              </i>\r\n              <i className=\"fa fa-circle text-success ml-5\">\r\n                <span className=\"ml-2\">\r\n                  Green represents what gappy's are insights on the current open\r\n                  gaps.\r\n                </span>\r\n              </i>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <div>\r\n          <div className=\"row ml-1\">\r\n            <ProviderProfileCard\r\n              practice={practice.name}\r\n              NPI={practice.manager}\r\n              address={practice.address}\r\n              memberCnt={provider.patients}\r\n              gaps={provider.total_gaps}\r\n              open={provider.patients - provider.total_gaps}\r\n              risk=\"1\"\r\n            />\r\n            <div className=\"ml-5 col-sm\">\r\n              <h1 className=\"font-weight-light text-muted\">Measures</h1>\r\n              <CardDeck className=\"\" style={{ width: \"50%\" }}>\r\n                <Card className=\"mb-3\">\r\n                  <CardBody>\r\n                    <MeasureBody\r\n                      title=\"Blood Pressure\"\r\n                      badgeTitle=\"CBP\"\r\n                      badgeColor=\"danger\"\r\n                      value={provider.total_gaps}\r\n                      controlled={provider.patients - provider.cbp_gaps}\r\n                      valueTitle={provider.patients}\r\n                      link={`/cbp/${this.props.match.params.id}/provider`}\r\n                    />\r\n                  </CardBody>\r\n                </Card>\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"text-muted\">Members</h3>\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"font-weight-light\">First Name</th>\r\n                  <th className=\"font-weight-light\">Last Name</th>\r\n                  <th className=\"font-weight-light\">Address</th>\r\n                  <th className=\"font-weight-light\">DOB</th>\r\n                  <th className=\"font-weight-light\">Last Visit</th>\r\n                  <th className=\"font-weight-light\">Next Visit</th>\r\n                  <th className=\"font-weight-light\">Gap</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {patients.map((patient) => (\r\n                  <tr>\r\n                    <td>{patient.first_name}</td>\r\n                    <td>{patient.last_name}</td>\r\n                    <td>{patient.address}</td>\r\n                    <td>{patient.dob}</td>\r\n                    <td>{patient.lastVisit}</td>\r\n                    <td>{patient.nextVisit}</td>\r\n                    <td className=\"text-danger\">CBP</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Provider;\r\n"]},"metadata":{},"sourceType":"module"}